{"version":3,"sources":["state/actionTypes/tables.js","firebase.js","common/CellFunctions.js","state/actionTypes/cellsRows.js","state/actions/cellsRows.js","state/actionTypes/popups.js","state/actions/popups.js","components/tables_list/TablesListItem.js","state/actions/tables.js","components/tables_list/TablesList.js","components/table/cells/EmptyCell.js","components/table/cells/Cell.js","components/table/CellsRow.js","state/actionTypes/cell.js","state/actions/cell.js","components/table/utils/SelectedCellsInfo.js","components/table/utils/BigImage.js","components/table/utils/RemoveBigImage.js","components/table/utils/SelectedCellsFormat.js","components/table/Table.js","components/popup/TableInfoPopup.js","components/popup/ActionCellPopup.js","components/popup/NoTypeCellPopup.js","state/actionTypes/snackbar.js","state/actions/snackbar.js","components/popup/InfoCellPopup.js","components/popup/EmptyCellPopup.js","components/popup/ImageCellPopup.js","components/popup/FormatCellsPopup.js","components/home/Home.js","components/popup/AppSnackbar.js","state/actionTypes/user.js","components/sign-in/SignIn.js","state/actions/user.js","App.js","serviceWorker.js","state/reducers/snackbar.js","state/reducers/tables.js","state/reducers/popups.js","state/reducers/cellsRows.js","state/reducers/user.js","state/reducers/index.js","state/store.js","index.js"],"names":["GET_TABLES","GET_TABLES_SUCCESS","GET_TABLES_FAILED","ADD_TABLE","DELETE_TABLE","DELETE_TABLE_SUCCESS","DELETE_TABLE_FAILED","SET_SELECTED_TABLE","SET_BIG_IMAGE","SET_TABLE_JUST_CREATED_FALSE","REMOVE_BIG_IMAGE","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","auth","getEmptyTableCells","tableId","data","push","rowIndex","cells","getNoTypeCell","getEmptyCell","getFirstEmptyRow","i","getEmptyRow","columnIndex","type","color","topBorder","leftBorder","rightBorder","bottomBorder","GET_CELLS_ROWS","GET_CELLS_ROWS_SUCCESS","GET_CELLS_ROWS_FAILED","CLEAR_CELLS_ROWS","ADD_SELECTING_CELL","BEGIN_FORMAT_SELECTING","STOP_FORMAT_SELECTING","UPDATE_CELLS_ROWS","getCellsRows","dispatch","a","collection","doc","get","then","snapshot","forEach","cellsRow","id","e","error","boxUpdate","cellInfo","cellsRows","sort","b","smallestRow","bigestRow","length","smallestColumn","bigestColumn","rowsToUpdate","cellsToUpdate","rowsForRequest","cell","newCell","width","index","getFormattedRow","includes","row","sendUpdateRowRequest","simpleUpdate","bottom","top","left","right","update","mirrorCell","cellIndex","indexOf","cancelIsSelecting","SHOW_ACTION_POPUP","CLOSE_POPUP","SHOW_INFO_POPUP","SHOW_NO_TYPE_POPUP","SHOW_IMAGE_CELL_POPUP","SHOW_EMPTY_CELL_POPUP","SUBMIT_NO_TYPE_POPUP","BEGIN_CUSTOM_SELECT","CELL_TO_UPDATE_CUSTOM_CELL_SELECTED","CUSTOM_CELLS_SUBMITED","CANCEL_CUSTOM_CELLS","SHOW_FORMAT_CELLS_POPUP","cancelCustomCells","showImagePopup","closePopup","useStyles","makeStyles","buttonNormal","fontSize","textTransform","borderRadius","borderColor","borderWidth","margin","whiteSpace","borderStyle","padding","background","buttonSelected","cursos","TablesListItem","item","selectedTable","useSelector","store","tables","useState","isSelected","setIsSelected","classes","useDispatch","useEffect","Button","onClick","table","className","name","card","display","flexDirection","minHeight","maxWidth","flex","iconmenubutton","height","text","textAlign","TablesList","showTableNamePopup","ref","Card","map","verticalAlign","EmptyCell","undefined","bigImagePath","getDownloadURL","image","catch","console","log","setBigImage","showEmptyCellPopup","props","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","borderTopColor","isCustomCell","borderRightColor","borderLeftColor","borderBottomColor","borderLeftStyle","borderRightStyle","borderTopStyle","borderBottomStyle","alignContent","justifyContent","lineHeight","fontWeight","Cell","cellToUpdate","popups","isSelecting","addSelectingCell","cellToUpdateCustomCellSelected","showNoTypePopup","showInfoPopup","showActionPopup","sumAll","style","marginLeft","marginRight","src","alt","dangerouslySetInnerHTML","__html","replaceAll","CellsRow","cellToUpdateCustomCells","selectedCells","cellsRowLetsUpdate","letsUpdate","UPDATE_CELL","UPDATE_CELL_SUCCESS","UPDATE_CELL_FAILED","GET_CELL_FILE_SUCCESS","GET_CELL_NAME_FILE_SUCCESS","GET_CELL_IMAGE_FILE_SUCCESS","updateCell","cellsRowId","newRow","element","container","marginBottom","marginTop","cont","border","submitButton","cancelButton","SelectedCellsInfo","customCells","convertCustomCells","ix","split","join","BigImage","bigImage","bigImageCell","position","parseInt","bigImageTopMargin","bigImageHeight","bigImageLeftMargin","bigImageWidth","RemoveBigImage","description","cellContainer","deleteButton","formatButton","SelectedCellsFormat","Table","loading","setLoading","tableJustCreated","timeoutFinished","useCallback","setTimeout","size","CircularProgress","delete","deleteTable","popupbox","box","maxHeight","overflow","closeicon","content","cursor","button","TableInfoPopup","React","setName","setDescription","handleClose","TextField","required","fullWidth","label","variant","placeholder","value","onChange","event","target","multiline","rows","rowsMax","add","cellsRowValue","newCells","addTable","formControl","minWidth","header","noTypeButton","quillContainer","editor","ActionCellPopup","setSumAll","setColor","setRows","actionType","setActionType","typeActionType","setTypeActionType","typeActionTypeName","setTypeActionTypeName","setFontSize","actionTypes","typeActionTypes","actionTypesNames","typeActionTypesNames","FormControlLabel","control","Checkbox","checked","labelPlacement","theme","FormControl","InputLabel","Select","MenuItem","beginCustomSelect","makeEmptyButton","NoTypeCellPopup","isAction","setIsAction","submitNoTypePopup","SHOW_SNACKBAR","CLOSE_SNACKBAR","showSnackbar","message","fileNameContainer","removeFileButton","borderInputcontainer","borderText","InfoCellPopup","typeForAction","setTypeForAction","file","setFile","nameFile","setNameFile","setTop","setBottom","setLeft","setRight","baseTen","setBaseTen","baseThree","setBaseThree","baseHundred","setBaseHundred","baseFour","setBaseFour","databaseID","setDatabaseID","cellFile","cellNameFile","filePath","nameFilePath","getMetadata","showError","msg","extensions","loadedFile","onError","databaseId","put","updateInfoCell","notypeButton","EmptyCellPopup","fileButton","ImageCellPopup","setWidth","setHeight","leftMargin","setLeftMargin","topMargin","setTopMargin","cellImageFile","updateImageCell","FormatCellsPopup","isBoxBorder","setIsBoxBorder","submitSelectingCells","Home","isNamePopupOpen","setIsNamePopupOpen","isActionCellPopupOpen","actionPopupOpen","isEmptyCellPopupOpen","emptyCellPopupOpen","isInfoCellPopupOpen","infoPopupOpen","noTypeCellPopupOpen","noTypePopupOpen","imageCellPopupOpen","imagePopupOpen","formatCellsPopupOpen","user","history","useHistory","window","scrollTo","disableBodyScroll","document","enableBodyScroll","role","toggleNamePopup","Container","close","spacing","AppSnackbar","open","snackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","SIGN_IN","SIGN_IN_SUCCESS","SIGN_IN_FAILED","title","alignItems","SignIn","email","setEmail","password","setPassword","Typography","signInWithEmailAndPassword","uid","dbUser","signIn","App","CssBaseline","exact","path","component","Boolean","location","hostname","match","initialState","combineReducers","state","newTables","remove","splice","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","whitelist","pReducer","persistReducer","reducers","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.69b6a223.chunk.js","sourcesContent":["export const GET_TABLES = \"tables/GET_TABLES\";\nexport const GET_TABLES_SUCCESS = \"tables/GET_TABLES_SUCCESS\";\nexport const GET_TABLES_FAILED = \"tables/GET_TABLES_FAILED\";\nexport const ADD_TABLE = \"tables/ADD_TABLE\";\nexport const DELETE_TABLE = \"tables/DELETE_TABLE\";\nexport const DELETE_TABLE_SUCCESS = \"tables/DELETE_TABLE_SUCCESS\";\nexport const DELETE_TABLE_FAILED = \"tables/DELETE_TABLE_FAILED\";\nexport const SET_SELECTED_TABLE = \"tables/SET_SELECTED_TABLE\";\nexport const SET_BIG_IMAGE = \"tables/SET_BIG_IMAGE\";\nexport const SET_TABLE_JUST_CREATED_FALSE =\n  \"tables/SET_TABLE_JUST_CREATED_FALSE\";\nexport const REMOVE_BIG_IMAGE = \"tables/REMOVE_BIG_IMAGE\";\n","import firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBN83KPofzkMJ8I61kt8Fn8our5BSWfNjw\",\n  authDomain: \"firmus-medicus-a254b.firebaseapp.com\",\n  projectId: \"firmus-medicus-a254b\",\n  storageBucket: \"firmus-medicus-a254b.appspot.com\",\n  messagingSenderId: \"906887380621\",\n  appId: \"1:906887380621:web:d9ab0a949265376084ecc4\",\n  measurementId: \"G-506ZEGQVF1\",\n};\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const auth = firebase.auth();\n","export function getEmptyTableCells(tableId) {\n  const data = [];\n  data.push(getFirstEmptyRow(tableId));\n  for (let i = 1; i < 28; i++) {\n    data.push(getEmptyRow(i, tableId));\n  }\n  return data;\n}\nfunction getFirstEmptyRow(tableId) {\n  return {\n    tableId,\n    rowIndex: 0,\n    cells: [\n      getNoTypeCell(0, 0),\n      getNoTypeCell(0, 1),\n      getNoTypeCell(0, 2),\n      getNoTypeCell(0, 3),\n      getEmptyCell(4),\n      getEmptyCell(5),\n      getEmptyCell(6),\n      getNoTypeCell(0, 7),\n      getNoTypeCell(0, 8),\n      getNoTypeCell(0, 9),\n      getNoTypeCell(0, 10),\n    ],\n  };\n}\nfunction getEmptyRow(rowIndex, tableId) {\n  return {\n    tableId,\n    rowIndex,\n    cells: [\n      getNoTypeCell(rowIndex, 0),\n      getNoTypeCell(rowIndex, 1),\n      getNoTypeCell(rowIndex, 2),\n      getNoTypeCell(rowIndex, 3),\n      getNoTypeCell(rowIndex, 4),\n      getNoTypeCell(rowIndex, 5),\n      getNoTypeCell(rowIndex, 6),\n      getNoTypeCell(rowIndex, 7),\n      getNoTypeCell(rowIndex, 8),\n      getNoTypeCell(rowIndex, 9),\n      getNoTypeCell(rowIndex, 10),\n    ],\n  };\n}\nfunction getNoTypeCell(rowIndex, columnIndex) {\n  return {\n    type: \"notype\",\n    rowIndex,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"1\",\n    leftBorder: \"1\",\n    rightBorder: \"1\",\n    bottomBorder: \"1\",\n  };\n}\nfunction getEmptyCell(columnIndex) {\n  return {\n    type: \"empty\",\n    rowIndex: 0,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"1\",\n    leftBorder: \"1\",\n    rightBorder: \"1\",\n    bottomBorder: \"1\",\n  };\n}\n","export const GET_CELLS_ROWS = \"cellsRows/GET_CELLS_ROWS\";\nexport const GET_CELLS_ROWS_SUCCESS = \"cellsRows/GET_CELLS_ROWS_SUCCESS\";\nexport const GET_CELLS_ROWS_FAILED = \"cellsRows/GET_CELLS_ROWS_FAILED\";\nexport const CLEAR_CELLS_ROWS = \"cellsRows/CLEAR_CELLS_ROWS\";\nexport const ADD_SELECTING_CELL = \"cellsRows/ADD_SELECTING_CELL\";\nexport const BEGIN_FORMAT_SELECTING = \"cellsRows/BEGIN_FORMAT_SELECTING\";\nexport const STOP_FORMAT_SELECTING = \"cellsRows/STOP_FORMAT_SELECTING\";\nexport const SUBMIT_FORMAT_SELECTING = \"cellsRows/SUBMIT_FORMAT_SELECTING\";\nexport const UPDATE_CELLS_ROWS = \"cellsRows/UPDATE_CELLS_ROWS\";\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n} from \"../actionTypes/cellsRows\";\nimport { db } from \"../../firebase\";\n\nexport function getCellsRows(tableId) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELLS_ROWS });\n\n    try {\n      const ref = db.collection(\"tables\").doc(tableId).collection(\"cellsRows\");\n      ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((cellsRow) => {\n          data.push({ ...cellsRow.data(), id: cellsRow.id });\n        });\n        dispatch({ type: GET_CELLS_ROWS_SUCCESS, data: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELLS_ROWS_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function submitSelectingCells(cellInfo, cells, cellsRows) {\n  return async (dispatch) => {\n    if (cellInfo.isBoxBorder) {\n      boxUpdate(dispatch, cellInfo, cells, cellsRows);\n    } else {\n      simpleUpdate(dispatch, cellInfo, cells, cellsRows);\n    }\n  };\n}\n\nconst boxUpdate = (dispatch, cellInfo, cells, cellsRows) => {\n  cells.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n  const smallestRow = cells[0].rowIndex;\n  const bigestRow =\n    cells.length > 1 ? cells[cells.length - 1].rowIndex : smallestRow;\n  cells.sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1));\n  const smallestColumn = cells[0].columnIndex;\n  const bigestColumn =\n    cells.length > 1 ? cells[cells.length - 1].columnIndex : smallestColumn;\n\n  const rowsToUpdate = [...cellsRows];\n  const cellsToUpdate = [];\n  const rowsForRequest = [];\n  cells.forEach((cell) => {\n    const newCell = {\n      ...cell,\n      color: cellInfo.color !== \"\" ? cellInfo.color : cell.color,\n      bottomBorder:\n        cell.rowIndex === bigestRow ? cellInfo.width : cell.bottomBorder,\n      topBorder:\n        cell.rowIndex === smallestRow ? cellInfo.width : cell.topBorder,\n      leftBorder:\n        cell.columnIndex === smallestColumn ? cellInfo.width : cell.leftBorder,\n      rightBorder:\n        cell.columnIndex === bigestColumn ? cellInfo.width : cell.rightBorder,\n    };\n    cellsToUpdate.push(newCell);\n  });\n  cellsToUpdate.forEach((cell, index) => {\n    rowsToUpdate[cell.rowIndex] = getFormattedRow(\n      cell,\n      cells[index],\n      rowsToUpdate[cell.rowIndex]\n    );\n    if (!rowsForRequest.includes(cell.rowIndex)) {\n      rowsForRequest.push(cell.rowIndex);\n    }\n  });\n  rowsToUpdate.forEach((row) => {\n    if (rowsForRequest.includes(row.rowIndex)) {\n      sendUpdateRowRequest(row);\n    }\n  });\n  dispatch({ type: UPDATE_CELLS_ROWS, cellsRows: rowsToUpdate });\n};\n\nconst simpleUpdate = (dispatch, cellInfo, cells, cellsRows) => {\n  const rowsToUpdate = [...cellsRows];\n  const cellsToUpdate = [];\n  const rowsForRequest = [];\n  cells.forEach((cell) => {\n    const newCell = {\n      ...cell,\n      color: cellInfo.color !== \"\" ? cellInfo.color : cell.color,\n      bottomBorder:\n        cellInfo.bottom !== \"\" ? cellInfo.bottom : cell.bottomBorder,\n      topBorder: cellInfo.top !== \"\" ? cellInfo.top : cell.topBorder,\n      leftBorder: cellInfo.left !== \"\" ? cellInfo.left : cell.leftBorder,\n      rightBorder: cellInfo.right !== \"\" ? cellInfo.right : cell.rightBorder,\n    };\n    cellsToUpdate.push(newCell);\n  });\n  cellsToUpdate.forEach((cell, index) => {\n    rowsToUpdate[cell.rowIndex] = getFormattedRow(\n      cell,\n      cells[index],\n      rowsToUpdate[cell.rowIndex]\n    );\n    if (!rowsForRequest.includes(cell.rowIndex)) {\n      rowsForRequest.push(cell.rowIndex);\n    }\n  });\n  rowsToUpdate.forEach((row) => {\n    if (rowsForRequest.includes(row.rowIndex)) {\n      sendUpdateRowRequest(row);\n    }\n  });\n  dispatch({ type: UPDATE_CELLS_ROWS, cellsRows: rowsToUpdate });\n};\n\nconst sendUpdateRowRequest = (row) => {\n  db.collection(\"tables\")\n    .doc(row.tableId)\n    .collection(\"cellsRows\")\n    .doc(row.id)\n    .update({ cells: row.cells });\n};\n\nconst getFormattedRow = (cell, mirrorCell, row) => {\n  const cellIndex = row.cells.indexOf(mirrorCell);\n  row.cells[cellIndex] = cell;\n  return row;\n};\n\nexport function addSelectingCell(cell) {\n  return async (dispatch) => {\n    dispatch({ type: ADD_SELECTING_CELL, cell });\n  };\n}\n\nexport function setIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_FORMAT_SELECTING });\n  };\n}\n\nexport function cancelIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: STOP_FORMAT_SELECTING });\n  };\n}\n","export const SHOW_ACTION_POPUP = \"popups/SHOW_ACTION_POPUP\";\nexport const CLOSE_POPUP = \"popups/CLOSE_ACTION_POPUP\";\nexport const SHOW_INFO_POPUP = \"popups/SHOW_INFO_POPUP\";\nexport const SHOW_NO_TYPE_POPUP = \"popups/SHOW_NO_TYPE_POPUP\";\nexport const SHOW_IMAGE_CELL_POPUP = \"popups/SHOW_IMAGE_CELL_POPUP\";\nexport const SHOW_EMPTY_CELL_POPUP = \"popups/SHOW_EMPTY_CELL_POPUP\";\nexport const SUBMIT_NO_TYPE_POPUP = \"popups/SUBMIT_NO_TYPE_POPUP\";\nexport const BEGIN_CUSTOM_SELECT = \"popups/BEGIN_CUSTOM_SELECT\";\nexport const CELL_TO_UPDATE_CUSTOM_CELL_SELECTED =\n  \"popups/CELL_TO_UPDATE_CUSTOM_CELL_SELECTED\";\nexport const CUSTOM_CELLS_SUBMITED = \"popups/CUSTOM_CELLS_SUBMITED\";\nexport const CANCEL_CUSTOM_CELLS = \"popups/CANCEL_CUSTOM_CELLS\";\nexport const SHOW_FORMAT_CELLS_POPUP = \"popups/SHOW_FORMAT_CELLS_POPUP\";\n","import {\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SUBMIT_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n} from \"../actionTypes/popups\";\n\nexport function beginCustomSelect(cell) {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_CUSTOM_SELECT, cell });\n  };\n}\n\nexport function cancelCustomCells() {\n  return async (dispatch) => {\n    dispatch({ type: CANCEL_CUSTOM_CELLS });\n  };\n}\n\nexport function cellToUpdateCustomCellSelected(cell) {\n  return async (dispatch) => {\n    dispatch({ type: CELL_TO_UPDATE_CUSTOM_CELL_SELECTED, cell });\n  };\n}\n\nexport function showFormatCellsPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_FORMAT_CELLS_POPUP });\n  };\n}\n\nexport function showImagePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_IMAGE_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showActionPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_ACTION_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showEmptyCellPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_EMPTY_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function submitNoTypePopup(isAction) {\n  return async (dispatch) => {\n    dispatch({ type: SUBMIT_NO_TYPE_POPUP, isAction });\n  };\n}\n\nexport function showNoTypePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_NO_TYPE_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showInfoPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_INFO_POPUP, cell, cellsRow });\n  };\n}\n\nexport function closePopup() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { setSelectedTable } from \"../../state/actions/tables\";\nimport { cancelIsSelecting } from \"../../state/actions/cellsRows\";\nimport { cancelCustomCells } from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  buttonNormal: {\n    color: \"black\",\n    fontSize: \"1em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    whiteSpace: \"wrap\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  buttonSelected: {\n    color: \"white\",\n    background: \"black\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n      cursos: \"auto\",\n    },\n  },\n});\n\nconst TablesListItem = ({ item }) => {\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const [isSelected, setIsSelected] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsSelected(selectedTable && selectedTable.id === item.id);\n  }, [setIsSelected, selectedTable, item]);\n\n  const selectTable = () => {\n    dispatch(setSelectedTable(item));\n    dispatch(cancelIsSelecting());\n    dispatch(cancelCustomCells());\n  };\n\n  return (\n    <Button\n      onClick={isSelected ? null : selectTable}\n      className={isSelected ? classes.buttonSelected : classes.buttonNormal}\n    >\n      {item.name}\n    </Button>\n  );\n};\nTablesListItem.propTypes = {\n  item: PropTypes.object,\n};\nexport default TablesListItem;\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\nimport { db, storage } from \"../../firebase\";\nimport { getEmptyTableCells } from \"../../common/CellFunctions\";\n\nexport function removeBigImage() {\n  return async (dispatch) => {\n    dispatch({ type: REMOVE_BIG_IMAGE });\n  };\n}\n\nexport function getTables() {\n  return async (dispatch) => {\n    dispatch({ type: GET_TABLES });\n\n    try {\n      const ref = db.collection(\"tables\");\n      await ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((table) => {\n          data.push({ ...table.data(), id: table.id });\n        });\n        dispatch({ type: GET_TABLES_SUCCESS, tables: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_TABLES_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setTableJustCreatedFalse() {\n  return async (dispatch) => {\n    dispatch({\n      type: SET_TABLE_JUST_CREATED_FALSE,\n    });\n  };\n}\n\nexport function addTable(name, description) {\n  return async (dispatch) => {\n    const ref = db.collection(\"tables\");\n    await ref.add({ name, description }).then((table) => {\n      const cellsRows = getEmptyTableCells(table.id);\n      cellsRows.forEach((cellsRow) => {\n        ref\n          .doc(table.id)\n          .collection(\"cellsRows\")\n          .add({\n            tableId: cellsRow.tableId,\n            rowIndex: cellsRow.rowIndex,\n          })\n          .then((cellsRowValue) => {\n            const newCells = [];\n            cellsRow.cells.forEach((cell) =>\n              newCells.push({\n                ...cell,\n                tableId: table.id,\n                cellsRowId: cellsRowValue.id,\n              })\n            );\n            ref\n              .doc(table.id)\n              .collection(\"cellsRows\")\n              .doc(cellsRowValue.id)\n              .update({ cells: newCells });\n          });\n      });\n\n      dispatch({\n        type: ADD_TABLE,\n        table: { id: table.id, name, description },\n      });\n    });\n  };\n}\n\nexport function deleteTable(tableId, cellsRows) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_TABLE });\n    try {\n      var ref = db.collection(\"tables\").doc(tableId);\n      cellsRows.forEach((row) => {\n        ref.collection(\"cellsRows\").doc(row.id).delete();\n      });\n      ref.delete();\n      dispatch({ type: DELETE_TABLE_SUCCESS, tableId });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: DELETE_TABLE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setBigImage(cell) {\n  return async (dispatch) => {\n    storage\n      .ref(cell.bigImagePath)\n      .getDownloadURL()\n      .then((image) => {\n        dispatch({ type: SET_BIG_IMAGE, image, cell });\n      })\n      .catch(() => {\n        console.log(\"error\");\n      });\n  };\n}\n\nexport function setSelectedTable(table) {\n  return async (dispatch) => {\n    dispatch({ type: SET_SELECTED_TABLE, table });\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { Card, Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport TablesListItem from \"./TablesListItem\";\nimport { useEffect } from \"react\";\nimport { getTables } from \"../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    maxWidth: \"150px\",\n    flex: 1,\n  },\n  iconmenubutton: {\n    height: \"35px\",\n    color: \"black\",\n    fontSize: \"2em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"#FFFFFF\",\n    borderWidth: \"1px\",\n    margin: \"0px auto 5px auto\",\n    borderStyle: \"solid\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  text: {\n    textAlign: \"center\",\n    margin: \"5px\",\n  },\n});\n\nconst TablesList = ({ showTableNamePopup }) => {\n  const classes = useStyles();\n  const tables = useSelector((store) => store.tables.tables);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTables());\n  }, [dispatch]);\n\n  return (\n    <Card className={classes.card}>\n      <h3 className={classes.text}>Tables</h3>\n      <Button className={classes.iconmenubutton} onClick={showTableNamePopup}>\n        <AddIcon />\n      </Button>\n      {tables.map((item) => (\n        <TablesListItem item={item} key={tables.indexOf(item)} />\n      ))}\n    </Card>\n  );\n};\nTablesList.propTypes = {\n  showTableNamePopup: PropTypes.func,\n};\nexport default TablesList;\n","import { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {\n  showEmptyCellPopup,\n  showImagePopup,\n} from \"../../../state/actions/popups\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { setBigImage } from \"../../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  cell: {\n    height: \"50px\",\n    width: \"100px\",\n    display: \"table-cell\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n  },\n});\n\nconst EmptyCell = ({ cell, cellsRow }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell && cell.bigImagePath !== undefined) {\n      dispatch(setBigImage(cell));\n    }\n  }, [cell, dispatch]);\n\n  const action = () => {\n    if (cell.type === \"empty\") {\n      dispatch(showEmptyCellPopup(cell, cellsRow));\n    } else {\n      dispatch(showImagePopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.type === \"empty\" ? \"\" : \"image\"}\n    </div>\n  );\n};\nEmptyCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n};\nexport default EmptyCell;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  showActionPopup,\n  showInfoPopup,\n  showNoTypePopup,\n  cellToUpdateCustomCellSelected,\n} from \"../../../state/actions/popups\";\nimport { addSelectingCell } from \"../../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  cell: {\n    background: (props) => props.color,\n    borderLeftWidth: (props) => props.left + \"px\",\n    borderRightWidth: (props) => props.right + \"px\",\n    borderTopWidth: (props) => props.top + \"px\",\n    borderBottomWidth: (props) => props.bottom + \"px\",\n    borderTopColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderRightColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderLeftColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderBottomColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    height: \"50px\",\n    width: \"100px\",\n    borderLeftStyle: \"solid\",\n    borderRightStyle: \"solid\",\n    borderTopStyle: \"solid\",\n    borderBottomStyle: \"solid\",\n    alignContent: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    display: \"table-cell\",\n    verticalAlign: \"middle\",\n  },\n  text: {\n    fontSize: \"10px\",\n    margin: \"0px\",\n    lineHeight: \"1.1\",\n    fontWeight: \"bold\",\n  },\n});\n\nconst Cell = ({ cell, cellsRow, isCustomCell }) => {\n  const classes = useStyles({\n    left: cell.leftBorder,\n    right: cell.rightBorder,\n    top: cell.topBorder,\n    bottom: cell.bottomBorder,\n    color: cell.color,\n    isCustomCell,\n  });\n  const cellToUpdate = useSelector((store) => store.popups.cellToUpdate);\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const action = () => {\n    if (isSelecting) {\n      dispatch(addSelectingCell(cell));\n    } else if (cellToUpdate !== undefined) {\n      if (\n        !(\n          cellToUpdate.cell.columnIndex === cell.columnIndex &&\n          cellToUpdate.cell.rowIndex === cell.rowIndex\n        ) &&\n        cell.type === \"info\"\n      ) {\n        dispatch(cellToUpdateCustomCellSelected(cell));\n      }\n    } else if (cell.type === \"notype\") {\n      dispatch(showNoTypePopup(cell, cellsRow));\n    } else if (cell.type === \"info\") {\n      dispatch(showInfoPopup(cell, cellsRow));\n    } else if (cell.type === \"action\") {\n      dispatch(showActionPopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.sumAll && (\n        <img\n          style={{\n            width: \"25px\",\n            height: \"25px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n          src={\"/dao.png\"}\n          alt=\"all\"\n        />\n      )}\n      {cell.name && !cell.sumAll && (\n        <div\n          dangerouslySetInnerHTML={{\n            __html: cell.name\n              .replaceAll(\"<p>\", \"<span>\")\n              .replaceAll(\"</p>\", \"</span><br/>\"),\n          }}\n        ></div>\n      )}\n    </div>\n  );\n};\nCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n  isCustomCell: PropTypes.bool,\n};\nexport default Cell;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nimport EmptyCell from \"./cells/EmptyCell\";\nimport Cell from \"./cells/Cell\";\n\nconst useStyles = makeStyles({\n  row: {\n    display: \"table-row\",\n  },\n});\n\nconst CellsRow = ({ cellsRow }) => {\n  const classes = useStyles();\n  const cellToUpdateCustomCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRowLetsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  return (\n    <div className={classes.row}>\n      {letsUpdate && cellsRowLetsUpdate && <div></div>}\n      {cellsRow &&\n        cellsRow.cells &&\n        cellsRow.cells\n          .sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1))\n          .map((cell) =>\n            cell.type === \"empty\" || cell.type === \"image\" ? (\n              <EmptyCell\n                cell={cell}\n                cellsRow={cellsRow}\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            ) : (\n              <Cell\n                cell={cell}\n                cellsRow={cellsRow}\n                isCustomCell={\n                  (cellToUpdateCustomCells &&\n                    cellToUpdateCustomCells.includes(cell)) ||\n                  (selectedCells && selectedCells.includes(cell))\n                }\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            )\n          )}\n    </div>\n  );\n};\nCellsRow.propTypes = {\n  cellsRow: PropTypes.object,\n};\nexport default CellsRow;\n","export const UPDATE_CELL = \"cell/UPDATE_CELL\";\nexport const UPDATE_CELL_SUCCESS = \"cell/UPDATE_CELL_SUCCESS\";\nexport const UPDATE_CELL_FAILED = \"cell/UPDATE_CELL_FAILED\";\nexport const GET_CELL_FILE = \"cell/GET_CELL_FILE\";\nexport const GET_CELL_FILE_SUCCESS = \"cell/GET_CELL_FILE_SUCCESS\";\nexport const GET_CELL_FILE_FAILED = \"cell/GET_CELL_FILE_FAILED\";\nexport const GET_CELL_NAME_FILE = \"cell/GET_CELL_NAME_FILE\";\nexport const GET_CELL_NAME_FILE_SUCCESS = \"cell/GET_CELL_NAME_FILE_SUCCESS\";\nexport const GET_CELL_NAME_FILE_FAILED = \"cell/GET_CELL_NAME_FILE_FAILED\";\nexport const GET_CELL_IMAGE_FILE = \"cell/GET_CELL_IMAGE_FILE\";\nexport const GET_CELL_IMAGE_FILE_SUCCESS = \"cell/GET_CELL_IMAGE_FILE_SUCCESS\";\nexport const GET_CELL_IMAGE_FILE_FAILED = \"cell/GET_CELL_IMAGE_FILE_FAILED\";","import { db, storage } from \"../../firebase\";\nimport {\n  UPDATE_CELL,\n  UPDATE_CELL_SUCCESS,\n  UPDATE_CELL_FAILED,\n  GET_CELL_FILE,\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_FILE_FAILED,\n  GET_CELL_NAME_FILE,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_FAILED,\n  GET_CELL_IMAGE_FILE,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_FAILED,\n} from \"../actionTypes/cell\";\nimport { CLOSE_POPUP, CUSTOM_CELLS_SUBMITED } from \"../actionTypes/popups\";\n\nexport function updateCell(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== cell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(cell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell,\n      });\n      dispatch({ type: CUSTOM_CELLS_SUBMITED });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function updateImageCell(cell, file, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let bigImagePath =\n        \"/\" +\n        cell.tableId +\n        \"/\" +\n        cell.cellsRowId +\n        \"/\" +\n        cell.columnIndex +\n        \"/\" +\n        file.name;\n      await storage.ref(bigImagePath).put(file);\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, bigImagePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        e,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function getCellImageFile(bigImagePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_IMAGE_FILE });\n    try {\n      storage\n        .ref(bigImagePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_IMAGE_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_IMAGE_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellNameFile(nameFilePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_NAME_FILE });\n    try {\n      storage\n        .ref(nameFilePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_NAME_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_NAME_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellFile(filePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_FILE });\n    try {\n      storage\n        .ref(filePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function updateInfoCell(cell, file, nameFile, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let filePath = \"\";\n      let nameFilePath = \"\";\n      if (file !== undefined) {\n        filePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          file.name;\n        await storage.ref(filePath).put(file);\n      } else if (cell.filePath && cell.filePath !== \"\") {\n        filePath = cell.filePath;\n      }\n      if (nameFile !== undefined) {\n        nameFilePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          nameFile.name;\n        await storage.ref(nameFilePath).put(nameFile);\n      } else if (cell.nameFilePath && cell.nameFilePath !== \"\") {\n        nameFilePath = cell.nameFilePath;\n      }\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, filePath, nameFilePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      console.log(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      console.log(error);\n      console.log(e);\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cancelCustomCells } from \"../../../state/actions/popups\";\nimport { updateCell } from \"../../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  container: {\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    background: \"white\",\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsInfo = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const customCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const cell = useSelector((store) => store.popups.cellToUpdate);\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const submitCustomCellsF = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell.cell,\n          customCells: convertCustomCells(customCells),\n        },\n        cellsRow\n      )\n    );\n  };\n\n  const convertCustomCells = (cells) => {\n    const data = [];\n    cells.forEach((element) => {\n      data.push({\n        columnIndex: element.columnIndex,\n        rowIndex: element.rowIndex,\n      });\n    });\n    return data;\n  };\n\n  const cancelCustomCellsF = () => {\n    dispatch(cancelCustomCells());\n  };\n\n  const convertCustomCellsName = (text) => {\n    return text.split(\"<br />\").join(\" \");\n  };\n\n  return customCells !== undefined ? (\n    <div className={classes.container}>\n      {letsUpdate && <div></div>}\n      <h2>Select cells</h2>\n      <div className={classes.cont}>\n        {customCells.map((cell, ix) => (\n          <p key={ix} className={classes.text}>\n            {cell.name === null ? \"\" : convertCustomCellsName(cell.name)}\n          </p>\n        ))}\n        {customCells.length === 0 ? (\n          <p className={classes.text}>No cells are selected</p>\n        ) : (\n          <p />\n        )}\n      </div>\n      <Button className={classes.cancelButton} onClick={cancelCustomCellsF}>\n        Cancel\n      </Button>\n      <Button className={classes.submitButton} onClick={submitCustomCellsF}>\n        Submit custom cells\n      </Button>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\nexport default SelectedCellsInfo;\n","import { useSelector } from \"react-redux\";\n\nconst BigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const cell = useSelector((store) => store.tables.bigImageCell);\n\n  return image !== undefined ? (\n    <img\n      style={{\n        position: \"absolute\",\n        top: `${\n          cell.rowIndex * 50 +\n          140 +\n          64 +\n          56 +\n          parseInt(cell.bigImageTopMargin) +\n          25 -\n          cell.bigImageHeight / 2\n        }px`,\n        left: `${\n          cell.columnIndex * 100 +\n          180 +\n          parseInt(cell.bigImageLeftMargin) +\n          50 -\n          cell.bigImageWidth / 2\n        }px`,\n      }}\n      src={image}\n      height={cell.bigImageHeight}\n      width={cell.bigImageWidth}\n      alt=\"big\"\n    />\n  ) : (\n    <div></div>\n  );\n};\nexport default BigImage;\n","import { Button } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeBigImage } from \"../../../state/actions/tables\";\n\nconst RemoveBigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const dispatch = useDispatch();\n\n  const removeBigImageFromTable = () => {\n    dispatch(removeBigImage());\n  };\n\n  return image !== undefined ? (\n    <Button\n      style={{\n        color: \"white\",\n        background: \"red\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\",\n      }}\n      onClick={removeBigImageFromTable}\n    >\n      TEMPORARILY REMOVE BIG IMAGE ( UNTIL REFRESH )\n    </Button>\n  ) : (\n    <div></div>\n  );\n};\nexport default RemoveBigImage;\n","import { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cancelIsSelecting } from \"../../../state/actions/cellsRows\";\nimport { showFormatCellsPopup } from \"../../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"20px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsFormat = () => {\n  const classes = useStyles();\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const letsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n  const dispatch = useDispatch();\n\n  const convertCellsName = (text) => {\n    return text ? text.split(\"<br />\").join(\" \") : \"\";\n  };\n\n  const handleFormat = () => {\n    dispatch(showFormatCellsPopup());\n  };\n\n  const handleCancel = () => {\n    dispatch(cancelIsSelecting());\n  };\n\n  return (\n    <div>\n      <Button className={classes.formatButton} onClick={handleFormat}>\n        Format Cells\n      </Button>\n      <Button className={classes.cancelButton} onClick={handleCancel}>\n        CANCEL\n      </Button>\n      <h2>Select cells</h2>\n      {letsUpdate && <div></div>}\n      <div className={classes.cont}>\n        {selectedCells &&\n          selectedCells.map((cell, ix) => (\n            <p key={ix} className={classes.text}>\n              {cell.name === null ? \"\" : convertCellsName(cell.name)}\n            </p>\n          ))}\n      </div>\n      {!selectedCells || selectedCells.length === 0 ? (\n        <p>No cells are selected</p>\n      ) : (\n        <span />\n      )}\n    </div>\n  );\n};\nexport default SelectedCellsFormat;\n","import { Button, Card, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCellsRows, setIsSelecting } from \"../../state/actions/cellsRows\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport CellsRow from \"./CellsRow\";\nimport {\n  deleteTable,\n  setTableJustCreatedFalse,\n} from \"../../state/actions/tables\";\nimport SelectedCellsInfo from \"./utils/SelectedCellsInfo\";\nimport BigImage from \"./utils/BigImage\";\nimport RemoveBigImage from \"./utils/RemoveBigImage\";\nimport SelectedCellsFormat from \"./utils/SelectedCellsFormat\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    height: \"20px\",\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst Table = ({ table }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n  const tableJustCreated = useSelector(\n    (store) => store.tables.tableJustCreated\n  );\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const timeoutFinished = useCallback(() => {\n    dispatch(getCellsRows(table.id));\n    dispatch(setTableJustCreatedFalse());\n  }, [dispatch, table]);\n\n  useEffect(() => {\n    if (!tableJustCreated) {\n      if (!loading) {\n        dispatch(getCellsRows(table.id));\n      }\n      setLoading(false);\n    } else {\n      setLoading(true);\n      setTimeout(timeoutFinished, 3000);\n    }\n  }, [dispatch, table, tableJustCreated, loading, timeoutFinished]);\n\n  const handleDelete = () => {\n    dispatch(deleteTable(table.id, cellsRows));\n  };\n\n  const handleSelect = () => {\n    dispatch(setIsSelecting());\n  };\n\n  const getElement = (size) => {\n    return (\n      <p className={classes.description} style={{ height: `${20 * size}px` }} />\n    );\n  };\n\n  return (\n    <Card className={classes.card}>\n      <h2 className={classes.name}>{table.name}</h2>\n      {table.description.split(\"<br />\").map((text, ix) => (\n        <p className={classes.description} key={ix}>\n          {text}\n        </p>\n      ))}\n      {table.description.split(\"<br />\").length < 4\n        ? getElement(4 - table.description.split(\"<br />\").length)\n        : \"\"}\n      <RemoveBigImage />\n      <SelectedCellsInfo />\n      {loading && <CircularProgress />}\n      {!loading && (\n        <div>\n          {!isSelecting && (\n            <Button className={classes.formatButton} onClick={handleSelect}>\n              Select Cells\n            </Button>\n          )}\n          {isSelecting && <SelectedCellsFormat />}\n          <div className={classes.cellContainer}>\n            <BigImage />\n            {cellsRows.map((cellsRow) => (\n              <CellsRow cellsRow={cellsRow} key={cellsRows.indexOf(cellsRow)} />\n            ))}\n          </div>\n          <div>\n            <Button className={classes.deleteButton} onClick={handleDelete}>\n              Delete\n            </Button>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\nTable.propTypes = {\n  table: PropTypes.object,\n};\nexport default Table;\n","import React from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\n\nimport { addTable } from \"../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst TableInfoPopup = (props) => {\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(addTable(name, description.split(\"\\n\").join(\"<br />\")));\n    props.handleClose();\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={props.handleClose}>\n          x\n        </span>\n        <h2>Create table</h2>\n        <TextField\n          required\n          fullWidth\n          label=\"Name\"\n          name=\"name\"\n          variant=\"outlined\"\n          placeholder=\"Name\"\n          value={name}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleNameChange}\n        />\n        <TextField\n          required\n          fullWidth\n          label=\"Description\"\n          name=\"description\"\n          variant=\"outlined\"\n          multiline={true}\n          rows={4}\n          rowsMax={4}\n          placeholder=\"Description\"\n          value={description}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleDescriptionChange}\n        />\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default TableInfoPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useEffect } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nimport { beginCustomSelect, closePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n});\n\nconst ActionCellPopup = () => {\n  const [sumAll, setSumAll] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [rows, setRows] = React.useState(\"\");\n  const [actionType, setActionType] = React.useState(\"\");\n  const [typeActionType, setTypeActionType] = React.useState(\"\");\n  const [typeActionTypeName, setTypeActionTypeName] = React.useState(\"\");\n  const [fontSize, setFontSize] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell.sumAll) {\n      setSumAll(cell.sumAll);\n    } else {\n      setName(cell.name === undefined ? \"\" : cell.name);\n      setFontSize(cell.fontSize);\n      setActionType(cell.actionType);\n      setTypeActionType(cell.typeActionType);\n      setTypeActionTypeName(cell.typeActionTypeName);\n      setColor(cell.color);\n      setRows(cell.rows);\n    }\n  }, [cell]);\n\n  const actionTypes = [\"selectrows\", \"selecttype\", \"custom\"];\n  const typeActionTypes = [\"selecttypeall\", \"selecttyperows\"];\n  const actionTypesNames = [\"Select Rows\", \"Select Type\", \"Custom\"];\n  const typeActionTypesNames = [\"Select All Cells of Type\", \"Select Type Rows\"];\n\n  const handleNameChange = (value) => {\n    setName(value);\n  };\n\n  const handleTypeNameChange = (event) => {\n    setTypeActionTypeName(event.target.value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (actionType === \"custom\") {\n      dispatch(\n        beginCustomSelect({\n          cell: {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            fontSize: fontSize === undefined ? \"\" : fontSize,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n          },\n        })\n      );\n    } else {\n      dispatch(\n        updateCell(\n          {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            fontSize: fontSize === undefined ? \"\" : fontSize,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n          },\n          cellsRow\n        )\n      );\n      handleClose();\n    }\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          color: \"white\",\n          actionType: \"\",\n          typeActionType: \"\",\n          typeActionTypeName: \"\",\n          fontSize: \"\",\n          rows: \"\",\n          sumAll: false,\n          type: \"notype\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleRowsChange = (event) => {\n    setRows(event.target.value);\n  };\n\n  const handleActionTypeChange = (event) => {\n    setActionType(event.target.value);\n  };\n\n  const handleTypeActionTypeChange = (event) => {\n    setTypeActionType(event.target.value);\n  };\n\n  const handleSumAll = () => {\n    setSumAll(!sumAll);\n  };\n\n  const handleFontSize = (event) => {\n    setFontSize(event.target.value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Action</h2>\n        <div>\n          <FormControlLabel\n            value={sumAll}\n            control={<Checkbox color=\"default\" onClick={handleSumAll} />}\n            label=\"Sum all?\"\n            checked={sumAll}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!sumAll && (\n          <div>\n            <div className={classes.quillContainer}>\n              <p className={classes.text}>Enter name:</p>\n              <ReactQuill\n                theme=\"snow\"\n                className={classes.editor}\n                value={name}\n                onChange={handleNameChange}\n              />\n            </div>\n            <h4 style={{ marginTop: \"60px\" }}>\n              Hint: Standard mobile font is 12. 3 Rows can pass into cell.\n            </h4>\n            <TextField\n              fullWidth\n              label=\"Font size\"\n              name=\"font_size\"\n              variant=\"outlined\"\n              placeholder=\"Font size\"\n              value={fontSize}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleFontSize}\n            />\n            <h3>Format cell</h3>\n            <TextField\n              fullWidth\n              label=\"Color\"\n              name=\"color\"\n              variant=\"outlined\"\n              placeholder=\"Cell color\"\n              value={color}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleColorChange}\n            />\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"label\">Action Type</InputLabel>\n              <Select\n                id=\"select\"\n                value={actionType || \"\"}\n                onChange={handleActionTypeChange}\n              >\n                {actionTypes.map((item, ix) => (\n                  <MenuItem key={item} value={item}>\n                    {actionTypesNames[ix]}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            {actionType === actionTypes[1] && (\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"label\">Action Type</InputLabel>\n                <Select\n                  id=\"select\"\n                  value={typeActionType || \"\"}\n                  onChange={handleTypeActionTypeChange}\n                >\n                  {typeActionTypes.map((item, ix) => (\n                    <MenuItem key={item} value={item}>\n                      {typeActionTypesNames[ix]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n            {actionType === actionTypes[1] && (\n              <TextField\n                fullWidth\n                label=\"Type name\"\n                name=\"Type name\"\n                variant=\"outlined\"\n                placeholder=\"Enter type name\"\n                value={typeActionTypeName || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleTypeNameChange}\n              />\n            )}\n            {(actionType === actionTypes[0] ||\n              (actionType === actionTypes[1] &&\n                typeActionType === typeActionTypes[1])) && (\n              <TextField\n                fullWidth\n                label=\"Rows\"\n                name=\"rows\"\n                variant=\"outlined\"\n                placeholder=\"Enter row indexes separated with Whitespaces ( Begining with 0 )\"\n                value={rows || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleRowsChange}\n              />\n            )}\n          </div>\n        )}\n        {cell.type !== \"notype\" && (\n          <Button className={classes.noTypeButton} onClick={handleNoTypeSubmit}>\n            MAKE NO TYPE\n          </Button>\n        )}\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Checkbox, FormControlLabel, makeStyles } from \"@material-ui/core\";\n\nimport { closePopup, submitNoTypePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst NoTypeCellPopup = () => {\n  const [isAction, setIsAction] = React.useState(false);\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleIsAction = () => {\n    setIsAction(!isAction);\n  };\n\n  const handleSubmit = () => {\n    dispatch(submitNoTypePopup(isAction));\n  };\n\n  const handleMakeEmptySubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"empty\" }, cellsRow));\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Select cell type</h2>\n        <div>\n          <FormControlLabel\n            value={isAction}\n            control={<Checkbox color=\"default\" onClick={handleIsAction} />}\n            label=\"Is it an action cell?\"\n            checked={isAction}\n            labelPlacement=\"start\"\n          />\n        </div>\n        <Button\n          className={classes.makeEmptyButton}\n          onClick={handleMakeEmptySubmit}\n        >\n          Make Empty\n        </Button>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit Type Cell\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default NoTypeCellPopup;\n","export const SHOW_SNACKBAR = \"snackbar/SHOW_SNACKBAR\";\nexport const CLOSE_SNACKBAR = \"snackbar/CLOSE_SNACKBAR\";\n","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nexport function showSnackbar(message) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_SNACKBAR, message });\n  };\n}\n\nexport function closeSnackbar() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_SNACKBAR });\n  };\n}\n","import React from \"react\";\nimport { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport {\n  getCellFile,\n  getCellNameFile,\n  updateInfoCell,\n  updateCell,\n} from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  borderInputcontainer: {\n    marginTop: \"50px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    marginBottom: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst InfoCellPopup = () => {\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [typeForAction, setTypeForAction] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [nameFile, setNameFile] = React.useState(undefined);\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [baseTen, setBaseTen] = React.useState(\"\");\n  const [baseThree, setBaseThree] = React.useState(\"\");\n  const [baseHundred, setBaseHundred] = React.useState(\"\");\n  const [baseFour, setBaseFour] = React.useState(\"\");\n  const [databaseID, setDatabaseID] = React.useState(\"\");\n  const [fontSize, setFontSize] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellFile);\n  const cellNameFile = useSelector((store) => store.popups.cellNameFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setName(cell.name === undefined ? \"\" : cell.name);\n      setColor(cell.color);\n      setFontSize(cell.fontSize);\n      setDescription(cell.description === undefined ? \"\" : cell.description);\n      setTop(cell.topBorder);\n      setBottom(cell.bottomBorder);\n      setLeft(cell.leftBorder);\n      setRight(cell.rightBorder);\n      setBaseTen(cell.baseTen);\n      setBaseFour(cell.baseFour);\n      setBaseHundred(cell.baseHundred);\n      setBaseThree(cell.baseThree);\n      setDatabaseID(cell.databaseID);\n      if (cell.nameFilePath !== undefined && cell.nameFilePath !== \"\") {\n        dispatch(getCellNameFile(cell.nameFilePath));\n      }\n      if (cell.filePath !== undefined && cell.filePath !== \"\") {\n        dispatch(getCellFile(cell.filePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleSubmit = () => {\n    dispatch(\n      updateInfoCell(\n        {\n          ...cell,\n          name: name,\n          description,\n          color,\n          fontSize: fontSize === undefined ? \"\" : fontSize,\n          typeForAction,\n          topBorder: top,\n          bottomBorder: bottom,\n          leftBorder: left,\n          rightBorder: right,\n          type: \"info\",\n          baseTen: baseTen === undefined ? \"\" : fontSize,\n          baseFour: baseFour === undefined ? \"\" : baseFour,\n          baseHundred: baseHundred === undefined ? \"\" : baseHundred,\n          baseThree: baseThree === undefined ? \"\" : baseThree,\n          databaseID: databaseID === undefined ? \"\" : databaseID,\n        },\n        file,\n        nameFile,\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleNameChange = (value) => {\n    setName(value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleDescriptionChange = (value) => {\n    setDescription(value);\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const nameFileLoaded = (loadedFile) => {\n    setNameFile(loadedFile);\n  };\n\n  const removeNameFile = () => {\n    setNameFile(undefined);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const handleTypeForAction = (event) => {\n    setTypeForAction(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBaseTenChange = (event) => {\n    setBaseTen(event.target.value);\n  };\n\n  const handleBaseFourChange = (event) => {\n    setBaseFour(event.target.value);\n  };\n\n  const handleBaseThreeChange = (event) => {\n    setBaseThree(event.target.value);\n  };\n\n  const handleBaseHundredChange = (event) => {\n    setBaseHundred(event.target.value);\n  };\n\n  const handleDatabaseIDChange = (event) => {\n    setDatabaseID(event.target.value);\n  };\n\n  const handleFontSize = (event) => {\n    setFontSize(event.target.value);\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          description: \"\",\n          color: \"white\",\n          typeForAction: \"\",\n          topBorder: 1,\n          bottomBorder: 1,\n          leftBorder: 1,\n          rightBorder: 1,\n          type: \"notype\",\n          file: \"\",\n          nameFile: \"\",\n          fontSize: \"\",\n          baseTen: \"\",\n          baseHundred: \"\",\n          baseThree: \"\",\n          baseFour: \"\",\n          databaseId: \"\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Information</h2>\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter name:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={name}\n            onChange={handleNameChange}\n          />\n        </div>\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={nameFileLoaded}\n          onError={showError}\n        >\n          <Button style={{ marginTop: \"60px\" }} className={classes.button}>\n            Click to upload NAME image\n          </Button>\n        </FilePicker>\n        {(nameFile || cellNameFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:\n            <strong>\n              {nameFile === undefined ? cellNameFile.name : nameFile.name}\n            </strong>\n            <button\n              className={classes.removeFileButton}\n              onClick={removeNameFile}\n            >\n              Remove\n            </button>\n          </div>\n        )}\n        <h4>Hint: Standard mobile font is 12. 3 Rows can pass into cell.</h4>\n        <TextField\n          fullWidth\n          label=\"Font size\"\n          name=\"font_size\"\n          variant=\"outlined\"\n          placeholder=\"Font size\"\n          value={fontSize}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleFontSize}\n        />\n        <h3>Format cell</h3>\n        <TextField\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Type for action\"\n          name=\"type_for_action\"\n          variant=\"outlined\"\n          placeholder=\"Type for action\"\n          value={typeForAction}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleTypeForAction}\n        />\n        <FilePicker\n          extensions={[\"pdf\", \"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.button}>Click to upload file</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded file:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter description:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <div className={classes.borderInputcontainer}>\n          <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n          <TextField\n            name=\"top\"\n            variant=\"outlined\"\n            label=\"Top\"\n            placeholder=\"Top\"\n            value={top}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleTopChange}\n          />\n          <TextField\n            label=\"Right\"\n            name=\"right\"\n            variant=\"outlined\"\n            placeholder=\"Right\"\n            value={right}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleRightChange}\n          />\n          <TextField\n            label=\"Bottom\"\n            name=\"bottom\"\n            variant=\"outlined\"\n            placeholder=\"Bottom\"\n            value={bottom}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleBottomChange}\n          />\n          <TextField\n            label=\"Left\"\n            name=\"left\"\n            variant=\"outlined\"\n            placeholder=\"Left\"\n            value={left}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleLeftChange}\n          />\n        </div>\n        <h2>Bluetooth</h2>\n        <TextField\n          fullWidth\n          label=\"Base 10\"\n          name=\"base10\"\n          variant=\"outlined\"\n          placeholder=\"Base 10\"\n          value={baseTen}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseTenChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 44\"\n          name=\"base44\"\n          variant=\"outlined\"\n          placeholder=\"Base 44\"\n          value={baseFour}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseFourChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 100\"\n          name=\"base100\"\n          variant=\"outlined\"\n          placeholder=\"Base 100\"\n          value={baseHundred}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseHundredChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 336\"\n          name=\"base336\"\n          variant=\"outlined\"\n          placeholder=\"Base 336\"\n          value={baseThree}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseThreeChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Database ID\"\n          name=\"databaseID\"\n          variant=\"outlined\"\n          placeholder=\"Database ID\"\n          value={databaseID}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleDatabaseIDChange}\n        />\n        <div>\n          {cell.type !== \"notype\" && (\n            <Button\n              className={classes.noTypeButton}\n              onClick={handleNoTypeSubmit}\n            >\n              MAKE NO TYPE\n            </Button>\n          )}\n          <Button className={classes.submitButton} onClick={handleSubmit}>\n            Submit\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default InfoCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { closePopup, showImagePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  notypeButton: {\n    border: \"1px solid black\",\n    background: \"blue\",\n    marginRight: \"20px\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst EmptyCellPopup = () => {\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"notype\" }, cellsRow));\n  };\n\n  const handleImageSubmit = () => {\n    dispatch(showImagePopup());\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <Button className={classes.notypeButton} onClick={handleSubmit}>\n          MAKE CELL NOTYPE\n        </Button>\n        <Button className={classes.button} onClick={handleImageSubmit}>\n          ADD IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default EmptyCellPopup;\n","import { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { updateImageCell, getCellImageFile } from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  fileButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst ImageCellPopup = () => {\n  const [width, setWidth] = React.useState(\"\");\n  const [height, setHeight] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [leftMargin, setLeftMargin] = React.useState(\"\");\n  const [topMargin, setTopMargin] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellImageFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setHeight(cell.bigImageHeight === undefined ? \"\" : cell.bigImageHeight);\n      setWidth(cell.bigImageWidth === undefined ? \"\" : cell.bigImageWidth);\n      setLeftMargin(\n        cell.bigImageLeftMargin === undefined ? \"\" : cell.bigImageLeftMargin\n      );\n      setTopMargin(\n        cell.bigImageTopMargin === undefined ? \"\" : cell.bigImageTopMargin\n      );\n      if (cell && cell.bigImagePath !== undefined && cell.bigImagePath !== \"\") {\n        dispatch(getCellImageFile(cell.bigImagePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleHeightChange = (event) => {\n    setHeight(event.target.value);\n  };\n\n  const handleTopMarginChange = (event) => {\n    setTopMargin(event.target.value);\n  };\n\n  const handleLeftMarginChange = (event) => {\n    setLeftMargin(event.target.value);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const handleSubmit = () => {\n    dispatch(\n      updateImageCell(\n        {\n          ...cell,\n          type: \"image\",\n          bigImageWidth: width,\n          bigImageHeight: height,\n          bigImageTopMargin: topMargin === \"\" ? 0 : topMargin,\n          bigImageLeftMargin: leftMargin === \"\" ? 0 : leftMargin,\n        },\n        file,\n        cellsRow\n      )\n    );\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.fileButton}>Click to upload image</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <h3>Single cell width = 100 and height = 50</h3>\n        <TextField\n          fullWidth\n          label=\"Width\"\n          name=\"width\"\n          variant=\"outlined\"\n          placeholder=\"Enter width\"\n          value={width}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleWidthChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Height\"\n          name=\"height\"\n          variant=\"outlined\"\n          placeholder=\"Enter height\"\n          value={height}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleHeightChange}\n        />\n        <div style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>\n          <TextField\n            label=\"Top margin\"\n            name=\"topMargin\"\n            variant=\"outlined\"\n            placeholder=\"Top margin\"\n            value={topMargin}\n            style={{\n              marginRight: \"10px\",\n              maxWidth: \"140px\",\n            }}\n            onChange={handleTopMarginChange}\n          />\n          <TextField\n            label=\"Left margin\"\n            name=\"leftMargin\"\n            variant=\"outlined\"\n            placeholder=\"Left margin\"\n            value={leftMargin}\n            style={{\n              maxWidth: \"140px\",\n            }}\n            onChange={handleLeftMarginChange}\n          />\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          SUBMIT\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default ImageCellPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { submitSelectingCells } from \"../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  borderInputcontainer: {\n    marginTop: \"10px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst FormatCellsPopup = () => {\n  const [color, setColor] = React.useState(\"\");\n  const [width, setWidth] = React.useState(\"\");\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [isBoxBorder, setIsBoxBorder] = React.useState(false);\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(\n      submitSelectingCells(\n        { color, top, bottom, left, right, isBoxBorder, width },\n        selectedCells,\n        cellsRows\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBoxBorder = () => {\n    setIsBoxBorder(!isBoxBorder);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Format Cells</h2>\n        <TextField\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <div>\n          <FormControlLabel\n            value={isBoxBorder}\n            control={<Checkbox color=\"default\" onClick={handleBoxBorder} />}\n            label=\"Is box border?\"\n            checked={isBoxBorder}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!isBoxBorder && (\n          <div className={classes.borderInputcontainer}>\n            <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n            <TextField\n              name=\"top\"\n              variant=\"outlined\"\n              label=\"Top\"\n              placeholder=\"Top\"\n              value={top}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleTopChange}\n            />\n            <TextField\n              label=\"Right\"\n              name=\"right\"\n              variant=\"outlined\"\n              placeholder=\"Right\"\n              value={right}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleRightChange}\n            />\n            <TextField\n              label=\"Bottom\"\n              name=\"bottom\"\n              variant=\"outlined\"\n              placeholder=\"Bottom\"\n              value={bottom}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleBottomChange}\n            />\n            <TextField\n              label=\"Left\"\n              name=\"left\"\n              variant=\"outlined\"\n              placeholder=\"Left\"\n              value={left}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleLeftChange}\n            />\n          </div>\n        )}\n        {isBoxBorder && (\n          <div>\n            <TextField\n              label=\"Border width\"\n              name=\"width\"\n              variant=\"outlined\"\n              placeholder=\"Border width\"\n              value={width}\n              style={{\n                margin: \"10px\",\n              }}\n              onChange={handleWidthChange}\n            />\n          </div>\n        )}\n        <Button className={classes.submitButton} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default FormatCellsPopup;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TablesList from \"../tables_list/TablesList\";\nimport Table from \"../table/Table\";\nimport TableInfoPopup from \"../popup/TableInfoPopup\";\nimport ActionCellPopup from \"../popup/ActionCellPopup\";\nimport NoTypeCellPopup from \"../popup/NoTypeCellPopup\";\nimport InfoCellPopup from \"../popup/InfoCellPopup\";\nimport EmptyCellPopup from \"../popup/EmptyCellPopup\";\nimport ImageCellPopup from \"../popup/ImageCellPopup\";\nimport FormatCellsPopup from \"../popup/FormatCellsPopup\";\n\nconst Home = () => {\n  const [isNamePopupOpen, setIsNamePopupOpen] = useState(false);\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const isActionCellPopupOpen = useSelector(\n    (store) => store.popups.actionPopupOpen\n  );\n  const isEmptyCellPopupOpen = useSelector(\n    (store) => store.popups.emptyCellPopupOpen\n  );\n  const isInfoCellPopupOpen = useSelector(\n    (store) => store.popups.infoPopupOpen\n  );\n  const noTypeCellPopupOpen = useSelector(\n    (store) => store.popups.noTypePopupOpen\n  );\n  const imageCellPopupOpen = useSelector(\n    (store) => store.popups.imagePopupOpen\n  );\n  const formatCellsPopupOpen = useSelector(\n    (store) => store.popups.formatCellsPopupOpen\n  );\n\n  const user = useSelector((store) => store.user.user);\n\n  const history = useHistory();\n\n  const popupOpened = () => {\n    window.scrollTo(0, 0);\n    disableBodyScroll(document);\n  };\n\n  isNamePopupOpen ||\n  isActionCellPopupOpen ||\n  isInfoCellPopupOpen ||\n  imageCellPopupOpen ||\n  isEmptyCellPopupOpen ||\n  noTypeCellPopupOpen ||\n  formatCellsPopupOpen\n    ? popupOpened()\n    : enableBodyScroll(document);\n\n  useEffect(() => {\n    if (user === undefined || user.role !== \"admin\") {\n      history.push(\"/\");\n    }\n    window.scrollTo(0, 0);\n  }, [user, history]);\n\n  const toggleNamePopup = () => {\n    setIsNamePopupOpen(!isNamePopupOpen);\n  };\n\n  return (\n    <Container\n      style={{\n        padding: \"10px\",\n        width: \"100%\",\n        display: \"inline-flex\",\n        flexDirection: \"row\",\n      }}\n    >\n      <TablesList showTableNamePopup={toggleNamePopup} />\n      {selectedTable === undefined ? (\n        <h2 style={{ flex: 1, textAlign: \"center\" }}>Please select a table</h2>\n      ) : (\n        <Table table={selectedTable} />\n      )}\n      {isNamePopupOpen && <TableInfoPopup handleClose={toggleNamePopup} />}\n      {isEmptyCellPopupOpen && <EmptyCellPopup />}\n      {isActionCellPopupOpen && <ActionCellPopup />}\n      {isInfoCellPopupOpen && <InfoCellPopup />}\n      {noTypeCellPopupOpen && <NoTypeCellPopup />}\n      {imageCellPopupOpen && <ImageCellPopup />}\n      {formatCellsPopupOpen && <FormatCellsPopup />}\n    </Container>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { closeSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nconst AppSnackbar = () => {\n  const classes = useStyles();\n  const open = useSelector((store) => store.snackbar.open);\n  const message = useSelector((store) => store.snackbar.message);\n  const dispatch = useDispatch();\n\n  if (!open) {\n    return null;\n  }\n\n  const close = () => {\n    dispatch(closeSnackbar());\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      open={open}\n      autoHideDuration={5000}\n      onClose={close}\n      message={<span>{message}</span>}\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={close}\n        >\n          <CloseIcon />\n        </IconButton>,\n      ]}\n    />\n  );\n};\n\nexport default AppSnackbar;\n","export const SIGN_IN = \"user/SIGN_IN\";\nexport const SIGN_IN_SUCCESS = \"user/SIGN_IN_SUCCESS\";\nexport const SIGN_IN_FAILED = \"user/SIGN_IN_FAILED\";\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button, Card, TextField, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signIn } from \"../../state/actions/user\";\n\nconst useStyles = makeStyles({\n  title: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: \"bold\",\n  },\n  container: {\n    background: \"white\",\n    borderRadius: \"10px\",\n    maxWidth: \"500px\",\n    alignContent: \"center\",\n    padding: \"10px\",\n    display: \"flex\",\n    marginTop: \"30px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    margin: \"10px\",\n    minWidth: \"200px\",\n    background: \"green\",\n    fontWeight: \"bold\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SignIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const user = useSelector((store) => store.user.user);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user !== undefined) {\n      history.push(\"/home\");\n    }\n  }, [user, history]);\n\n  const handleSubmit = () => {\n    dispatch(signIn({ email, password }));\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <Card className={classes.container}>\n      <Typography className={classes.title}>Sign In</Typography>\n      <TextField\n        required\n        fullWidth\n        name=\"email\"\n        variant=\"outlined\"\n        placeholder=\"Email\"\n        value={email}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handleEmailChange}\n      />\n      <TextField\n        required\n        fullWidth\n        name=\"password\"\n        variant=\"outlined\"\n        placeholder=\"Password\"\n        value={password}\n        type={\"password\"}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handlePasswordChange}\n      />\n      <Button className={classes.button} onClick={handleSubmit}>\n        Submit\n      </Button>\n    </Card>\n  );\n};\nexport default SignIn;\n","import { SIGN_IN, SIGN_IN_SUCCESS, SIGN_IN_FAILED } from \"../actionTypes/user\";\nimport { auth, db } from \"../../firebase\";\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    dispatch({ type: SIGN_IN });\n    try {\n      auth\n        .signInWithEmailAndPassword(user.email, user.password)\n        .then((value) => {\n          db.collection(\"users\")\n            .doc(value.user.uid)\n            .get()\n            .then((snapshot) => {\n              const dbUser = snapshot.data();\n              if (dbUser.role === \"admin\") {\n                dispatch({ type: SIGN_IN_SUCCESS, user: dbUser });\n              } else {\n                dispatch({ type: SIGN_IN_FAILED });\n              }\n            });\n        });\n    } catch (e) {\n      dispatch({ type: SIGN_IN_FAILED });\n    }\n  };\n}\n","import \"./App.css\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Home from \"./components/home/Home\";\nimport AppSnackbar from \"./components/popup/AppSnackbar\";\nimport SignIn from \"./components/sign-in/SignIn\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <CssBaseline />\n      <div\n        style={{\n          minHeight: \"100vh\",\n          width: \"100%\",\n          margin: \"0px\",\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/home\" component={Home} />\n          <Route path=\"/\" component={SignIn} />\n        </Switch>\n      </div>\n      <AppSnackbar />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nconst initialState = {\n  open: false,\n  message: \"\",\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SHOW_SNACKBAR: {\n      return { ...state, open: true, message: action.message };\n    }\n    case CLOSE_SNACKBAR: {\n      return { ...state, open: false, message: \"\" };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\n\nconst initialState = {\n  tables: [],\n  selectedTable: undefined,\n  tableJustCreated: false,\n  bigImage: undefined,\n  bigImageCell: undefined,\n  error: undefined,\n};\n\nexport default function tablesReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case GET_TABLES: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case REMOVE_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: undefined,\n        bigImageCell: undefined,\n        error: undefined,\n      };\n    }\n    case SET_TABLE_JUST_CREATED_FALSE: {\n      return {\n        ...state,\n        tableJustCreated: false,\n      };\n    }\n    case GET_TABLES_SUCCESS: {\n      return { ...state, tables: action.tables };\n    }\n    case GET_TABLES_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case ADD_TABLE: {\n      const newTables = state.tables;\n      newTables.push(action.table);\n      return {\n        ...state,\n        tableJustCreated: true,\n        selectedTable: action.table,\n        tables: newTables,\n      };\n    }\n    case SET_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: action.image,\n        bigImageCell: action.cell,\n      };\n    }\n    case SET_SELECTED_TABLE: {\n      return {\n        ...state,\n        selectedTable: action.table,\n        bigImage: undefined,\n        bigImageCell: undefined,\n      };\n    }\n    case DELETE_TABLE: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case DELETE_TABLE_SUCCESS: {\n      const newTables = state.tables;\n      state.tables.forEach((table) => {\n        if (table.id === action.id) {\n          newTables.remove(table);\n        }\n      });\n      return {\n        ...state,\n        selectedTable: undefined,\n        tables: newTables,\n      };\n    }\n    case DELETE_TABLE_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n} from \"../actionTypes/cell\";\nimport {\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  SUBMIT_NO_TYPE_POPUP,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CUSTOM_CELLS_SUBMITED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n} from \"../actionTypes/popups\";\n\nconst initialState = {\n  actionPopupOpen: false,\n  infoPopupOpen: false,\n  noTypePopupOpen: false,\n  emptyCellPopupOpen: false,\n  imagePopupOpen: false,\n  formatCellsPopupOpen: false,\n  cell: undefined,\n  cellsRow: undefined,\n  cellFile: undefined,\n  cellNameFile: undefined,\n  cellImageFile: undefined,\n  cellToUpdate: undefined,\n  cellToUpdateCustomCells: undefined,\n  letsUpdate: false,\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case CANCEL_CUSTOM_CELLS: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case CUSTOM_CELLS_SUBMITED: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SHOW_ACTION_POPUP: {\n      return {\n        ...state,\n        actionPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case BEGIN_CUSTOM_SELECT: {\n      return {\n        ...state,\n        actionPopupOpen: false,\n        cellToUpdate: action.cell,\n        cellToUpdateCustomCells: [],\n      };\n    }\n    case CELL_TO_UPDATE_CUSTOM_CELL_SELECTED: {\n      const cells = state.cellToUpdateCustomCells;\n      if (cells.includes(action.cell)) {\n        const index = cells.indexOf(action.cell);\n        cells.splice(index, 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        cellToUpdateCustomCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SUBMIT_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: false,\n        actionPopupOpen: action.isAction,\n        infoPopupOpen: !action.isAction,\n      };\n    }\n    case SHOW_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_EMPTY_CELL_POPUP: {\n      return {\n        ...state,\n        emptyCellPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_IMAGE_CELL_POPUP: {\n      if (action.cell !== undefined) {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n          cell: action.cell,\n          cellsRow: action.cellsRow,\n        };\n      } else {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n        };\n      }\n    }\n    case SHOW_INFO_POPUP: {\n      return {\n        ...state,\n        infoPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_FORMAT_CELLS_POPUP: {\n      return {\n        ...state,\n        formatCellsPopupOpen: true,\n      };\n    }\n    case CLOSE_POPUP: {\n      return {\n        ...state,\n        infoPopupOpen: false,\n        actionPopupOpen: false,\n        noTypePopupOpen: false,\n        emptyCellPopupOpen: false,\n        imagePopupOpen: false,\n        formatCellsPopupOpen: false,\n        cell: undefined,\n        cellsRow: undefined,\n        cellFile: undefined,\n        cellNameFile: undefined,\n        cellImageFile: undefined,\n      };\n    }\n    case GET_CELL_NAME_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellNameFile: action.file,\n      };\n    }\n    case GET_CELL_IMAGE_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellImageFile: action.file,\n      };\n    }\n    case GET_CELL_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellFile: action.file,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  CLEAR_CELLS_ROWS,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n} from \"../actionTypes/cellsRows\";\nimport { UPDATE_CELL_SUCCESS } from \"../actionTypes/cell\";\nconst initialState = {\n  cellsRows: [],\n  selectedCells: undefined,\n  error: undefined,\n  letsUpdate: false,\n  isSelecting: false,\n};\n\nexport default function cellsRowsReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case UPDATE_CELL_SUCCESS: {\n      let rowIndex;\n      let cellIndex;\n      state.cellsRows.forEach((cellsRow) => {\n        cellsRow.cells.forEach((cell) => {\n          if (\n            cell.columnIndex === action.cell.columnIndex &&\n            cell.rowIndex === action.cell.rowIndex\n          ) {\n            rowIndex = state.cellsRows.indexOf(cellsRow);\n            cellIndex = cellsRow.cells.indexOf(cell);\n          }\n        });\n      });\n      state.cellsRows[rowIndex].cells[cellIndex] = action.cell;\n      return { ...state, error: undefined };\n    }\n    case BEGIN_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: true,\n        selectedCells: [],\n      };\n    }\n    case STOP_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: false,\n        selectedCells: undefined,\n      };\n    }\n    case ADD_SELECTING_CELL: {\n      var cells = state.selectedCells;\n      if (cells.includes(action.cell)) {\n        cells.splice(cells.indexOf(action.cell), 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        selectedCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case GET_CELLS_ROWS: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case GET_CELLS_ROWS_SUCCESS: {\n      action.data.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return { ...state, cellsRows: action.data };\n    }\n    case UPDATE_CELLS_ROWS: {\n      action.cellsRows.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return {\n        ...state,\n        cellsRows: action.cellsRows,\n        selectedCells: undefined,\n        isSelecting: false,\n      };\n    }\n    case GET_CELLS_ROWS_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case CLEAR_CELLS_ROWS: {\n      return {\n        ...state,\n        cellsRows: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { SIGN_IN, SIGN_IN_SUCCESS, SIGN_IN_FAILED } from \"../actionTypes/user\";\n\nconst initialState = {\n  user: undefined,\n  error: false,\n};\n\nexport default function userReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SIGN_IN: {\n      return { ...state, error: false };\n    }\n    case SIGN_IN_SUCCESS: {\n      return { ...state, user: action.user };\n    }\n    case SIGN_IN_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport snackbar from \"./snackbar\";\nimport tables from \"./tables\";\nimport popups from \"./popups\";\nimport cellsRows from \"./cellsRows\";\nimport user from \"./user\";\n\nexport default combineReducers({\n  snackbar,\n  tables,\n  popups,\n  cellsRows,\n  user,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport reducers from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/* eslint-enable */\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\"],\n};\nconst pReducer = persistReducer(persistConfig, reducers);\n\nconst store = createStore(\n  pReducer,\n  compose(applyMiddleware(thunk), composeEnhancers())\n);\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./state/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}