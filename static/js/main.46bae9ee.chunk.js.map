{"version":3,"sources":["state/actionTypes/tables.js","firebase.js","common/CellFunctions.js","state/actionTypes/cellsRows.js","state/actions/cellsRows.js","state/actionTypes/popups.js","state/actions/popups.js","components/tables_list/TablesListItem.js","state/actions/tables.js","state/actionTypes/user.js","components/tables_list/TablesList.js","state/actions/user.js","components/table/cells/EmptyCell.js","components/table/cells/Cell.js","components/table/CellsRow.js","state/actionTypes/cell.js","state/actions/cell.js","components/table/utils/SelectedCellsInfo.js","components/table/utils/BigImage.js","components/table/utils/RemoveBigImage.js","components/table/utils/SelectedCellsFormat.js","components/table/Table.js","components/popup/TableInfoPopup.js","components/popup/ActionCellPopup.js","components/popup/NoTypeCellPopup.js","state/actionTypes/snackbar.js","state/actions/snackbar.js","components/popup/InfoCellPopup.js","components/popup/EmptyCellPopup.js","components/popup/ImageCellPopup.js","components/popup/FormatCellsPopup.js","components/popup/AddToUserPopup.js","components/home/Home.js","components/popup/AppSnackbar.js","components/sign-in/SignIn.js","App.js","serviceWorker.js","state/reducers/snackbar.js","state/reducers/tables.js","state/reducers/popups.js","state/reducers/cellsRows.js","state/reducers/user.js","state/reducers/index.js","state/store.js","index.js"],"names":["GET_TABLES","GET_TABLES_SUCCESS","GET_TABLES_FAILED","ADD_TABLE","DELETE_TABLE","DELETE_TABLE_SUCCESS","DELETE_TABLE_FAILED","SET_SELECTED_TABLE","SET_BIG_IMAGE","SET_TABLE_JUST_CREATED_FALSE","REMOVE_BIG_IMAGE","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","auth","getEmptyTableCells","tableId","data","push","rowIndex","cells","getNoTypeCell","getEmptyCell","getFirstEmptyRow","i","getEmptyRow","columnIndex","type","color","topBorder","leftBorder","rightBorder","bottomBorder","GET_CELLS_ROWS","GET_CELLS_ROWS_SUCCESS","GET_CELLS_ROWS_FAILED","CLEAR_CELLS_ROWS","ADD_SELECTING_CELL","BEGIN_FORMAT_SELECTING","STOP_FORMAT_SELECTING","UPDATE_CELLS_ROWS","getCellsRows","dispatch","a","collection","doc","get","then","snapshot","forEach","cellsRow","id","e","error","boxUpdate","cellInfo","cellsRows","sort","b","smallestRow","bigestRow","length","smallestColumn","bigestColumn","rowsToUpdate","cellsToUpdate","rowsForRequest","cell","newCell","width","index","getFormattedRow","includes","row","sendUpdateRowRequest","simpleUpdate","bottom","top","left","right","update","mirrorCell","cellIndex","indexOf","cancelIsSelecting","SHOW_ACTION_POPUP","CLOSE_POPUP","SHOW_INFO_POPUP","SHOW_NO_TYPE_POPUP","SHOW_IMAGE_CELL_POPUP","SHOW_EMPTY_CELL_POPUP","SUBMIT_NO_TYPE_POPUP","BEGIN_CUSTOM_SELECT","CELL_TO_UPDATE_CUSTOM_CELL_SELECTED","CUSTOM_CELLS_SUBMITED","CANCEL_CUSTOM_CELLS","SHOW_FORMAT_CELLS_POPUP","SHOW_ADD_TO_USER_POPUP","cancelCustomCells","showImagePopup","closePopup","useStyles","makeStyles","buttonNormal","fontSize","textTransform","borderRadius","borderColor","borderWidth","margin","whiteSpace","borderStyle","padding","background","buttonSelected","cursos","TablesListItem","item","selectedTable","useSelector","store","tables","useState","isSelected","setIsSelected","classes","useDispatch","useEffect","Button","onClick","table","className","name","SIGN_IN","SIGN_IN_SUCCESS","SIGN_IN_FAILED","GET_USERS_SUCCESS","card","display","flexDirection","minHeight","maxWidth","flex","iconmenubutton","height","text","textAlign","TablesList","showTableNamePopup","didGetUsers","setDidGetUsers","ref","snap","Card","map","verticalAlign","EmptyCell","undefined","bigImagePath","getDownloadURL","image","catch","console","log","setBigImage","showEmptyCellPopup","props","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","borderTopColor","isCustomCell","borderRightColor","borderLeftColor","borderBottomColor","borderLeftStyle","borderRightStyle","borderTopStyle","borderBottomStyle","alignContent","justifyContent","lineHeight","fontWeight","Cell","cellToUpdate","popups","isSelecting","addSelectingCell","cellToUpdateCustomCellSelected","showNoTypePopup","showInfoPopup","showActionPopup","sumAll","style","marginLeft","marginRight","src","alt","dangerouslySetInnerHTML","__html","replaceAll","CellsRow","cellToUpdateCustomCells","selectedCells","cellsRowLetsUpdate","letsUpdate","UPDATE_CELL","UPDATE_CELL_SUCCESS","UPDATE_CELL_FAILED","GET_CELL_FILE_SUCCESS","GET_CELL_NAME_FILE_SUCCESS","GET_CELL_IMAGE_FILE_SUCCESS","updateCell","cellsRowId","newRow","element","container","marginBottom","marginTop","cont","border","submitButton","cancelButton","SelectedCellsInfo","customCells","convertCustomCells","ix","split","join","BigImage","bigImage","bigImageCell","position","parseInt","bigImageTopMargin","bigImageHeight","bigImageLeftMargin","bigImageWidth","RemoveBigImage","description","cellContainer","deleteButton","formatButton","SelectedCellsFormat","addToUserButton","Table","loading","setLoading","tableJustCreated","timeoutFinished","useCallback","setTimeout","CircularProgress","delete","deleteTable","popupbox","quillContainer","editor","box","maxHeight","overflow","closeicon","content","cursor","button","TableInfoPopup","React","setName","setDescription","handleClose","TextField","required","fullWidth","label","variant","placeholder","value","onChange","event","target","theme","add","cellsRowValue","newCells","addTable","formControl","minWidth","header","noTypeButton","ActionCellPopup","setSumAll","setColor","rows","setRows","actionType","setActionType","typeActionType","setTypeActionType","typeActionTypeName","setTypeActionTypeName","setFontSize","actionTypes","typeActionTypes","actionTypesNames","typeActionTypesNames","FormControlLabel","control","Checkbox","checked","labelPlacement","FormControl","InputLabel","Select","MenuItem","beginCustomSelect","makeEmptyButton","NoTypeCellPopup","isAction","setIsAction","submitNoTypePopup","SHOW_SNACKBAR","CLOSE_SNACKBAR","showSnackbar","message","fileNameContainer","removeFileButton","borderInputcontainer","borderText","InfoCellPopup","typeForAction","setTypeForAction","file","setFile","nameFile","setNameFile","setTop","setBottom","setLeft","setRight","baseTen","setBaseTen","baseThree","setBaseThree","baseHundred","setBaseHundred","baseFour","setBaseFour","databaseID","setDatabaseID","cellFile","cellNameFile","filePath","nameFilePath","getMetadata","showError","msg","extensions","loadedFile","onError","databaseId","put","updateInfoCell","notypeButton","EmptyCellPopup","fileButton","ImageCellPopup","setWidth","setHeight","leftMargin","setLeftMargin","topMargin","setTopMargin","cellImageFile","updateImageCell","FormatCellsPopup","isBoxBorder","setIsBoxBorder","submitSelectingCells","AddToUserPopup","selectedUser","setSelectedUser","users","user","email","snapshots","tableOrder","size","Home","isNamePopupOpen","setIsNamePopupOpen","isActionCellPopupOpen","actionPopupOpen","isEmptyCellPopupOpen","emptyCellPopupOpen","isInfoCellPopupOpen","infoPopupOpen","noTypeCellPopupOpen","noTypePopupOpen","imageCellPopupOpen","imagePopupOpen","formatCellsPopupOpen","addToUserPopupOpen","history","useHistory","window","scrollTo","disableBodyScroll","document","enableBodyScroll","role","toggleNamePopup","Container","close","spacing","AppSnackbar","open","snackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","title","alignItems","SignIn","setEmail","password","setPassword","Typography","signInWithEmailAndPassword","uid","dbUser","signIn","App","CssBaseline","exact","path","component","Boolean","location","hostname","match","initialState","combineReducers","state","newTables","remove","splice","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","whitelist","pReducer","persistReducer","reducers","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46bae9ee.chunk.js","sourcesContent":["export const GET_TABLES = \"tables/GET_TABLES\";\nexport const GET_TABLES_SUCCESS = \"tables/GET_TABLES_SUCCESS\";\nexport const GET_TABLES_FAILED = \"tables/GET_TABLES_FAILED\";\nexport const ADD_TABLE = \"tables/ADD_TABLE\";\nexport const DELETE_TABLE = \"tables/DELETE_TABLE\";\nexport const DELETE_TABLE_SUCCESS = \"tables/DELETE_TABLE_SUCCESS\";\nexport const DELETE_TABLE_FAILED = \"tables/DELETE_TABLE_FAILED\";\nexport const SET_SELECTED_TABLE = \"tables/SET_SELECTED_TABLE\";\nexport const SET_BIG_IMAGE = \"tables/SET_BIG_IMAGE\";\nexport const SET_TABLE_JUST_CREATED_FALSE =\n  \"tables/SET_TABLE_JUST_CREATED_FALSE\";\nexport const REMOVE_BIG_IMAGE = \"tables/REMOVE_BIG_IMAGE\";\n","import firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBN83KPofzkMJ8I61kt8Fn8our5BSWfNjw\",\n  authDomain: \"firmus-medicus-a254b.firebaseapp.com\",\n  projectId: \"firmus-medicus-a254b\",\n  storageBucket: \"firmus-medicus-a254b.appspot.com\",\n  messagingSenderId: \"906887380621\",\n  appId: \"1:906887380621:web:d9ab0a949265376084ecc4\",\n  measurementId: \"G-506ZEGQVF1\",\n};\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const auth = firebase.auth();\n","export function getEmptyTableCells(tableId) {\n  const data = [];\n  data.push(getFirstEmptyRow(tableId));\n  for (let i = 1; i < 28; i++) {\n    data.push(getEmptyRow(i, tableId));\n  }\n  return data;\n}\nfunction getFirstEmptyRow(tableId) {\n  return {\n    tableId,\n    rowIndex: 0,\n    cells: [\n      getNoTypeCell(0, 0),\n      getNoTypeCell(0, 1),\n      getNoTypeCell(0, 2),\n      getNoTypeCell(0, 3),\n      getEmptyCell(4),\n      getEmptyCell(5),\n      getEmptyCell(6),\n      getNoTypeCell(0, 7),\n      getNoTypeCell(0, 8),\n      getNoTypeCell(0, 9),\n      getNoTypeCell(0, 10),\n    ],\n  };\n}\nfunction getEmptyRow(rowIndex, tableId) {\n  return {\n    tableId,\n    rowIndex,\n    cells: [\n      getNoTypeCell(rowIndex, 0),\n      getNoTypeCell(rowIndex, 1),\n      getNoTypeCell(rowIndex, 2),\n      getNoTypeCell(rowIndex, 3),\n      getNoTypeCell(rowIndex, 4),\n      getNoTypeCell(rowIndex, 5),\n      getNoTypeCell(rowIndex, 6),\n      getNoTypeCell(rowIndex, 7),\n      getNoTypeCell(rowIndex, 8),\n      getNoTypeCell(rowIndex, 9),\n      getNoTypeCell(rowIndex, 10),\n    ],\n  };\n}\nfunction getNoTypeCell(rowIndex, columnIndex) {\n  return {\n    type: \"notype\",\n    rowIndex,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"1\",\n    leftBorder: \"1\",\n    rightBorder: \"1\",\n    bottomBorder: \"1\",\n  };\n}\nfunction getEmptyCell(columnIndex) {\n  return {\n    type: \"empty\",\n    rowIndex: 0,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"1\",\n    leftBorder: \"1\",\n    rightBorder: \"1\",\n    bottomBorder: \"1\",\n  };\n}\n","export const GET_CELLS_ROWS = \"cellsRows/GET_CELLS_ROWS\";\nexport const GET_CELLS_ROWS_SUCCESS = \"cellsRows/GET_CELLS_ROWS_SUCCESS\";\nexport const GET_CELLS_ROWS_FAILED = \"cellsRows/GET_CELLS_ROWS_FAILED\";\nexport const CLEAR_CELLS_ROWS = \"cellsRows/CLEAR_CELLS_ROWS\";\nexport const ADD_SELECTING_CELL = \"cellsRows/ADD_SELECTING_CELL\";\nexport const BEGIN_FORMAT_SELECTING = \"cellsRows/BEGIN_FORMAT_SELECTING\";\nexport const STOP_FORMAT_SELECTING = \"cellsRows/STOP_FORMAT_SELECTING\";\nexport const SUBMIT_FORMAT_SELECTING = \"cellsRows/SUBMIT_FORMAT_SELECTING\";\nexport const UPDATE_CELLS_ROWS = \"cellsRows/UPDATE_CELLS_ROWS\";\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n} from \"../actionTypes/cellsRows\";\nimport { db } from \"../../firebase\";\n\nexport function getCellsRows(tableId) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELLS_ROWS });\n\n    try {\n      const ref = db.collection(\"tables\").doc(tableId).collection(\"cellsRows\");\n      ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((cellsRow) => {\n          data.push({ ...cellsRow.data(), id: cellsRow.id });\n        });\n        dispatch({ type: GET_CELLS_ROWS_SUCCESS, data: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELLS_ROWS_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function submitSelectingCells(cellInfo, cells, cellsRows) {\n  return async (dispatch) => {\n    if (cellInfo.isBoxBorder) {\n      boxUpdate(dispatch, cellInfo, cells, cellsRows);\n    } else {\n      simpleUpdate(dispatch, cellInfo, cells, cellsRows);\n    }\n  };\n}\n\nconst boxUpdate = (dispatch, cellInfo, cells, cellsRows) => {\n  cells.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n  const smallestRow = cells[0].rowIndex;\n  const bigestRow =\n    cells.length > 1 ? cells[cells.length - 1].rowIndex : smallestRow;\n  cells.sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1));\n  const smallestColumn = cells[0].columnIndex;\n  const bigestColumn =\n    cells.length > 1 ? cells[cells.length - 1].columnIndex : smallestColumn;\n\n  const rowsToUpdate = [...cellsRows];\n  const cellsToUpdate = [];\n  const rowsForRequest = [];\n  cells.forEach((cell) => {\n    const newCell = {\n      ...cell,\n      color: cellInfo.color !== \"\" ? cellInfo.color : cell.color,\n      bottomBorder:\n        cell.rowIndex === bigestRow ? cellInfo.width : cell.bottomBorder,\n      topBorder:\n        cell.rowIndex === smallestRow ? cellInfo.width : cell.topBorder,\n      leftBorder:\n        cell.columnIndex === smallestColumn ? cellInfo.width : cell.leftBorder,\n      rightBorder:\n        cell.columnIndex === bigestColumn ? cellInfo.width : cell.rightBorder,\n    };\n    cellsToUpdate.push(newCell);\n  });\n  cellsToUpdate.forEach((cell, index) => {\n    rowsToUpdate[cell.rowIndex] = getFormattedRow(\n      cell,\n      cells[index],\n      rowsToUpdate[cell.rowIndex]\n    );\n    if (!rowsForRequest.includes(cell.rowIndex)) {\n      rowsForRequest.push(cell.rowIndex);\n    }\n  });\n  rowsToUpdate.forEach((row) => {\n    if (rowsForRequest.includes(row.rowIndex)) {\n      sendUpdateRowRequest(row);\n    }\n  });\n  dispatch({ type: UPDATE_CELLS_ROWS, cellsRows: rowsToUpdate });\n};\n\nconst simpleUpdate = (dispatch, cellInfo, cells, cellsRows) => {\n  const rowsToUpdate = [...cellsRows];\n  const cellsToUpdate = [];\n  const rowsForRequest = [];\n  cells.forEach((cell) => {\n    const newCell = {\n      ...cell,\n      color: cellInfo.color !== \"\" ? cellInfo.color : cell.color,\n      bottomBorder:\n        cellInfo.bottom !== \"\" ? cellInfo.bottom : cell.bottomBorder,\n      topBorder: cellInfo.top !== \"\" ? cellInfo.top : cell.topBorder,\n      leftBorder: cellInfo.left !== \"\" ? cellInfo.left : cell.leftBorder,\n      rightBorder: cellInfo.right !== \"\" ? cellInfo.right : cell.rightBorder,\n    };\n    cellsToUpdate.push(newCell);\n  });\n  cellsToUpdate.forEach((cell, index) => {\n    rowsToUpdate[cell.rowIndex] = getFormattedRow(\n      cell,\n      cells[index],\n      rowsToUpdate[cell.rowIndex]\n    );\n    if (!rowsForRequest.includes(cell.rowIndex)) {\n      rowsForRequest.push(cell.rowIndex);\n    }\n  });\n  rowsToUpdate.forEach((row) => {\n    if (rowsForRequest.includes(row.rowIndex)) {\n      sendUpdateRowRequest(row);\n    }\n  });\n  dispatch({ type: UPDATE_CELLS_ROWS, cellsRows: rowsToUpdate });\n};\n\nconst sendUpdateRowRequest = (row) => {\n  db.collection(\"tables\")\n    .doc(row.tableId)\n    .collection(\"cellsRows\")\n    .doc(row.id)\n    .update({ cells: row.cells });\n};\n\nconst getFormattedRow = (cell, mirrorCell, row) => {\n  const cellIndex = row.cells.indexOf(mirrorCell);\n  row.cells[cellIndex] = cell;\n  return row;\n};\n\nexport function addSelectingCell(cell) {\n  return async (dispatch) => {\n    dispatch({ type: ADD_SELECTING_CELL, cell });\n  };\n}\n\nexport function setIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_FORMAT_SELECTING });\n  };\n}\n\nexport function cancelIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: STOP_FORMAT_SELECTING });\n  };\n}\n","export const SHOW_ACTION_POPUP = \"popups/SHOW_ACTION_POPUP\";\nexport const CLOSE_POPUP = \"popups/CLOSE_ACTION_POPUP\";\nexport const SHOW_INFO_POPUP = \"popups/SHOW_INFO_POPUP\";\nexport const SHOW_NO_TYPE_POPUP = \"popups/SHOW_NO_TYPE_POPUP\";\nexport const SHOW_IMAGE_CELL_POPUP = \"popups/SHOW_IMAGE_CELL_POPUP\";\nexport const SHOW_EMPTY_CELL_POPUP = \"popups/SHOW_EMPTY_CELL_POPUP\";\nexport const SUBMIT_NO_TYPE_POPUP = \"popups/SUBMIT_NO_TYPE_POPUP\";\nexport const BEGIN_CUSTOM_SELECT = \"popups/BEGIN_CUSTOM_SELECT\";\nexport const CELL_TO_UPDATE_CUSTOM_CELL_SELECTED =\n  \"popups/CELL_TO_UPDATE_CUSTOM_CELL_SELECTED\";\nexport const CUSTOM_CELLS_SUBMITED = \"popups/CUSTOM_CELLS_SUBMITED\";\nexport const CANCEL_CUSTOM_CELLS = \"popups/CANCEL_CUSTOM_CELLS\";\nexport const SHOW_FORMAT_CELLS_POPUP = \"popups/SHOW_FORMAT_CELLS_POPUP\";\nexport const SHOW_ADD_TO_USER_POPUP = \"popups/SHOW_ADD_TO_USER_POPUP\";\n","import {\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SUBMIT_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n  SHOW_ADD_TO_USER_POPUP,\n} from \"../actionTypes/popups\";\n\nexport function beginCustomSelect(cell) {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_CUSTOM_SELECT, cell });\n  };\n}\n\nexport function cancelCustomCells() {\n  return async (dispatch) => {\n    dispatch({ type: CANCEL_CUSTOM_CELLS });\n  };\n}\n\nexport function cellToUpdateCustomCellSelected(cell) {\n  return async (dispatch) => {\n    dispatch({ type: CELL_TO_UPDATE_CUSTOM_CELL_SELECTED, cell });\n  };\n}\n\nexport function showFormatCellsPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_FORMAT_CELLS_POPUP });\n  };\n}\n\nexport function showImagePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_IMAGE_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showActionPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_ACTION_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showEmptyCellPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_EMPTY_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function submitNoTypePopup(isAction) {\n  return async (dispatch) => {\n    dispatch({ type: SUBMIT_NO_TYPE_POPUP, isAction });\n  };\n}\n\nexport function showNoTypePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_NO_TYPE_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showInfoPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_INFO_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showAddToUserPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_ADD_TO_USER_POPUP });\n  };\n}\n\nexport function closePopup() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { setSelectedTable } from \"../../state/actions/tables\";\nimport { cancelIsSelecting } from \"../../state/actions/cellsRows\";\nimport { cancelCustomCells } from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  buttonNormal: {\n    color: \"black\",\n    fontSize: \"1em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    whiteSpace: \"wrap\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  buttonSelected: {\n    color: \"white\",\n    background: \"black\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n      cursos: \"auto\",\n    },\n  },\n});\n\nconst TablesListItem = ({ item }) => {\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const [isSelected, setIsSelected] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsSelected(selectedTable && selectedTable.id === item.id);\n  }, [setIsSelected, selectedTable, item]);\n\n  const selectTable = () => {\n    dispatch(setSelectedTable(item));\n    dispatch(cancelIsSelecting());\n    dispatch(cancelCustomCells());\n  };\n\n  return (\n    <Button\n      onClick={isSelected ? null : selectTable}\n      className={isSelected ? classes.buttonSelected : classes.buttonNormal}\n    >\n      {item.name}\n    </Button>\n  );\n};\nTablesListItem.propTypes = {\n  item: PropTypes.object,\n};\nexport default TablesListItem;\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\nimport { db, storage } from \"../../firebase\";\nimport { getEmptyTableCells } from \"../../common/CellFunctions\";\n\nexport function removeBigImage() {\n  return async (dispatch) => {\n    dispatch({ type: REMOVE_BIG_IMAGE });\n  };\n}\n\nexport function getTables() {\n  return async (dispatch) => {\n    dispatch({ type: GET_TABLES });\n\n    try {\n      const ref = db.collection(\"tables\");\n      await ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((table) => {\n          data.push({ ...table.data(), id: table.id });\n        });\n        dispatch({ type: GET_TABLES_SUCCESS, tables: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_TABLES_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setTableJustCreatedFalse() {\n  return async (dispatch) => {\n    dispatch({\n      type: SET_TABLE_JUST_CREATED_FALSE,\n    });\n  };\n}\n\nexport function addTable(name, description) {\n  return async (dispatch) => {\n    const ref = db.collection(\"tables\");\n    await ref.add({ name, description }).then((table) => {\n      const cellsRows = getEmptyTableCells(table.id);\n      cellsRows.forEach((cellsRow) => {\n        ref\n          .doc(table.id)\n          .collection(\"cellsRows\")\n          .add({\n            tableId: cellsRow.tableId,\n            rowIndex: cellsRow.rowIndex,\n          })\n          .then((cellsRowValue) => {\n            const newCells = [];\n            cellsRow.cells.forEach((cell) =>\n              newCells.push({\n                ...cell,\n                tableId: table.id,\n                cellsRowId: cellsRowValue.id,\n              })\n            );\n            ref\n              .doc(table.id)\n              .collection(\"cellsRows\")\n              .doc(cellsRowValue.id)\n              .update({ cells: newCells });\n          });\n      });\n\n      dispatch({\n        type: ADD_TABLE,\n        table: { id: table.id, name, description },\n      });\n    });\n  };\n}\n\nexport function deleteTable(tableId, cellsRows) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_TABLE });\n    try {\n      var ref = db.collection(\"tables\").doc(tableId);\n      cellsRows.forEach((row) => {\n        ref.collection(\"cellsRows\").doc(row.id).delete();\n      });\n      ref.delete();\n      dispatch({ type: DELETE_TABLE_SUCCESS, tableId });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: DELETE_TABLE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setBigImage(cell) {\n  return async (dispatch) => {\n    storage\n      .ref(cell.bigImagePath)\n      .getDownloadURL()\n      .then((image) => {\n        dispatch({ type: SET_BIG_IMAGE, image, cell });\n      })\n      .catch(() => {\n        console.log(\"error\");\n      });\n  };\n}\n\nexport function setSelectedTable(table) {\n  return async (dispatch) => {\n    dispatch({ type: SET_SELECTED_TABLE, table });\n  };\n}\n","export const SIGN_IN = \"user/SIGN_IN\";\nexport const SIGN_IN_SUCCESS = \"user/SIGN_IN_SUCCESS\";\nexport const SIGN_IN_FAILED = \"user/SIGN_IN_FAILED\";\nexport const GET_USERS = \"user/GET_USERS\";\nexport const GET_USERS_SUCCESS = \"user/GET_USERS_SUCCESS\";\nexport const GET_USERS_FAILED = \"user/GET_USERS_FAILED\";\nexport const ADD_TABLE_TO_USER = \"user/ADD_TABLE_TO_USER\";\nexport const ADD_TABLE_TO_USER_SUCCESS = \"user/ADD_TABLE_TO_USER_SUCCESS\";\nexport const ADD_TABLE_TO_USER_FAILED = \"user/ADD_TABLE_TO_USER_FAILED\";\n","import { makeStyles } from \"@material-ui/core\";\nimport { Card, Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport TablesListItem from \"./TablesListItem\";\nimport { useEffect, useState } from \"react\";\nimport { getTables } from \"../../state/actions/tables\";\nimport { getUsers } from \"../../state/actions/user\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    maxWidth: \"150px\",\n    flex: 1,\n  },\n  iconmenubutton: {\n    height: \"35px\",\n    color: \"black\",\n    fontSize: \"2em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"#FFFFFF\",\n    borderWidth: \"1px\",\n    margin: \"0px auto 5px auto\",\n    borderStyle: \"solid\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  text: {\n    textAlign: \"center\",\n    margin: \"5px\",\n  },\n});\n\nconst TablesList = ({ showTableNamePopup }) => {\n  const [didGetUsers, setDidGetUsers] = useState(false);\n  const classes = useStyles();\n  const tables = useSelector((store) => store.tables.tables);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTables());\n    if (!didGetUsers) {\n      dispatch(getUsers());\n      setDidGetUsers(true);\n    }\n  }, [dispatch, didGetUsers]);\n\n  return (\n    <Card className={classes.card}>\n      <h3 className={classes.text}>Tables</h3>\n      <Button className={classes.iconmenubutton} onClick={showTableNamePopup}>\n        <AddIcon />\n      </Button>\n      {tables.map((item) => (\n        <TablesListItem item={item} key={tables.indexOf(item)} />\n      ))}\n    </Card>\n  );\n};\nTablesList.propTypes = {\n  showTableNamePopup: PropTypes.func,\n};\nexport default TablesList;\n","import {\n  SIGN_IN,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAILED,\n  GET_USERS,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILED,\n  ADD_TABLE_TO_USER,\n  ADD_TABLE_TO_USER_SUCCESS,\n  ADD_TABLE_TO_USER_FAILED,\n} from \"../actionTypes/user\";\nimport { auth, db } from \"../../firebase\";\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    dispatch({ type: SIGN_IN });\n    try {\n      auth\n        .signInWithEmailAndPassword(user.email, user.password)\n        .then((value) => {\n          db.collection(\"users\")\n            .doc(value.user.uid)\n            .get()\n            .then((snapshot) => {\n              const dbUser = snapshot.data();\n              if (dbUser.role === \"admin\") {\n                dispatch({ type: SIGN_IN_SUCCESS, user: dbUser });\n              } else {\n                dispatch({ type: SIGN_IN_FAILED });\n              }\n            });\n        });\n    } catch (e) {\n      dispatch({ type: SIGN_IN_FAILED });\n    }\n  };\n}\n\nexport function getUsers() {\n  return async (dispatch) => {\n    dispatch({ type: GET_USERS });\n    try {\n      db.collection(\"users\")\n        .get()\n        .then((snapshot) => {\n          const data = [];\n          snapshot.forEach((snap) => {\n            data.push({ ...snap.data(), id: snap.id });\n          });\n          dispatch({ type: GET_USERS_SUCCESS, data });\n        });\n    } catch (e) {\n      dispatch({ type: GET_USERS_FAILED });\n    }\n  };\n}\n\nexport function addTableToUser(user, table) {\n  return async (dispatch) => {\n    console.log(user);\n    console.log(table);\n    dispatch({ type: ADD_TABLE_TO_USER });\n    try {\n      const ref = db.collection(\"users\").doc(user.id).collection(\"tables\");\n      ref.get().then((snapshots) => {\n        ref.add({ tableId: table.id, tableOrder: snapshots.size });\n        dispatch({ type: ADD_TABLE_TO_USER_SUCCESS });\n      });\n    } catch (e) {\n      dispatch({ type: ADD_TABLE_TO_USER_FAILED });\n    }\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {\n  showEmptyCellPopup,\n  showImagePopup,\n} from \"../../../state/actions/popups\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { setBigImage } from \"../../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  cell: {\n    height: \"50px\",\n    width: \"100px\",\n    display: \"table-cell\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n  },\n});\n\nconst EmptyCell = ({ cell, cellsRow }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell && cell.bigImagePath !== undefined) {\n      dispatch(setBigImage(cell));\n    }\n  }, [cell, dispatch]);\n\n  const action = () => {\n    if (cell.type === \"empty\") {\n      dispatch(showEmptyCellPopup(cell, cellsRow));\n    } else {\n      dispatch(showImagePopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.type === \"empty\" ? \"\" : \"image\"}\n    </div>\n  );\n};\nEmptyCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n};\nexport default EmptyCell;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  showActionPopup,\n  showInfoPopup,\n  showNoTypePopup,\n  cellToUpdateCustomCellSelected,\n} from \"../../../state/actions/popups\";\nimport { addSelectingCell } from \"../../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  cell: {\n    background: (props) => props.color,\n    borderLeftWidth: (props) => props.left + \"px\",\n    borderRightWidth: (props) => props.right + \"px\",\n    borderTopWidth: (props) => props.top + \"px\",\n    borderBottomWidth: (props) => props.bottom + \"px\",\n    borderTopColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderRightColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderLeftColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderBottomColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    height: \"50px\",\n    width: \"100px\",\n    borderLeftStyle: \"solid\",\n    borderRightStyle: \"solid\",\n    borderTopStyle: \"solid\",\n    borderBottomStyle: \"solid\",\n    alignContent: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    display: \"table-cell\",\n    verticalAlign: \"middle\",\n  },\n  text: {\n    fontSize: \"10px\",\n    margin: \"0px\",\n    lineHeight: \"1.1\",\n    fontWeight: \"bold\",\n  },\n});\n\nconst Cell = ({ cell, cellsRow, isCustomCell }) => {\n  const classes = useStyles({\n    left: cell.leftBorder,\n    right: cell.rightBorder,\n    top: cell.topBorder,\n    bottom: cell.bottomBorder,\n    color: cell.color,\n    isCustomCell,\n  });\n  const cellToUpdate = useSelector((store) => store.popups.cellToUpdate);\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const action = () => {\n    if (isSelecting) {\n      dispatch(addSelectingCell(cell));\n    } else if (cellToUpdate !== undefined) {\n      if (\n        !(\n          cellToUpdate.cell.columnIndex === cell.columnIndex &&\n          cellToUpdate.cell.rowIndex === cell.rowIndex\n        ) &&\n        cell.type === \"info\"\n      ) {\n        dispatch(cellToUpdateCustomCellSelected(cell));\n      }\n    } else if (cell.type === \"notype\") {\n      dispatch(showNoTypePopup(cell, cellsRow));\n    } else if (cell.type === \"info\") {\n      dispatch(showInfoPopup(cell, cellsRow));\n    } else if (cell.type === \"action\") {\n      dispatch(showActionPopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.sumAll && (\n        <img\n          style={{\n            width: \"25px\",\n            height: \"25px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n          src={\"/dao.png\"}\n          alt=\"all\"\n        />\n      )}\n      {cell.name && !cell.sumAll && (\n        <div\n          dangerouslySetInnerHTML={{\n            __html: cell.name\n              .replaceAll(\"<p>\", \"<span>\")\n              .replaceAll(\"</p>\", \"</span><br/>\"),\n          }}\n        ></div>\n      )}\n    </div>\n  );\n};\nCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n  isCustomCell: PropTypes.bool,\n};\nexport default Cell;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nimport EmptyCell from \"./cells/EmptyCell\";\nimport Cell from \"./cells/Cell\";\n\nconst useStyles = makeStyles({\n  row: {\n    display: \"table-row\",\n  },\n});\n\nconst CellsRow = ({ cellsRow }) => {\n  const classes = useStyles();\n  const cellToUpdateCustomCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRowLetsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  return (\n    <div className={classes.row}>\n      {letsUpdate && cellsRowLetsUpdate && <div></div>}\n      {cellsRow &&\n        cellsRow.cells &&\n        cellsRow.cells\n          .sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1))\n          .map((cell) =>\n            cell.type === \"empty\" || cell.type === \"image\" ? (\n              <EmptyCell\n                cell={cell}\n                cellsRow={cellsRow}\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            ) : (\n              <Cell\n                cell={cell}\n                cellsRow={cellsRow}\n                isCustomCell={\n                  (cellToUpdateCustomCells &&\n                    cellToUpdateCustomCells.includes(cell)) ||\n                  (selectedCells && selectedCells.includes(cell))\n                }\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            )\n          )}\n    </div>\n  );\n};\nCellsRow.propTypes = {\n  cellsRow: PropTypes.object,\n};\nexport default CellsRow;\n","export const UPDATE_CELL = \"cell/UPDATE_CELL\";\nexport const UPDATE_CELL_SUCCESS = \"cell/UPDATE_CELL_SUCCESS\";\nexport const UPDATE_CELL_FAILED = \"cell/UPDATE_CELL_FAILED\";\nexport const GET_CELL_FILE = \"cell/GET_CELL_FILE\";\nexport const GET_CELL_FILE_SUCCESS = \"cell/GET_CELL_FILE_SUCCESS\";\nexport const GET_CELL_FILE_FAILED = \"cell/GET_CELL_FILE_FAILED\";\nexport const GET_CELL_NAME_FILE = \"cell/GET_CELL_NAME_FILE\";\nexport const GET_CELL_NAME_FILE_SUCCESS = \"cell/GET_CELL_NAME_FILE_SUCCESS\";\nexport const GET_CELL_NAME_FILE_FAILED = \"cell/GET_CELL_NAME_FILE_FAILED\";\nexport const GET_CELL_IMAGE_FILE = \"cell/GET_CELL_IMAGE_FILE\";\nexport const GET_CELL_IMAGE_FILE_SUCCESS = \"cell/GET_CELL_IMAGE_FILE_SUCCESS\";\nexport const GET_CELL_IMAGE_FILE_FAILED = \"cell/GET_CELL_IMAGE_FILE_FAILED\";","import { db, storage } from \"../../firebase\";\nimport {\n  UPDATE_CELL,\n  UPDATE_CELL_SUCCESS,\n  UPDATE_CELL_FAILED,\n  GET_CELL_FILE,\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_FILE_FAILED,\n  GET_CELL_NAME_FILE,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_FAILED,\n  GET_CELL_IMAGE_FILE,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_FAILED,\n} from \"../actionTypes/cell\";\nimport { CLOSE_POPUP, CUSTOM_CELLS_SUBMITED } from \"../actionTypes/popups\";\n\nexport function updateCell(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== cell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(cell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell,\n      });\n      dispatch({ type: CUSTOM_CELLS_SUBMITED });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function updateImageCell(cell, file, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let bigImagePath =\n        \"/\" +\n        cell.tableId +\n        \"/\" +\n        cell.cellsRowId +\n        \"/\" +\n        cell.columnIndex +\n        \"/\" +\n        file.name;\n      await storage.ref(bigImagePath).put(file);\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, bigImagePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        e,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function getCellImageFile(bigImagePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_IMAGE_FILE });\n    try {\n      storage\n        .ref(bigImagePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_IMAGE_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_IMAGE_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellNameFile(nameFilePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_NAME_FILE });\n    try {\n      storage\n        .ref(nameFilePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_NAME_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_NAME_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellFile(filePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_FILE });\n    try {\n      storage\n        .ref(filePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function updateInfoCell(cell, file, nameFile, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let filePath = \"\";\n      let nameFilePath = \"\";\n      if (file !== undefined) {\n        filePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          file.name;\n        await storage.ref(filePath).put(file);\n      } else if (cell.filePath && cell.filePath !== \"\") {\n        filePath = cell.filePath;\n      }\n      if (nameFile !== undefined) {\n        nameFilePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          nameFile.name;\n        await storage.ref(nameFilePath).put(nameFile);\n      } else if (cell.nameFilePath && cell.nameFilePath !== \"\") {\n        nameFilePath = cell.nameFilePath;\n      }\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, filePath, nameFilePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      console.log(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      console.log(error);\n      console.log(e);\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cancelCustomCells } from \"../../../state/actions/popups\";\nimport { updateCell } from \"../../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  container: {\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    background: \"white\",\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsInfo = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const customCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const cell = useSelector((store) => store.popups.cellToUpdate);\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const submitCustomCellsF = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell.cell,\n          customCells: convertCustomCells(customCells),\n        },\n        cellsRow\n      )\n    );\n  };\n\n  const convertCustomCells = (cells) => {\n    const data = [];\n    cells.forEach((element) => {\n      data.push({\n        columnIndex: element.columnIndex,\n        rowIndex: element.rowIndex,\n      });\n    });\n    return data;\n  };\n\n  const cancelCustomCellsF = () => {\n    dispatch(cancelCustomCells());\n  };\n\n  const convertCustomCellsName = (text) => {\n    return text.split(\"<br />\").join(\" \");\n  };\n\n  return customCells !== undefined ? (\n    <div className={classes.container}>\n      {letsUpdate && <div></div>}\n      <h2>Select cells</h2>\n      <div className={classes.cont}>\n        {customCells.map((cell, ix) => (\n          <p key={ix} className={classes.text}>\n            {cell.name === null ? \"\" : convertCustomCellsName(cell.name)}\n          </p>\n        ))}\n        {customCells.length === 0 ? (\n          <p className={classes.text}>No cells are selected</p>\n        ) : (\n          <p />\n        )}\n      </div>\n      <Button className={classes.cancelButton} onClick={cancelCustomCellsF}>\n        Cancel\n      </Button>\n      <Button className={classes.submitButton} onClick={submitCustomCellsF}>\n        Submit custom cells\n      </Button>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\nexport default SelectedCellsInfo;\n","import { useSelector } from \"react-redux\";\n\nconst BigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const cell = useSelector((store) => store.tables.bigImageCell);\n\n  return image !== undefined ? (\n    <img\n      style={{\n        position: \"absolute\",\n        top: `${\n          cell.rowIndex * 50 +\n          140 +\n          64 +\n          56 +\n          parseInt(cell.bigImageTopMargin) +\n          25 -\n          cell.bigImageHeight / 2\n        }px`,\n        left: `${\n          cell.columnIndex * 100 +\n          180 +\n          parseInt(cell.bigImageLeftMargin) +\n          50 -\n          cell.bigImageWidth / 2\n        }px`,\n      }}\n      src={image}\n      height={cell.bigImageHeight}\n      width={cell.bigImageWidth}\n      alt=\"big\"\n    />\n  ) : (\n    <div></div>\n  );\n};\nexport default BigImage;\n","import { Button } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeBigImage } from \"../../../state/actions/tables\";\n\nconst RemoveBigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const dispatch = useDispatch();\n\n  const removeBigImageFromTable = () => {\n    dispatch(removeBigImage());\n  };\n\n  return image !== undefined ? (\n    <Button\n      style={{\n        color: \"white\",\n        background: \"red\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\",\n      }}\n      onClick={removeBigImageFromTable}\n    >\n      TEMPORARILY REMOVE BIG IMAGE ( UNTIL REFRESH )\n    </Button>\n  ) : (\n    <div></div>\n  );\n};\nexport default RemoveBigImage;\n","import { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cancelIsSelecting } from \"../../../state/actions/cellsRows\";\nimport { showFormatCellsPopup } from \"../../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"20px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsFormat = () => {\n  const classes = useStyles();\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const letsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n  const dispatch = useDispatch();\n\n  const convertCellsName = (text) => {\n    return text ? text.split(\"<br />\").join(\" \") : \"\";\n  };\n\n  const handleFormat = () => {\n    dispatch(showFormatCellsPopup());\n  };\n\n  const handleCancel = () => {\n    dispatch(cancelIsSelecting());\n  };\n\n  return (\n    <div>\n      <Button className={classes.formatButton} onClick={handleFormat}>\n        Format Cells\n      </Button>\n      <Button className={classes.cancelButton} onClick={handleCancel}>\n        CANCEL\n      </Button>\n      <h2>Select cells</h2>\n      {letsUpdate && <div></div>}\n      <div className={classes.cont}>\n        {selectedCells &&\n          selectedCells.map((cell, ix) => (\n            <p key={ix} className={classes.text}>\n              {cell.name === null ? \"\" : convertCellsName(cell.name)}\n            </p>\n          ))}\n      </div>\n      {!selectedCells || selectedCells.length === 0 ? (\n        <p>No cells are selected</p>\n      ) : (\n        <span />\n      )}\n    </div>\n  );\n};\nexport default SelectedCellsFormat;\n","import { Button, Card, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCellsRows, setIsSelecting } from \"../../state/actions/cellsRows\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport CellsRow from \"./CellsRow\";\nimport {\n  deleteTable,\n  setTableJustCreatedFalse,\n} from \"../../state/actions/tables\";\nimport SelectedCellsInfo from \"./utils/SelectedCellsInfo\";\nimport BigImage from \"./utils/BigImage\";\nimport RemoveBigImage from \"./utils/RemoveBigImage\";\nimport SelectedCellsFormat from \"./utils/SelectedCellsFormat\";\nimport { showAddToUserPopup } from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    height: \"20px\",\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  addToUserButton: {\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst Table = ({ table }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n  const tableJustCreated = useSelector(\n    (store) => store.tables.tableJustCreated\n  );\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const timeoutFinished = useCallback(() => {\n    dispatch(getCellsRows(table.id));\n    dispatch(setTableJustCreatedFalse());\n  }, [dispatch, table]);\n\n  useEffect(() => {\n    if (!tableJustCreated) {\n      if (!loading) {\n        dispatch(getCellsRows(table.id));\n      }\n      setLoading(false);\n    } else {\n      setLoading(true);\n      setTimeout(timeoutFinished, 3000);\n    }\n  }, [dispatch, table, tableJustCreated, loading, timeoutFinished]);\n\n  const handleDelete = () => {\n    dispatch(deleteTable(table.id, cellsRows));\n  };\n\n  const handleAddToUser = () => {\n    dispatch(showAddToUserPopup());\n  };\n\n  const handleSelect = () => {\n    dispatch(setIsSelecting());\n  };\n\n  return (\n    <Card className={classes.card}>\n      <h2 className={classes.name}>{table.name}</h2>\n      <div\n        dangerouslySetInnerHTML={{\n          __html: table.description\n            .replaceAll(\"<p\", \"<span\")\n            .replaceAll(\"</p>\", \"</span><br/>\"),\n        }}\n      ></div>\n      <RemoveBigImage />\n      <SelectedCellsInfo />\n      {loading && <CircularProgress />}\n      {!loading && (\n        <div>\n          {!isSelecting && (\n            <Button className={classes.formatButton} onClick={handleSelect}>\n              Select Cells\n            </Button>\n          )}\n          {isSelecting && <SelectedCellsFormat />}\n          <div className={classes.cellContainer}>\n            <BigImage />\n            {cellsRows.map((cellsRow) => (\n              <CellsRow cellsRow={cellsRow} key={cellsRows.indexOf(cellsRow)} />\n            ))}\n          </div>\n          <div>\n            <Button\n              className={classes.addToUserButton}\n              onClick={handleAddToUser}\n            >\n              ADD TABLE TO USER\n            </Button>\n            <Button className={classes.deleteButton} onClick={handleDelete}>\n              Delete\n            </Button>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\nTable.propTypes = {\n  table: PropTypes.object,\n};\nexport default Table;\n","import React from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport ReactQuill from \"react-quill\";\n\nimport { addTable } from \"../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    marginTop: \"60px\",\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst TableInfoPopup = (props) => {\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(addTable(name, description));\n    props.handleClose();\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleDescriptionChange = (value) => {\n    setDescription(value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={props.handleClose}>\n          x\n        </span>\n        <h2>Create table</h2>\n        <TextField\n          required\n          fullWidth\n          label=\"Name\"\n          name=\"name\"\n          variant=\"outlined\"\n          placeholder=\"Name\"\n          value={name}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleNameChange}\n        />\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter description:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default TableInfoPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useEffect } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nimport { beginCustomSelect, closePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n});\n\nconst ActionCellPopup = () => {\n  const [sumAll, setSumAll] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [rows, setRows] = React.useState(\"\");\n  const [actionType, setActionType] = React.useState(\"\");\n  const [typeActionType, setTypeActionType] = React.useState(\"\");\n  const [typeActionTypeName, setTypeActionTypeName] = React.useState(\"\");\n  const [fontSize, setFontSize] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell.sumAll) {\n      setSumAll(cell.sumAll);\n    } else {\n      setName(cell.name === undefined ? \"\" : cell.name);\n      setFontSize(cell.fontSize);\n      setActionType(cell.actionType);\n      setTypeActionType(cell.typeActionType);\n      setTypeActionTypeName(cell.typeActionTypeName);\n      setColor(cell.color);\n      setRows(cell.rows);\n    }\n  }, [cell]);\n\n  const actionTypes = [\"selectrows\", \"selecttype\", \"custom\"];\n  const typeActionTypes = [\"selecttypeall\", \"selecttyperows\"];\n  const actionTypesNames = [\"Select Rows\", \"Select Type\", \"Custom\"];\n  const typeActionTypesNames = [\"Select All Cells of Type\", \"Select Type Rows\"];\n\n  const handleNameChange = (value) => {\n    setName(value);\n  };\n\n  const handleTypeNameChange = (event) => {\n    setTypeActionTypeName(event.target.value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (actionType === \"custom\") {\n      dispatch(\n        beginCustomSelect({\n          cell: {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            fontSize: fontSize === undefined ? \"\" : fontSize,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n          },\n        })\n      );\n    } else {\n      dispatch(\n        updateCell(\n          {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            fontSize: fontSize === undefined ? \"\" : fontSize,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n          },\n          cellsRow\n        )\n      );\n      handleClose();\n    }\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          color: \"white\",\n          actionType: \"\",\n          typeActionType: \"\",\n          typeActionTypeName: \"\",\n          fontSize: \"\",\n          rows: \"\",\n          sumAll: false,\n          type: \"notype\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleRowsChange = (event) => {\n    setRows(event.target.value);\n  };\n\n  const handleActionTypeChange = (event) => {\n    setActionType(event.target.value);\n  };\n\n  const handleTypeActionTypeChange = (event) => {\n    setTypeActionType(event.target.value);\n  };\n\n  const handleSumAll = () => {\n    setSumAll(!sumAll);\n  };\n\n  const handleFontSize = (event) => {\n    setFontSize(event.target.value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Action</h2>\n        <div>\n          <FormControlLabel\n            value={sumAll}\n            control={<Checkbox color=\"default\" onClick={handleSumAll} />}\n            label=\"Sum all?\"\n            checked={sumAll}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!sumAll && (\n          <div>\n            <div className={classes.quillContainer}>\n              <p className={classes.text}>Enter name:</p>\n              <ReactQuill\n                theme=\"snow\"\n                className={classes.editor}\n                value={name}\n                onChange={handleNameChange}\n              />\n            </div>\n            <h4 style={{ marginTop: \"60px\" }}>\n              Hint: Standard mobile font is 12. 3 Rows can pass into cell.\n            </h4>\n            <TextField\n              fullWidth\n              label=\"Font size\"\n              name=\"font_size\"\n              variant=\"outlined\"\n              placeholder=\"Font size\"\n              value={fontSize}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleFontSize}\n            />\n            <h3>Format cell</h3>\n            <TextField\n              fullWidth\n              label=\"Color\"\n              name=\"color\"\n              variant=\"outlined\"\n              placeholder=\"Cell color\"\n              value={color}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleColorChange}\n            />\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"label\">Action Type</InputLabel>\n              <Select\n                id=\"select\"\n                value={actionType || \"\"}\n                onChange={handleActionTypeChange}\n              >\n                {actionTypes.map((item, ix) => (\n                  <MenuItem key={item} value={item}>\n                    {actionTypesNames[ix]}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            {actionType === actionTypes[1] && (\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"label\">Action Type</InputLabel>\n                <Select\n                  id=\"select\"\n                  value={typeActionType || \"\"}\n                  onChange={handleTypeActionTypeChange}\n                >\n                  {typeActionTypes.map((item, ix) => (\n                    <MenuItem key={item} value={item}>\n                      {typeActionTypesNames[ix]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n            {actionType === actionTypes[1] && (\n              <TextField\n                fullWidth\n                label=\"Type name\"\n                name=\"Type name\"\n                variant=\"outlined\"\n                placeholder=\"Enter type name\"\n                value={typeActionTypeName || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleTypeNameChange}\n              />\n            )}\n            {(actionType === actionTypes[0] ||\n              (actionType === actionTypes[1] &&\n                typeActionType === typeActionTypes[1])) && (\n              <TextField\n                fullWidth\n                label=\"Rows\"\n                name=\"rows\"\n                variant=\"outlined\"\n                placeholder=\"Enter row indexes separated with Whitespaces ( Begining with 0 )\"\n                value={rows || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleRowsChange}\n              />\n            )}\n          </div>\n        )}\n        {cell.type !== \"notype\" && (\n          <Button className={classes.noTypeButton} onClick={handleNoTypeSubmit}>\n            MAKE NO TYPE\n          </Button>\n        )}\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Checkbox, FormControlLabel, makeStyles } from \"@material-ui/core\";\n\nimport { closePopup, submitNoTypePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst NoTypeCellPopup = () => {\n  const [isAction, setIsAction] = React.useState(false);\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleIsAction = () => {\n    setIsAction(!isAction);\n  };\n\n  const handleSubmit = () => {\n    dispatch(submitNoTypePopup(isAction));\n  };\n\n  const handleMakeEmptySubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"empty\" }, cellsRow));\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Select cell type</h2>\n        <div>\n          <FormControlLabel\n            value={isAction}\n            control={<Checkbox color=\"default\" onClick={handleIsAction} />}\n            label=\"Is it an action cell?\"\n            checked={isAction}\n            labelPlacement=\"start\"\n          />\n        </div>\n        <Button\n          className={classes.makeEmptyButton}\n          onClick={handleMakeEmptySubmit}\n        >\n          Make Empty\n        </Button>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit Type Cell\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default NoTypeCellPopup;\n","export const SHOW_SNACKBAR = \"snackbar/SHOW_SNACKBAR\";\nexport const CLOSE_SNACKBAR = \"snackbar/CLOSE_SNACKBAR\";\n","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nexport function showSnackbar(message) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_SNACKBAR, message });\n  };\n}\n\nexport function closeSnackbar() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_SNACKBAR });\n  };\n}\n","import React from \"react\";\nimport { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport {\n  getCellFile,\n  getCellNameFile,\n  updateInfoCell,\n  updateCell,\n} from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  borderInputcontainer: {\n    marginTop: \"50px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    marginBottom: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst InfoCellPopup = () => {\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [typeForAction, setTypeForAction] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [nameFile, setNameFile] = React.useState(undefined);\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [baseTen, setBaseTen] = React.useState(\"\");\n  const [baseThree, setBaseThree] = React.useState(\"\");\n  const [baseHundred, setBaseHundred] = React.useState(\"\");\n  const [baseFour, setBaseFour] = React.useState(\"\");\n  const [databaseID, setDatabaseID] = React.useState(\"\");\n  const [fontSize, setFontSize] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellFile);\n  const cellNameFile = useSelector((store) => store.popups.cellNameFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setName(cell.name === undefined ? \"\" : cell.name);\n      setColor(cell.color);\n      setFontSize(cell.fontSize);\n      setDescription(cell.description === undefined ? \"\" : cell.description);\n      setTop(cell.topBorder);\n      setBottom(cell.bottomBorder);\n      setLeft(cell.leftBorder);\n      setRight(cell.rightBorder);\n      setBaseTen(cell.baseTen);\n      setBaseFour(cell.baseFour);\n      setBaseHundred(cell.baseHundred);\n      setBaseThree(cell.baseThree);\n      setDatabaseID(cell.databaseID);\n      if (cell.nameFilePath !== undefined && cell.nameFilePath !== \"\") {\n        dispatch(getCellNameFile(cell.nameFilePath));\n      }\n      if (cell.filePath !== undefined && cell.filePath !== \"\") {\n        dispatch(getCellFile(cell.filePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleSubmit = () => {\n    dispatch(\n      updateInfoCell(\n        {\n          ...cell,\n          name: name,\n          description: description === undefined ? \"\" : description,\n          color,\n          fontSize: fontSize === undefined ? null : fontSize,\n          typeForAction: typeForAction === undefined ? \"\" : typeForAction,\n          topBorder: top,\n          bottomBorder: bottom,\n          leftBorder: left,\n          rightBorder: right,\n          type: \"info\",\n          baseTen: baseTen === undefined ? \"\" : fontSize,\n          baseFour: baseFour === undefined ? \"\" : baseFour,\n          baseHundred: baseHundred === undefined ? \"\" : baseHundred,\n          baseThree: baseThree === undefined ? \"\" : baseThree,\n          databaseID: databaseID === undefined ? \"\" : databaseID,\n        },\n        file,\n        nameFile,\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleNameChange = (value) => {\n    setName(value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleDescriptionChange = (value) => {\n    setDescription(value);\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const nameFileLoaded = (loadedFile) => {\n    setNameFile(loadedFile);\n  };\n\n  const removeNameFile = () => {\n    setNameFile(undefined);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const handleTypeForAction = (event) => {\n    setTypeForAction(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBaseTenChange = (event) => {\n    setBaseTen(event.target.value);\n  };\n\n  const handleBaseFourChange = (event) => {\n    setBaseFour(event.target.value);\n  };\n\n  const handleBaseThreeChange = (event) => {\n    setBaseThree(event.target.value);\n  };\n\n  const handleBaseHundredChange = (event) => {\n    setBaseHundred(event.target.value);\n  };\n\n  const handleDatabaseIDChange = (event) => {\n    setDatabaseID(event.target.value);\n  };\n\n  const handleFontSize = (event) => {\n    setFontSize(event.target.value);\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          description: \"\",\n          color: \"white\",\n          typeForAction: \"\",\n          topBorder: 1,\n          bottomBorder: 1,\n          leftBorder: 1,\n          rightBorder: 1,\n          type: \"notype\",\n          file: \"\",\n          nameFile: \"\",\n          fontSize: \"\",\n          baseTen: \"\",\n          baseHundred: \"\",\n          baseThree: \"\",\n          baseFour: \"\",\n          databaseId: \"\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Information</h2>\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter name:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={name}\n            onChange={handleNameChange}\n          />\n        </div>\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={nameFileLoaded}\n          onError={showError}\n        >\n          <Button style={{ marginTop: \"60px\" }} className={classes.button}>\n            Click to upload NAME image\n          </Button>\n        </FilePicker>\n        {(nameFile || cellNameFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:\n            <strong>\n              {nameFile === undefined ? cellNameFile.name : nameFile.name}\n            </strong>\n            <button\n              className={classes.removeFileButton}\n              onClick={removeNameFile}\n            >\n              Remove\n            </button>\n          </div>\n        )}\n        <h4>Hint: Standard mobile font is 12. 3 Rows can pass into cell.</h4>\n        <TextField\n          fullWidth\n          label=\"Font size\"\n          name=\"font_size\"\n          variant=\"outlined\"\n          placeholder=\"Font size\"\n          value={fontSize}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleFontSize}\n        />\n        <h3>Format cell</h3>\n        <TextField\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Type for action\"\n          name=\"type_for_action\"\n          variant=\"outlined\"\n          placeholder=\"Type for action\"\n          value={typeForAction}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleTypeForAction}\n        />\n        <FilePicker\n          extensions={[\"pdf\", \"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.button}>Click to upload file</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded file:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter description:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <div className={classes.borderInputcontainer}>\n          <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n          <TextField\n            name=\"top\"\n            variant=\"outlined\"\n            label=\"Top\"\n            placeholder=\"Top\"\n            value={top}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleTopChange}\n          />\n          <TextField\n            label=\"Right\"\n            name=\"right\"\n            variant=\"outlined\"\n            placeholder=\"Right\"\n            value={right}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleRightChange}\n          />\n          <TextField\n            label=\"Bottom\"\n            name=\"bottom\"\n            variant=\"outlined\"\n            placeholder=\"Bottom\"\n            value={bottom}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleBottomChange}\n          />\n          <TextField\n            label=\"Left\"\n            name=\"left\"\n            variant=\"outlined\"\n            placeholder=\"Left\"\n            value={left}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleLeftChange}\n          />\n        </div>\n        <h2>Bluetooth</h2>\n        <TextField\n          fullWidth\n          label=\"Base 10\"\n          name=\"base10\"\n          variant=\"outlined\"\n          placeholder=\"Base 10\"\n          value={baseTen}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseTenChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 44\"\n          name=\"base44\"\n          variant=\"outlined\"\n          placeholder=\"Base 44\"\n          value={baseFour}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseFourChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 100\"\n          name=\"base100\"\n          variant=\"outlined\"\n          placeholder=\"Base 100\"\n          value={baseHundred}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseHundredChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 336\"\n          name=\"base336\"\n          variant=\"outlined\"\n          placeholder=\"Base 336\"\n          value={baseThree}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseThreeChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Database ID\"\n          name=\"databaseID\"\n          variant=\"outlined\"\n          placeholder=\"Database ID\"\n          value={databaseID}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleDatabaseIDChange}\n        />\n        <div>\n          {cell.type !== \"notype\" && (\n            <Button\n              className={classes.noTypeButton}\n              onClick={handleNoTypeSubmit}\n            >\n              MAKE NO TYPE\n            </Button>\n          )}\n          <Button className={classes.submitButton} onClick={handleSubmit}>\n            Submit\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default InfoCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { closePopup, showImagePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  notypeButton: {\n    border: \"1px solid black\",\n    background: \"blue\",\n    marginRight: \"20px\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst EmptyCellPopup = () => {\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"notype\" }, cellsRow));\n  };\n\n  const handleImageSubmit = () => {\n    dispatch(showImagePopup());\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <Button className={classes.notypeButton} onClick={handleSubmit}>\n          MAKE CELL NOTYPE\n        </Button>\n        <Button className={classes.button} onClick={handleImageSubmit}>\n          ADD IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default EmptyCellPopup;\n","import { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { updateImageCell, getCellImageFile } from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  fileButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst ImageCellPopup = () => {\n  const [width, setWidth] = React.useState(\"\");\n  const [height, setHeight] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [leftMargin, setLeftMargin] = React.useState(\"\");\n  const [topMargin, setTopMargin] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellImageFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setHeight(cell.bigImageHeight === undefined ? \"\" : cell.bigImageHeight);\n      setWidth(cell.bigImageWidth === undefined ? \"\" : cell.bigImageWidth);\n      setLeftMargin(\n        cell.bigImageLeftMargin === undefined ? \"\" : cell.bigImageLeftMargin\n      );\n      setTopMargin(\n        cell.bigImageTopMargin === undefined ? \"\" : cell.bigImageTopMargin\n      );\n      if (cell && cell.bigImagePath !== undefined && cell.bigImagePath !== \"\") {\n        dispatch(getCellImageFile(cell.bigImagePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleHeightChange = (event) => {\n    setHeight(event.target.value);\n  };\n\n  const handleTopMarginChange = (event) => {\n    setTopMargin(event.target.value);\n  };\n\n  const handleLeftMarginChange = (event) => {\n    setLeftMargin(event.target.value);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const handleSubmit = () => {\n    dispatch(\n      updateImageCell(\n        {\n          ...cell,\n          type: \"image\",\n          bigImageWidth: width,\n          bigImageHeight: height,\n          bigImageTopMargin: topMargin === \"\" ? 0 : topMargin,\n          bigImageLeftMargin: leftMargin === \"\" ? 0 : leftMargin,\n        },\n        file,\n        cellsRow\n      )\n    );\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.fileButton}>Click to upload image</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <h3>Single cell width = 100 and height = 50</h3>\n        <TextField\n          fullWidth\n          label=\"Width\"\n          name=\"width\"\n          variant=\"outlined\"\n          placeholder=\"Enter width\"\n          value={width}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleWidthChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Height\"\n          name=\"height\"\n          variant=\"outlined\"\n          placeholder=\"Enter height\"\n          value={height}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleHeightChange}\n        />\n        <div style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>\n          <TextField\n            label=\"Top margin\"\n            name=\"topMargin\"\n            variant=\"outlined\"\n            placeholder=\"Top margin\"\n            value={topMargin}\n            style={{\n              marginRight: \"10px\",\n              maxWidth: \"140px\",\n            }}\n            onChange={handleTopMarginChange}\n          />\n          <TextField\n            label=\"Left margin\"\n            name=\"leftMargin\"\n            variant=\"outlined\"\n            placeholder=\"Left margin\"\n            value={leftMargin}\n            style={{\n              maxWidth: \"140px\",\n            }}\n            onChange={handleLeftMarginChange}\n          />\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          SUBMIT\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default ImageCellPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { submitSelectingCells } from \"../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  borderInputcontainer: {\n    marginTop: \"10px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst FormatCellsPopup = () => {\n  const [color, setColor] = React.useState(\"\");\n  const [width, setWidth] = React.useState(\"\");\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [isBoxBorder, setIsBoxBorder] = React.useState(false);\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(\n      submitSelectingCells(\n        { color, top, bottom, left, right, isBoxBorder, width },\n        selectedCells,\n        cellsRows\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBoxBorder = () => {\n    setIsBoxBorder(!isBoxBorder);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Format Cells</h2>\n        <TextField\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <div>\n          <FormControlLabel\n            value={isBoxBorder}\n            control={<Checkbox color=\"default\" onClick={handleBoxBorder} />}\n            label=\"Is box border?\"\n            checked={isBoxBorder}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!isBoxBorder && (\n          <div className={classes.borderInputcontainer}>\n            <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n            <TextField\n              name=\"top\"\n              variant=\"outlined\"\n              label=\"Top\"\n              placeholder=\"Top\"\n              value={top}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleTopChange}\n            />\n            <TextField\n              label=\"Right\"\n              name=\"right\"\n              variant=\"outlined\"\n              placeholder=\"Right\"\n              value={right}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleRightChange}\n            />\n            <TextField\n              label=\"Bottom\"\n              name=\"bottom\"\n              variant=\"outlined\"\n              placeholder=\"Bottom\"\n              value={bottom}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleBottomChange}\n            />\n            <TextField\n              label=\"Left\"\n              name=\"left\"\n              variant=\"outlined\"\n              placeholder=\"Left\"\n              value={left}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleLeftChange}\n            />\n          </div>\n        )}\n        {isBoxBorder && (\n          <div>\n            <TextField\n              label=\"Border width\"\n              name=\"width\"\n              variant=\"outlined\"\n              placeholder=\"Border width\"\n              value={width}\n              style={{\n                margin: \"10px\",\n              }}\n              onChange={handleWidthChange}\n            />\n          </div>\n        )}\n        <Button className={classes.submitButton} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default FormatCellsPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport {\n  makeStyles,\n  FormControl,\n  Select,\n  InputLabel,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { addTableToUser } from \"../../state/actions/user\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst AddToUserPopup = () => {\n  const [selectedUser, setSelectedUser] = React.useState(undefined);\n  const users = useSelector((store) => store.user.users);\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(addTableToUser(selectedUser, selectedTable));\n    handleClose();\n  };\n\n  const handleChange = (event) => {\n    setSelectedUser(event.target.value);\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Select user</h2>\n        <div>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"label\">User</InputLabel>\n            <Select\n              id=\"demo-simple-select-helper\"\n              value={selectedUser || \"\"}\n              label=\"User\"\n              onChange={handleChange}\n            >\n              {users.map((user, ix) => (\n                <MenuItem key={ix} value={user}>\n                  <em>{user.email}</em>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default AddToUserPopup;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TablesList from \"../tables_list/TablesList\";\nimport Table from \"../table/Table\";\nimport TableInfoPopup from \"../popup/TableInfoPopup\";\nimport ActionCellPopup from \"../popup/ActionCellPopup\";\nimport NoTypeCellPopup from \"../popup/NoTypeCellPopup\";\nimport InfoCellPopup from \"../popup/InfoCellPopup\";\nimport EmptyCellPopup from \"../popup/EmptyCellPopup\";\nimport ImageCellPopup from \"../popup/ImageCellPopup\";\nimport FormatCellsPopup from \"../popup/FormatCellsPopup\";\nimport AddToUserPopup from \"../popup/AddToUserPopup\";\n\nconst Home = () => {\n  const [isNamePopupOpen, setIsNamePopupOpen] = useState(false);\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const isActionCellPopupOpen = useSelector(\n    (store) => store.popups.actionPopupOpen\n  );\n  const isEmptyCellPopupOpen = useSelector(\n    (store) => store.popups.emptyCellPopupOpen\n  );\n  const isInfoCellPopupOpen = useSelector(\n    (store) => store.popups.infoPopupOpen\n  );\n  const noTypeCellPopupOpen = useSelector(\n    (store) => store.popups.noTypePopupOpen\n  );\n  const imageCellPopupOpen = useSelector(\n    (store) => store.popups.imagePopupOpen\n  );\n  const formatCellsPopupOpen = useSelector(\n    (store) => store.popups.formatCellsPopupOpen\n  );\n  const addToUserPopupOpen = useSelector(\n    (store) => store.popups.addToUserPopupOpen\n  );\n\n  const user = useSelector((store) => store.user.user);\n\n  const history = useHistory();\n\n  const popupOpened = () => {\n    window.scrollTo(0, 0);\n    disableBodyScroll(document);\n  };\n\n  isNamePopupOpen ||\n  isActionCellPopupOpen ||\n  isInfoCellPopupOpen ||\n  imageCellPopupOpen ||\n  isEmptyCellPopupOpen ||\n  noTypeCellPopupOpen ||\n  formatCellsPopupOpen ||\n  addToUserPopupOpen\n    ? popupOpened()\n    : enableBodyScroll(document);\n\n  useEffect(() => {\n    if (user === undefined || user.role !== \"admin\") {\n      history.push(\"/\");\n    }\n    window.scrollTo(0, 0);\n  }, [user, history]);\n\n  const toggleNamePopup = () => {\n    setIsNamePopupOpen(!isNamePopupOpen);\n  };\n\n  return (\n    <Container\n      style={{\n        padding: \"10px\",\n        width: \"100%\",\n        display: \"inline-flex\",\n        flexDirection: \"row\",\n      }}\n    >\n      <TablesList showTableNamePopup={toggleNamePopup} />\n      {selectedTable === undefined ? (\n        <h2 style={{ flex: 1, textAlign: \"center\" }}>Please select a table</h2>\n      ) : (\n        <Table table={selectedTable} />\n      )}\n      {isNamePopupOpen && <TableInfoPopup handleClose={toggleNamePopup} />}\n      {isEmptyCellPopupOpen && <EmptyCellPopup />}\n      {isActionCellPopupOpen && <ActionCellPopup />}\n      {isInfoCellPopupOpen && <InfoCellPopup />}\n      {noTypeCellPopupOpen && <NoTypeCellPopup />}\n      {imageCellPopupOpen && <ImageCellPopup />}\n      {formatCellsPopupOpen && <FormatCellsPopup />}\n      {addToUserPopupOpen && <AddToUserPopup />}\n    </Container>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { closeSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nconst AppSnackbar = () => {\n  const classes = useStyles();\n  const open = useSelector((store) => store.snackbar.open);\n  const message = useSelector((store) => store.snackbar.message);\n  const dispatch = useDispatch();\n\n  if (!open) {\n    return null;\n  }\n\n  const close = () => {\n    dispatch(closeSnackbar());\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      open={open}\n      autoHideDuration={5000}\n      onClose={close}\n      message={<span>{message}</span>}\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={close}\n        >\n          <CloseIcon />\n        </IconButton>,\n      ]}\n    />\n  );\n};\n\nexport default AppSnackbar;\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button, Card, TextField, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signIn } from \"../../state/actions/user\";\n\nconst useStyles = makeStyles({\n  title: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: \"bold\",\n  },\n  container: {\n    background: \"white\",\n    borderRadius: \"10px\",\n    maxWidth: \"500px\",\n    alignContent: \"center\",\n    padding: \"10px\",\n    display: \"flex\",\n    marginTop: \"30px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    margin: \"10px\",\n    minWidth: \"200px\",\n    background: \"green\",\n    fontWeight: \"bold\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SignIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const user = useSelector((store) => store.user.user);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user !== undefined) {\n      history.push(\"/home\");\n    }\n  }, [user, history]);\n\n  const handleSubmit = () => {\n    dispatch(signIn({ email, password }));\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <Card className={classes.container}>\n      <Typography className={classes.title}>Sign In</Typography>\n      <TextField\n        required\n        fullWidth\n        name=\"email\"\n        variant=\"outlined\"\n        placeholder=\"Email\"\n        value={email}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handleEmailChange}\n      />\n      <TextField\n        required\n        fullWidth\n        name=\"password\"\n        variant=\"outlined\"\n        placeholder=\"Password\"\n        value={password}\n        type={\"password\"}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handlePasswordChange}\n      />\n      <Button className={classes.button} onClick={handleSubmit}>\n        Submit\n      </Button>\n    </Card>\n  );\n};\nexport default SignIn;\n","import \"./App.css\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Home from \"./components/home/Home\";\nimport AppSnackbar from \"./components/popup/AppSnackbar\";\nimport SignIn from \"./components/sign-in/SignIn\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <CssBaseline />\n      <div\n        style={{\n          minHeight: \"100vh\",\n          width: \"100%\",\n          margin: \"0px\",\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/home\" component={Home} />\n          <Route path=\"/\" component={SignIn} />\n        </Switch>\n      </div>\n      <AppSnackbar />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nconst initialState = {\n  open: false,\n  message: \"\",\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SHOW_SNACKBAR: {\n      return { ...state, open: true, message: action.message };\n    }\n    case CLOSE_SNACKBAR: {\n      return { ...state, open: false, message: \"\" };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\n\nconst initialState = {\n  tables: [],\n  selectedTable: undefined,\n  tableJustCreated: false,\n  bigImage: undefined,\n  bigImageCell: undefined,\n  error: undefined,\n};\n\nexport default function tablesReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case GET_TABLES: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case REMOVE_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: undefined,\n        bigImageCell: undefined,\n        error: undefined,\n      };\n    }\n    case SET_TABLE_JUST_CREATED_FALSE: {\n      return {\n        ...state,\n        tableJustCreated: false,\n      };\n    }\n    case GET_TABLES_SUCCESS: {\n      return { ...state, tables: action.tables };\n    }\n    case GET_TABLES_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case ADD_TABLE: {\n      const newTables = state.tables;\n      newTables.push(action.table);\n      return {\n        ...state,\n        tableJustCreated: true,\n        selectedTable: action.table,\n        tables: newTables,\n      };\n    }\n    case SET_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: action.image,\n        bigImageCell: action.cell,\n      };\n    }\n    case SET_SELECTED_TABLE: {\n      return {\n        ...state,\n        selectedTable: action.table,\n        bigImage: undefined,\n        bigImageCell: undefined,\n      };\n    }\n    case DELETE_TABLE: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case DELETE_TABLE_SUCCESS: {\n      const newTables = state.tables;\n      state.tables.forEach((table) => {\n        if (table.id === action.id) {\n          newTables.remove(table);\n        }\n      });\n      return {\n        ...state,\n        selectedTable: undefined,\n        tables: newTables,\n      };\n    }\n    case DELETE_TABLE_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n} from \"../actionTypes/cell\";\nimport {\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  SUBMIT_NO_TYPE_POPUP,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CUSTOM_CELLS_SUBMITED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n  SHOW_ADD_TO_USER_POPUP,\n} from \"../actionTypes/popups\";\n\nconst initialState = {\n  actionPopupOpen: false,\n  infoPopupOpen: false,\n  noTypePopupOpen: false,\n  emptyCellPopupOpen: false,\n  imagePopupOpen: false,\n  formatCellsPopupOpen: false,\n  addToUserPopupOpen: false,\n  cell: undefined,\n  cellsRow: undefined,\n  cellFile: undefined,\n  cellNameFile: undefined,\n  cellImageFile: undefined,\n  cellToUpdate: undefined,\n  cellToUpdateCustomCells: undefined,\n  letsUpdate: false,\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case CANCEL_CUSTOM_CELLS: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case CUSTOM_CELLS_SUBMITED: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SHOW_ACTION_POPUP: {\n      return {\n        ...state,\n        actionPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case BEGIN_CUSTOM_SELECT: {\n      return {\n        ...state,\n        actionPopupOpen: false,\n        cellToUpdate: action.cell,\n        cellToUpdateCustomCells: [],\n      };\n    }\n    case CELL_TO_UPDATE_CUSTOM_CELL_SELECTED: {\n      const cells = state.cellToUpdateCustomCells;\n      if (cells.includes(action.cell)) {\n        const index = cells.indexOf(action.cell);\n        cells.splice(index, 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        cellToUpdateCustomCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SHOW_ADD_TO_USER_POPUP: {\n      return {\n        ...state,\n        addToUserPopupOpen: true,\n      };\n    }\n    case SUBMIT_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: false,\n        actionPopupOpen: action.isAction,\n        infoPopupOpen: !action.isAction,\n      };\n    }\n    case SHOW_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_EMPTY_CELL_POPUP: {\n      return {\n        ...state,\n        emptyCellPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_IMAGE_CELL_POPUP: {\n      if (action.cell !== undefined) {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n          cell: action.cell,\n          cellsRow: action.cellsRow,\n        };\n      } else {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n        };\n      }\n    }\n    case SHOW_INFO_POPUP: {\n      return {\n        ...state,\n        infoPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_FORMAT_CELLS_POPUP: {\n      return {\n        ...state,\n        formatCellsPopupOpen: true,\n      };\n    }\n    case CLOSE_POPUP: {\n      return {\n        ...state,\n        infoPopupOpen: false,\n        actionPopupOpen: false,\n        noTypePopupOpen: false,\n        emptyCellPopupOpen: false,\n        imagePopupOpen: false,\n        formatCellsPopupOpen: false,\n        addToUserPopupOpen: false,\n        cell: undefined,\n        cellsRow: undefined,\n        cellFile: undefined,\n        cellNameFile: undefined,\n        cellImageFile: undefined,\n      };\n    }\n    case GET_CELL_NAME_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellNameFile: action.file,\n      };\n    }\n    case GET_CELL_IMAGE_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellImageFile: action.file,\n      };\n    }\n    case GET_CELL_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellFile: action.file,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  CLEAR_CELLS_ROWS,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n} from \"../actionTypes/cellsRows\";\nimport { UPDATE_CELL_SUCCESS } from \"../actionTypes/cell\";\nconst initialState = {\n  cellsRows: [],\n  selectedCells: undefined,\n  error: undefined,\n  letsUpdate: false,\n  isSelecting: false,\n};\n\nexport default function cellsRowsReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case UPDATE_CELL_SUCCESS: {\n      let rowIndex;\n      let cellIndex;\n      state.cellsRows.forEach((cellsRow) => {\n        cellsRow.cells.forEach((cell) => {\n          if (\n            cell.columnIndex === action.cell.columnIndex &&\n            cell.rowIndex === action.cell.rowIndex\n          ) {\n            rowIndex = state.cellsRows.indexOf(cellsRow);\n            cellIndex = cellsRow.cells.indexOf(cell);\n          }\n        });\n      });\n      state.cellsRows[rowIndex].cells[cellIndex] = action.cell;\n      return { ...state, error: undefined };\n    }\n    case BEGIN_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: true,\n        selectedCells: [],\n      };\n    }\n    case STOP_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: false,\n        selectedCells: undefined,\n      };\n    }\n    case ADD_SELECTING_CELL: {\n      var cells = state.selectedCells;\n      if (cells.includes(action.cell)) {\n        cells.splice(cells.indexOf(action.cell), 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        selectedCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case GET_CELLS_ROWS: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case GET_CELLS_ROWS_SUCCESS: {\n      action.data.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return { ...state, cellsRows: action.data };\n    }\n    case UPDATE_CELLS_ROWS: {\n      action.cellsRows.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return {\n        ...state,\n        cellsRows: action.cellsRows,\n        selectedCells: undefined,\n        isSelecting: false,\n      };\n    }\n    case GET_CELLS_ROWS_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case CLEAR_CELLS_ROWS: {\n      return {\n        ...state,\n        cellsRows: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  SIGN_IN,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAILED,\n  GET_USERS,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILED,\n  ADD_TABLE_TO_USER,\n  ADD_TABLE_TO_USER_SUCCESS,\n  ADD_TABLE_TO_USER_FAILED,\n} from \"../actionTypes/user\";\n\nconst initialState = {\n  user: undefined,\n  users: [],\n  error: false,\n};\n\nexport default function userReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SIGN_IN: {\n      return { ...state, error: false };\n    }\n    case SIGN_IN_SUCCESS: {\n      return { ...state, user: action.user };\n    }\n    case SIGN_IN_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case GET_USERS_SUCCESS: {\n      return { ...state, users: action.data };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport snackbar from \"./snackbar\";\nimport tables from \"./tables\";\nimport popups from \"./popups\";\nimport cellsRows from \"./cellsRows\";\nimport user from \"./user\";\n\nexport default combineReducers({\n  snackbar,\n  tables,\n  popups,\n  cellsRows,\n  user,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport reducers from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/* eslint-enable */\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\"],\n};\nconst pReducer = persistReducer(persistConfig, reducers);\n\nconst store = createStore(\n  pReducer,\n  compose(applyMiddleware(thunk), composeEnhancers())\n);\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./state/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}