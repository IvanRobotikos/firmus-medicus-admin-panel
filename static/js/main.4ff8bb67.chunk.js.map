{"version":3,"sources":["state/actionTypes/tables.js","firebase.js","common/CellFunctions.js","state/actionTypes/cellsRows.js","state/actions/cellsRows.js","state/actionTypes/popups.js","state/actions/popups.js","components/tables_list/TablesListItem.js","state/actions/tables.js","state/actionTypes/user.js","components/tables_list/TablesList.js","state/actions/user.js","components/table/cells/EmptyCell.js","components/table/cells/dao.png","components/table/cells/Cell.js","components/table/CellsRow.js","state/actionTypes/cell.js","state/actions/cell.js","components/table/utils/SelectedCellsInfo.js","components/table/utils/BigImage.js","components/table/utils/RemoveBigImage.js","components/table/utils/SelectedCellsFormat.js","components/table/Table.js","components/popup/TableInfoPopup.js","components/popup/ActionCellPopup.js","components/popup/NoTypeCellPopup.js","state/actionTypes/snackbar.js","state/actions/snackbar.js","components/popup/InfoCellPopup.js","components/popup/EmptyCellPopup.js","components/popup/ImageCellPopup.js","components/popup/FormatCellsPopup.js","components/popup/AddToUserPopup.js","state/actionTypes/devices.js","state/actions/devices.js","components/popup/MapRaspberryPopup.js","components/popup/DevicesPopup.js","components/popup/SessionLogsPopup.js","components/popup/UserTablesPopup.js","components/home/Home.js","components/popup/AppSnackbar.js","components/sign-in/SignIn.js","App.js","serviceWorker.js","state/reducers/snackbar.js","state/reducers/tables.js","state/reducers/popups.js","state/reducers/cellsRows.js","state/reducers/user.js","state/reducers/devices.js","state/reducers/index.js","state/store.js","index.js"],"names":["GET_TABLES","GET_TABLES_SUCCESS","GET_TABLES_FAILED","ADD_TABLE","DELETE_TABLE","DELETE_TABLE_SUCCESS","DELETE_TABLE_FAILED","SET_SELECTED_TABLE","SET_BIG_IMAGE","SET_TABLE_JUST_CREATED_FALSE","REMOVE_BIG_IMAGE","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","auth","getEmptyTableCells","tableId","data","push","getFirstEmptyRow","i","getEmptyRow","rowIndex","cells","getNoTypeCell","getEmptyCell","columnIndex","type","color","topBorder","leftBorder","rightBorder","bottomBorder","getInfoCell","name","fontSize","getRowActionCell","actionType","rows","sumAll","getColumnActionCell","getTemplateTwoTableCells","getTemplateRow","getTemplateTableCells","getActionRow","decrement","getColumnActionName","GET_CELLS_ROWS","GET_CELLS_ROWS_SUCCESS","GET_CELLS_ROWS_FAILED","CLEAR_CELLS_ROWS","ADD_SELECTING_CELL","ADD_SELECTING_ALL_CELLS","BEGIN_FORMAT_SELECTING","STOP_FORMAT_SELECTING","UPDATE_CELLS_ROWS","ADD_SELECTING_ROW_CELLS","getCellsRows","dispatch","a","collection","doc","get","then","snapshot","forEach","cellsRow","id","e","error","boxUpdate","cellInfo","cellsRows","sort","b","smallestRow","bigestRow","length","smallestColumn","bigestColumn","rowsToUpdate","cellsToUpdate","rowsForRequest","cell","newCell","fontColor","width","borderColor","index","getFormattedRow","includes","row","sendUpdateRowRequest","simpleUpdate","bottom","top","left","right","undefined","console","log","update","mirrorCell","cellIndex","indexOf","cancelIsSelecting","SHOW_RASP_POPUP","SHOW_DEVICES_POPUP","SHOW_ACTION_POPUP","CLOSE_POPUP","SHOW_INFO_POPUP","SHOW_NO_TYPE_POPUP","SHOW_IMAGE_CELL_POPUP","SHOW_EMPTY_CELL_POPUP","SUBMIT_NO_TYPE_POPUP","BEGIN_CUSTOM_SELECT","CELL_TO_UPDATE_CUSTOM_CELL_SELECTED","CUSTOM_CELLS_SUBMITED","CANCEL_CUSTOM_CELLS","SHOW_FORMAT_CELLS_POPUP","SHOW_ADD_TO_USER_POPUP","SHOW_SESSION_LOGS_POPUP","SHOW_CREATE_TABLE_POPUP","SHOW_USER_TABLES_POPUP","GET_USER_TABLES_SUCCESS","DELETE_USER_TABLE_SUCCESS","cancelCustomCells","showImagePopup","showDevicesPopup","showCreateTablePopup","closePopup","useStyles","makeStyles","buttonNormal","textTransform","borderRadius","borderWidth","margin","whiteSpace","borderStyle","padding","background","buttonSelected","cursos","TablesListItem","item","selectedTable","useSelector","store","tables","useState","isSelected","setIsSelected","classes","useDispatch","useEffect","Button","onClick","table","className","SIGN_IN","SIGN_IN_SUCCESS","SIGN_IN_FAILED","GET_USERS_SUCCESS","ADD_TABLE_TO_USER","ADD_TABLE_TO_USER_SUCCESS","ADD_TABLE_TO_USER_FAILED","card","display","flexDirection","minHeight","maxWidth","flex","raspberrybutton","height","iconmenubutton","text","textAlign","TablesList","didGetUsers","setDidGetUsers","ref","snap","Card","map","verticalAlign","EmptyCell","bigImagePath","getDownloadURL","image","catch","setBigImage","showEmptyCellPopup","props","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","borderTopColor","isCustomCell","borderRightColor","borderLeftColor","borderBottomColor","borderLeftStyle","borderRightStyle","borderTopStyle","borderBottomStyle","alignContent","justifyContent","lineHeight","Cell","cellToUpdate","popups","isSelecting","addSelectingCell","cellToUpdateCustomCellSelected","showNoTypePopup","showInfoPopup","showActionPopup","style","marginLeft","marginRight","src","dao","alt","fontWeight","fontStyle","textDecoration","replaceAll","selectRowButton","border","CellsRow","cellToUpdateCustomCells","selectedCells","cellsRowLetsUpdate","letsUpdate","UPDATE_CELL","UPDATE_CELL_SUCCESS","UPDATE_CELL_FAILED","GET_CELL_FILE_SUCCESS","GET_CELL_NAME_FILE_SUCCESS","GET_CELL_IMAGE_FILE_SUCCESS","updateCell","cellsRowId","newRow","element","container","marginBottom","marginTop","cont","submitButton","cancelButton","SelectedCellsInfo","customCells","convertCustomCells","ix","split","join","BigImage","bigImage","bigImageCell","position","parseInt","bigImageTopMargin","bigImageHeight","bigImageLeftMargin","bigImageWidth","RemoveBigImage","description","cellContainer","deleteButton","formatButton","SelectedCellsFormat","addToUserButton","Table","loading","setLoading","tableJustCreated","timeoutFinished","useCallback","setTimeout","dangerouslySetInnerHTML","__html","CircularProgress","delete","deleteTable","popupbox","quillContainer","editor","box","maxHeight","overflow","closeicon","content","cursor","button","TableInfoPopup","React","setName","setDescription","cellsRowsToDuplicate","handleClose","TextField","required","fullWidth","label","variant","placeholder","value","onChange","event","target","theme","add","cellsRowValue","newCells","duplicateTable","addTable","addTemplateTable","addTemplateTableTwo","formControl","minWidth","header","noTypeButton","ActionCellPopup","setSumAll","setColor","setRows","setActionType","typeActionType","setTypeActionType","typeActionTypeName","setTypeActionTypeName","setFontSize","setFontColor","setBorderColor","baseTen","setBaseTen","baseThree","setBaseThree","baseHundred","setBaseHundred","baseFour","setBaseFour","databaseID","setDatabaseID","actionTypes","typeActionTypes","actionTypesNames","typeActionTypesNames","FormControlLabel","control","Checkbox","checked","labelPlacement","FormControl","InputLabel","Select","MenuItem","nameFilePath","databaseId","beginCustomSelect","makeEmptyButton","NoTypeCellPopup","isAction","setIsAction","submitNoTypePopup","SHOW_SNACKBAR","CLOSE_SNACKBAR","showSnackbar","message","fileNameContainer","removeFileButton","borderInputcontainer","borderText","InfoCellPopup","typeForAction","setTypeForAction","file","setFile","nameFile","setNameFile","setTop","setBottom","setLeft","setRight","cellFile","cellNameFile","filePath","getMetadata","showError","msg","extensions","loadedFile","onError","put","updateInfoCell","notypeButton","EmptyCellPopup","fileButton","ImageCellPopup","setWidth","setHeight","leftMargin","setLeftMargin","topMargin","setTopMargin","cellImageFile","maxSize","updateImageCell","FormatCellsPopup","isBoxBorder","setIsBoxBorder","submitSelectingCells","AddToUserPopup","selectedUser","setSelectedUser","users","user","email","snapshots","tableOrder","size","LOAD_DEVICES","LOAD_DEVICES_SUCCESS","LOAD_DEVICES_FAILED","LOAD_MAPPINGS","LOAD_MAPPINGS_SUCCESS","LOAD_MAPPINGS_FAILED","DELETE_MAPPING","DELETE_MAPPING_SUCCESS","DELETE_MAPPING_FAILED","ADD_RASP_TO_USER","ADD_RASP_TO_USER_SUCCESS","ADD_RASP_TO_USER_FAILED","LOAD_SESSION_LOGS","LOAD_SESSION_LOGS_SUCCESS","LOAD_SESSION_LOGS_FAILED","loadSessionLogs","sessionId","startDate","endDate","timeStamp","Date","getTime","cDate","toJSON","slice","sessionStartDate","sessionEndDate","url","req","Request","method","headers","fetch","resp","ok","json","sessionData","boxik","columns","MapRaspberryPopup","didGet","setDidGet","shouldUpdate","setShouldUpdate","oldMappings","setOldMappings","mappings","devices","raspberryID","setRaspberryID","response","handleDelete","mapping","body","JSON","stringify","session_id","find","userId","onDelete","rasp","raspberryId","MappingsListItem","circle","webkitBorderRadius","mozBorderradius","connectionText","DevicesPopup","devicesReq","devicesResponse","DevicePopupItem","is_user_connected","is_device_connected","updated_at","backButton","picker","SessionLogsPopup","setStartDate","setEndDate","selected","date","device_id","period","start","end","sessions","SessionLogsPopupItem","user_id","dataItem","SessionLogsPopupDataItem","created_at","UserTablesPopup","oldUserTables","setOldUserTables","userTables","UserTablesListItem","Home","isCreateTablePopupOpen","createTablePopupOpen","isActionCellPopupOpen","actionPopupOpen","isEmptyCellPopupOpen","emptyCellPopupOpen","isInfoCellPopupOpen","infoPopupOpen","noTypeCellPopupOpen","noTypePopupOpen","imageCellPopupOpen","imagePopupOpen","formatCellsPopupOpen","addToUserPopupOpen","raspberryPopupOpen","devicesPopupOpen","sessionLogsPopupOpen","isUserTablesPopupOpen","userTablesPopupOpen","history","useHistory","window","scrollTo","disableBodyScroll","document","enableBodyScroll","role","Container","close","spacing","AppSnackbar","open","snackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","title","alignItems","SignIn","setEmail","password","setPassword","Typography","signInWithEmailAndPassword","uid","dbUser","signIn","App","CssBaseline","exact","path","component","Boolean","location","hostname","match","initialState","combineReducers","state","newTables","remove","splice","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","whitelist","pReducer","persistReducer","reducers","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ff8bb67.chunk.js","sourcesContent":["export const GET_TABLES = \"tables/GET_TABLES\";\nexport const GET_TABLES_SUCCESS = \"tables/GET_TABLES_SUCCESS\";\nexport const GET_TABLES_FAILED = \"tables/GET_TABLES_FAILED\";\nexport const ADD_TABLE = \"tables/ADD_TABLE\";\nexport const DELETE_TABLE = \"tables/DELETE_TABLE\";\nexport const DELETE_TABLE_SUCCESS = \"tables/DELETE_TABLE_SUCCESS\";\nexport const DELETE_TABLE_FAILED = \"tables/DELETE_TABLE_FAILED\";\nexport const SET_SELECTED_TABLE = \"tables/SET_SELECTED_TABLE\";\nexport const SET_BIG_IMAGE = \"tables/SET_BIG_IMAGE\";\nexport const SET_TABLE_JUST_CREATED_FALSE =\n  \"tables/SET_TABLE_JUST_CREATED_FALSE\";\nexport const REMOVE_BIG_IMAGE = \"tables/REMOVE_BIG_IMAGE\";\n","import firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBN83KPofzkMJ8I61kt8Fn8our5BSWfNjw\",\n  authDomain: \"firmus-medicus-a254b.firebaseapp.com\",\n  projectId: \"firmus-medicus-a254b\",\n  storageBucket: \"firmus-medicus-a254b.appspot.com\",\n  messagingSenderId: \"906887380621\",\n  appId: \"1:906887380621:web:d9ab0a949265376084ecc4\",\n  measurementId: \"G-506ZEGQVF1\",\n};\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const auth = firebase.auth();\n","export function getEmptyTableCells(tableId) {\n  const data = [];\n  data.push(getFirstEmptyRow(tableId));\n  for (let i = 1; i < 28; i++) {\n    data.push(getEmptyRow(i, tableId));\n  }\n  return data;\n}\nfunction getFirstEmptyRow(tableId) {\n  return {\n    tableId,\n    rowIndex: 0,\n    cells: [\n      getNoTypeCell(0, 0),\n      getNoTypeCell(0, 1),\n      getNoTypeCell(0, 2),\n      getNoTypeCell(0, 3),\n      getEmptyCell(4),\n      getEmptyCell(5),\n      getEmptyCell(6),\n      getNoTypeCell(0, 7),\n      getNoTypeCell(0, 8),\n      getNoTypeCell(0, 9),\n      getNoTypeCell(0, 10),\n    ],\n  };\n}\nfunction getEmptyRow(rowIndex, tableId) {\n  return {\n    tableId,\n    rowIndex,\n    cells: [\n      getNoTypeCell(rowIndex, 0),\n      getNoTypeCell(rowIndex, 1),\n      getNoTypeCell(rowIndex, 2),\n      getNoTypeCell(rowIndex, 3),\n      getNoTypeCell(rowIndex, 4),\n      getNoTypeCell(rowIndex, 5),\n      getNoTypeCell(rowIndex, 6),\n      getNoTypeCell(rowIndex, 7),\n      getNoTypeCell(rowIndex, 8),\n      getNoTypeCell(rowIndex, 9),\n      getNoTypeCell(rowIndex, 10),\n    ],\n  };\n}\nfunction getNoTypeCell(rowIndex, columnIndex) {\n  return {\n    type: \"notype\",\n    rowIndex,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"2\",\n    leftBorder: \"2\",\n    rightBorder: \"2\",\n    bottomBorder: \"2\",\n  };\n}\nfunction getEmptyCell(columnIndex) {\n  return {\n    type: \"empty\",\n    rowIndex: 0,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"2\",\n    leftBorder: \"2\",\n    rightBorder: \"2\",\n    bottomBorder: \"2\",\n  };\n}\nfunction getInfoCell(rowIndex, columnIndex) {\n  return {\n    type: \"info\",\n    name: \"<p></p>\",\n    rowIndex,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"2\",\n    leftBorder: \"2\",\n    rightBorder: \"2\",\n    bottomBorder: \"2\",\n    fontSize: \"\",\n  };\n}\nfunction getRowActionCell(rowIndex, columnIndex, name) {\n  return {\n    type: \"action\",\n    name: \"<p><strong>\" + name + \"</strong></p>\",\n    rowIndex,\n    columnIndex,\n    actionType: \"selectrows\",\n    color: \"white\",\n    topBorder: \"2\",\n    leftBorder: \"2\",\n    rightBorder: \"2\",\n    bottomBorder: \"2\",\n    fontSize: \"22\",\n    rows: `${rowIndex}`,\n    sumAll: false,\n  };\n}\nfunction getColumnActionCell(rowIndex, columnIndex, name, sumAll = false) {\n  return {\n    type: \"action\",\n    name: \"<p><strong>\" + name + \"</strong></p>\",\n    rowIndex,\n    columnIndex,\n    actionType: \"\",\n    color: \"white\",\n    topBorder: \"2\",\n    leftBorder: \"2\",\n    rightBorder: \"2\",\n    bottomBorder: \"2\",\n    fontSize: \"22\",\n    sumAll,\n  };\n}\nexport function getTemplateTwoTableCells(tableId) {\n  const data = [];\n  data.push(getFirstEmptyRow(tableId));\n  for (let i = 1; i < 28; i++) {\n    data.push(getTemplateRow(i, tableId, 1));\n  }\n  return data;\n}\nexport function getTemplateTableCells(tableId) {\n  const data = [];\n  data.push(getFirstEmptyRow(tableId));\n  data.push(getActionRow(1, tableId));\n  for (let i = 2; i < 28; i++) {\n    data.push(getTemplateRow(i, tableId, 2));\n  }\n  return data;\n}\nfunction getActionRow(rowIndex, tableId) {\n  return {\n    tableId,\n    rowIndex,\n    cells: [\n      getColumnActionCell(rowIndex, 0, \"\", true),\n      getColumnActionCell(rowIndex, 1, \"1\"),\n      getColumnActionCell(rowIndex, 2, \"2\"),\n      getColumnActionCell(rowIndex, 3, \"3\"),\n      getColumnActionCell(rowIndex, 4, \"4\"),\n      getColumnActionCell(rowIndex, 5, \"5\"),\n      getColumnActionCell(rowIndex, 6, \"6\"),\n      getColumnActionCell(rowIndex, 7, \"7\"),\n      getColumnActionCell(rowIndex, 8, \"8\"),\n      getColumnActionCell(rowIndex, 9, \"9\"),\n      getColumnActionCell(rowIndex, 10, \"10\"),\n    ],\n  };\n}\nfunction getTemplateRow(rowIndex, tableId, decrement) {\n  return {\n    tableId,\n    rowIndex,\n    cells: [\n      getRowActionCell(rowIndex, 0, getColumnActionName(rowIndex - decrement)),\n      getInfoCell(rowIndex, 1),\n      getInfoCell(rowIndex, 2),\n      getInfoCell(rowIndex, 3),\n      getInfoCell(rowIndex, 4),\n      getInfoCell(rowIndex, 5),\n      getInfoCell(rowIndex, 6),\n      getInfoCell(rowIndex, 7),\n      getInfoCell(rowIndex, 8),\n      getInfoCell(rowIndex, 9),\n      getInfoCell(rowIndex, 10),\n    ],\n  };\n}\nfunction getColumnActionName(rowIndex) {\n  const array = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"Z\",\n  ];\n  return array[rowIndex];\n}\n","export const GET_CELLS_ROWS = \"cellsRows/GET_CELLS_ROWS\";\nexport const GET_CELLS_ROWS_SUCCESS = \"cellsRows/GET_CELLS_ROWS_SUCCESS\";\nexport const GET_CELLS_ROWS_FAILED = \"cellsRows/GET_CELLS_ROWS_FAILED\";\nexport const CLEAR_CELLS_ROWS = \"cellsRows/CLEAR_CELLS_ROWS\";\nexport const ADD_SELECTING_CELL = \"cellsRows/ADD_SELECTING_CELL\";\nexport const ADD_SELECTING_ALL_CELLS = \"cellsRows/ADD_SELECTING_ALL_CELLS\";\nexport const BEGIN_FORMAT_SELECTING = \"cellsRows/BEGIN_FORMAT_SELECTING\";\nexport const STOP_FORMAT_SELECTING = \"cellsRows/STOP_FORMAT_SELECTING\";\nexport const SUBMIT_FORMAT_SELECTING = \"cellsRows/SUBMIT_FORMAT_SELECTING\";\nexport const UPDATE_CELLS_ROWS = \"cellsRows/UPDATE_CELLS_ROWS\";\nexport const ADD_SELECTING_ROW_CELLS = \"cellsRows/ADD_SELECTING_ROW_CELLS\";\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n  ADD_SELECTING_ALL_CELLS,\n  ADD_SELECTING_ROW_CELLS,\n} from \"../actionTypes/cellsRows\";\nimport { db } from \"../../firebase\";\n\nexport function getCellsRows(tableId) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELLS_ROWS });\n\n    try {\n      const ref = db.collection(\"tables\").doc(tableId).collection(\"cellsRows\");\n      ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((cellsRow) => {\n          data.push({ ...cellsRow.data(), id: cellsRow.id });\n        });\n        dispatch({ type: GET_CELLS_ROWS_SUCCESS, data: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELLS_ROWS_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function submitSelectingCells(cellInfo, cells, cellsRows) {\n  return async (dispatch) => {\n    console.log(cellInfo);\n    if (cellInfo.isBoxBorder) {\n      boxUpdate(dispatch, cellInfo, cells, cellsRows);\n    } else {\n      simpleUpdate(dispatch, cellInfo, cells, cellsRows);\n    }\n  };\n}\n\nconst boxUpdate = (dispatch, cellInfo, cells, cellsRows) => {\n  cells.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n  const smallestRow = cells[0].rowIndex;\n  const bigestRow =\n    cells.length > 1 ? cells[cells.length - 1].rowIndex : smallestRow;\n  cells.sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1));\n  const smallestColumn = cells[0].columnIndex;\n  const bigestColumn =\n    cells.length > 1 ? cells[cells.length - 1].columnIndex : smallestColumn;\n\n  const rowsToUpdate = [...cellsRows];\n  const cellsToUpdate = [];\n  const rowsForRequest = [];\n  cells.forEach((cell) => {\n    const newCell = {\n      ...cell,\n      color: cellInfo.color !== \"\" ? cellInfo.color : cell.color,\n      fontColor:\n        cellInfo.fontColor !== \"\" ? cellInfo.fontColor : cell.fontColor,\n      fontSize: cellInfo.fontSize !== \"\" ? cellInfo.fontSize : cell.fontSize,\n      bottomBorder:\n        cell.rowIndex === bigestRow ? cellInfo.width : cell.bottomBorder,\n      topBorder:\n        cell.rowIndex === smallestRow ? cellInfo.width : cell.topBorder,\n      leftBorder:\n        cell.columnIndex === smallestColumn ? cellInfo.width : cell.leftBorder,\n      rightBorder:\n        cell.columnIndex === bigestColumn ? cellInfo.width : cell.rightBorder,\n      borderColor:\n        cellInfo.borderColor !== \"\" ? cellInfo.borderColor : cell.borderColor,\n    };\n    cellsToUpdate.push(newCell);\n  });\n  cellsToUpdate.forEach((cell, index) => {\n    rowsToUpdate[cell.rowIndex] = getFormattedRow(\n      cell,\n      cells[index],\n      rowsToUpdate[cell.rowIndex]\n    );\n    if (!rowsForRequest.includes(cell.rowIndex)) {\n      rowsForRequest.push(cell.rowIndex);\n    }\n  });\n  rowsToUpdate.forEach((row) => {\n    if (rowsForRequest.includes(row.rowIndex)) {\n      sendUpdateRowRequest(row);\n    }\n  });\n  dispatch({ type: UPDATE_CELLS_ROWS, cellsRows: rowsToUpdate });\n};\n\nconst simpleUpdate = (dispatch, cellInfo, cells, cellsRows) => {\n  const rowsToUpdate = [...cellsRows];\n  const cellsToUpdate = [];\n  const rowsForRequest = [];\n  cells.forEach((cell) => {\n    const newCell = {\n      ...cell,\n      color: cellInfo.color !== \"\" ? cellInfo.color : cell.color,\n      bottomBorder:\n        cellInfo.bottom !== \"\" ? cellInfo.bottom : cell.bottomBorder,\n      topBorder: cellInfo.top !== \"\" ? cellInfo.top : cell.topBorder,\n      leftBorder: cellInfo.left !== \"\" ? cellInfo.left : cell.leftBorder,\n      rightBorder: cellInfo.right !== \"\" ? cellInfo.right : cell.rightBorder,\n      borderColor:\n        cellInfo.borderColor !== \"\"\n          ? cellInfo.borderColor\n          : cell.borderColor === undefined\n          ? \"\"\n          : cell.borderColor,\n      fontColor:\n        cellInfo.fontColor !== \"\"\n          ? cellInfo.fontColor\n          : cell.fontColor === undefined\n          ? \"\"\n          : cell.fontColor,\n      fontSize: cellInfo.fontSize !== \"\" ? cellInfo.fontSize : cell.fontSize,\n    };\n    console.log(newCell);\n    cellsToUpdate.push(newCell);\n  });\n  cellsToUpdate.forEach((cell, index) => {\n    rowsToUpdate[cell.rowIndex] = getFormattedRow(\n      cell,\n      cells[index],\n      rowsToUpdate[cell.rowIndex]\n    );\n    if (!rowsForRequest.includes(cell.rowIndex)) {\n      rowsForRequest.push(cell.rowIndex);\n    }\n  });\n  rowsToUpdate.forEach((row) => {\n    if (rowsForRequest.includes(row.rowIndex)) {\n      sendUpdateRowRequest(row);\n    }\n  });\n  dispatch({ type: UPDATE_CELLS_ROWS, cellsRows: rowsToUpdate });\n};\n\nconst sendUpdateRowRequest = (row) => {\n  db.collection(\"tables\")\n    .doc(row.tableId)\n    .collection(\"cellsRows\")\n    .doc(row.id)\n    .update({ cells: row.cells });\n};\n\nconst getFormattedRow = (cell, mirrorCell, row) => {\n  const cellIndex = row.cells.indexOf(mirrorCell);\n  row.cells[cellIndex] = cell;\n  return row;\n};\n\nexport function addSelectingCell(cell) {\n  return async (dispatch) => {\n    dispatch({ type: ADD_SELECTING_CELL, cell });\n  };\n}\n\nexport function addSelectingAllCells() {\n  return async (dispatch) => {\n    dispatch({ type: ADD_SELECTING_ALL_CELLS });\n  };\n}\n\nexport function addSelectingRowCells(rowIndex) {\n  return async (dispatch) => {\n    dispatch({ type: ADD_SELECTING_ROW_CELLS, rowIndex });\n  };\n}\n\nexport function setIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_FORMAT_SELECTING });\n  };\n}\n\nexport function cancelIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: STOP_FORMAT_SELECTING });\n  };\n}\n","export const SHOW_RASP_POPUP = \"popups/SHOW_RASP_POPUP\";\nexport const SHOW_DEVICES_POPUP = \"popups/SHOW_DEVICES_POPUP\";\nexport const SHOW_ACTION_POPUP = \"popups/SHOW_ACTION_POPUP\";\nexport const CLOSE_POPUP = \"popups/CLOSE_ACTION_POPUP\";\nexport const SHOW_INFO_POPUP = \"popups/SHOW_INFO_POPUP\";\nexport const SHOW_NO_TYPE_POPUP = \"popups/SHOW_NO_TYPE_POPUP\";\nexport const SHOW_IMAGE_CELL_POPUP = \"popups/SHOW_IMAGE_CELL_POPUP\";\nexport const SHOW_EMPTY_CELL_POPUP = \"popups/SHOW_EMPTY_CELL_POPUP\";\nexport const SUBMIT_NO_TYPE_POPUP = \"popups/SUBMIT_NO_TYPE_POPUP\";\nexport const BEGIN_CUSTOM_SELECT = \"popups/BEGIN_CUSTOM_SELECT\";\nexport const CELL_TO_UPDATE_CUSTOM_CELL_SELECTED =\n  \"popups/CELL_TO_UPDATE_CUSTOM_CELL_SELECTED\";\nexport const CUSTOM_CELLS_SUBMITED = \"popups/CUSTOM_CELLS_SUBMITED\";\nexport const CANCEL_CUSTOM_CELLS = \"popups/CANCEL_CUSTOM_CELLS\";\nexport const SHOW_FORMAT_CELLS_POPUP = \"popups/SHOW_FORMAT_CELLS_POPUP\";\nexport const SHOW_ADD_TO_USER_POPUP = \"popups/SHOW_ADD_TO_USER_POPUP\";\nexport const SHOW_SESSION_LOGS_POPUP = \"popups/SHOW_SESSION_LOGS_POPUP\";\nexport const SHOW_CREATE_TABLE_POPUP = \"popups/SHOW_CREATE_TABLE_POPUP\";\nexport const SHOW_USER_TABLES_POPUP = \"popups/SHOW_USER_TABLES_POPUP\";\nexport const GET_USER_TABLES = \"popups/GET_USER_TABLES\";\nexport const GET_USER_TABLES_SUCCESS = \"popups/GET_USER_TABLES_SUCCESS\";\nexport const GET_USER_TABLES_FAILED = \"popups/GET_USER_TABLES_FAILED\";\nexport const DELETE_USER_TABLE_SUCCESS = \"popups/DELETE_USER_TABLE_SUCCESS\";\nexport const DELETE_USER_TABLE_FAILED = \"popups/DELETE_USER_TABLE_FAILED\";\n","import {\n  SHOW_RASP_POPUP,\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SUBMIT_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n  SHOW_ADD_TO_USER_POPUP,\n  SHOW_DEVICES_POPUP,\n  SHOW_SESSION_LOGS_POPUP,\n  SHOW_CREATE_TABLE_POPUP,\n  SHOW_USER_TABLES_POPUP,\n  GET_USER_TABLES,\n  GET_USER_TABLES_SUCCESS,\n  GET_USER_TABLES_FAILED,\n  DELETE_USER_TABLE_SUCCESS,\n  DELETE_USER_TABLE_FAILED,\n} from \"../actionTypes/popups\";\nimport { db } from \"../../firebase\";\n\nexport function beginCustomSelect(cell) {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_CUSTOM_SELECT, cell });\n  };\n}\n\nexport function cancelCustomCells() {\n  return async (dispatch) => {\n    dispatch({ type: CANCEL_CUSTOM_CELLS });\n  };\n}\n\nexport function cellToUpdateCustomCellSelected(cell) {\n  return async (dispatch) => {\n    dispatch({ type: CELL_TO_UPDATE_CUSTOM_CELL_SELECTED, cell });\n  };\n}\n\nexport function showFormatCellsPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_FORMAT_CELLS_POPUP });\n  };\n}\n\nexport function showImagePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_IMAGE_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showActionPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_ACTION_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showEmptyCellPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_EMPTY_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function submitNoTypePopup(isAction) {\n  return async (dispatch) => {\n    dispatch({ type: SUBMIT_NO_TYPE_POPUP, isAction });\n  };\n}\n\nexport function showNoTypePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_NO_TYPE_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showInfoPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_INFO_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showAddToUserPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_ADD_TO_USER_POPUP });\n  };\n}\n\nexport function showRaspPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_RASP_POPUP });\n  };\n}\n\nexport function showDevicesPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_DEVICES_POPUP });\n  };\n}\n\nexport function showSessionLogsPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_SESSION_LOGS_POPUP });\n  };\n}\n\nexport function showCreateTablePopup(cellsRows) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_CREATE_TABLE_POPUP, cellsRows });\n  };\n}\n\nexport function showUserTablesPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_USER_TABLES_POPUP });\n  };\n}\n\nexport function closePopup() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function deleteUserTable(tableId, userId) {\n  return async (dispatch) => {\n    try {\n      db.collection(\"users\")\n        .doc(userId)\n        .collection(\"tables\")\n        .doc(tableId)\n        .delete();\n      dispatch({ type: DELETE_USER_TABLE_SUCCESS, tableId });\n    } catch (e) {\n      dispatch({ type: DELETE_USER_TABLE_FAILED });\n    }\n  };\n}\n\nexport function getUserTables(user) {\n  return async (dispatch) => {\n    dispatch({ type: GET_USER_TABLES });\n    try {\n      db.collection(\"users\")\n        .doc(user.id)\n        .collection(\"tables\")\n        .get()\n        .then((snapshot) => {\n          const data = [];\n          snapshot.forEach((snap) => {\n            data.push({ ...snap.data(), id: snap.id });\n          });\n          dispatch({ type: GET_USER_TABLES_SUCCESS, data });\n        });\n    } catch (e) {\n      dispatch({ type: GET_USER_TABLES_FAILED });\n    }\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { setSelectedTable } from \"../../state/actions/tables\";\nimport { cancelIsSelecting } from \"../../state/actions/cellsRows\";\nimport { cancelCustomCells } from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  buttonNormal: {\n    color: \"black\",\n    fontSize: \"1em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    whiteSpace: \"wrap\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  buttonSelected: {\n    color: \"white\",\n    background: \"black\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n      cursos: \"auto\",\n    },\n  },\n});\n\nconst TablesListItem = ({ item }) => {\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const [isSelected, setIsSelected] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsSelected(selectedTable && selectedTable.id === item.id);\n  }, [setIsSelected, selectedTable, item]);\n\n  const selectTable = () => {\n    dispatch(setSelectedTable(item));\n    dispatch(cancelIsSelecting());\n    dispatch(cancelCustomCells());\n  };\n\n  return (\n    <Button\n      onClick={isSelected ? null : selectTable}\n      className={isSelected ? classes.buttonSelected : classes.buttonNormal}\n    >\n      {item.name}\n    </Button>\n  );\n};\nTablesListItem.propTypes = {\n  item: PropTypes.object,\n};\nexport default TablesListItem;\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\nimport { db, storage } from \"../../firebase\";\nimport {\n  getEmptyTableCells,\n  getTemplateTableCells,\n  getTemplateTwoTableCells,\n} from \"../../common/CellFunctions\";\n\nexport function removeBigImage() {\n  return async (dispatch) => {\n    dispatch({ type: REMOVE_BIG_IMAGE });\n  };\n}\n\nexport function getTables() {\n  return async (dispatch) => {\n    dispatch({ type: GET_TABLES });\n\n    try {\n      const ref = db.collection(\"tables\");\n      await ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((table) => {\n          data.push({ ...table.data(), id: table.id });\n        });\n        dispatch({ type: GET_TABLES_SUCCESS, tables: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_TABLES_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setTableJustCreatedFalse() {\n  return async (dispatch) => {\n    dispatch({\n      type: SET_TABLE_JUST_CREATED_FALSE,\n    });\n  };\n}\n\nexport function addTemplateTableTwo(name, description) {\n  return async (dispatch) => {\n    const ref = db.collection(\"tables\");\n    await ref.add({ name, description }).then((table) => {\n      const cellsRows = getTemplateTwoTableCells(table.id);\n      cellsRows.forEach((cellsRow) => {\n        ref\n          .doc(table.id)\n          .collection(\"cellsRows\")\n          .add({\n            tableId: cellsRow.tableId,\n            rowIndex: cellsRow.rowIndex,\n          })\n          .then((cellsRowValue) => {\n            const newCells = [];\n            cellsRow.cells.forEach((cell) =>\n              newCells.push({\n                ...cell,\n                tableId: table.id,\n                cellsRowId: cellsRowValue.id,\n              })\n            );\n            ref\n              .doc(table.id)\n              .collection(\"cellsRows\")\n              .doc(cellsRowValue.id)\n              .update({ cells: newCells });\n          });\n      });\n\n      dispatch({\n        type: ADD_TABLE,\n        table: { id: table.id, name, description },\n      });\n    });\n  };\n}\n\nexport function addTemplateTable(name, description) {\n  return async (dispatch) => {\n    const ref = db.collection(\"tables\");\n    await ref.add({ name, description }).then((table) => {\n      const cellsRows = getTemplateTableCells(table.id);\n      cellsRows.forEach((cellsRow) => {\n        ref\n          .doc(table.id)\n          .collection(\"cellsRows\")\n          .add({\n            tableId: cellsRow.tableId,\n            rowIndex: cellsRow.rowIndex,\n          })\n          .then((cellsRowValue) => {\n            const newCells = [];\n            cellsRow.cells.forEach((cell) =>\n              newCells.push({\n                ...cell,\n                tableId: table.id,\n                cellsRowId: cellsRowValue.id,\n              })\n            );\n            ref\n              .doc(table.id)\n              .collection(\"cellsRows\")\n              .doc(cellsRowValue.id)\n              .update({ cells: newCells });\n          });\n      });\n\n      dispatch({\n        type: ADD_TABLE,\n        table: { id: table.id, name, description },\n      });\n    });\n  };\n}\n\nexport function duplicateTable(name, description, cellsRows) {\n  return async (dispatch) => {\n    const ref = db.collection(\"tables\");\n    await ref.add({ name, description }).then((table) => {\n      cellsRows.forEach((cellsRow) => {\n        ref\n          .doc(table.id)\n          .collection(\"cellsRows\")\n          .add({\n            tableId: table.id,\n            rowIndex: cellsRow.rowIndex,\n          })\n          .then((cellsRowValue) => {\n            const newCells = [];\n            cellsRow.cells.forEach((cell) =>\n              newCells.push({\n                ...cell,\n                tableId: table.id,\n                cellsRowId: cellsRowValue.id,\n              })\n            );\n            ref\n              .doc(table.id)\n              .collection(\"cellsRows\")\n              .doc(cellsRowValue.id)\n              .update({ cells: newCells });\n          });\n      });\n\n      dispatch({\n        type: ADD_TABLE,\n        table: { id: table.id, name, description },\n      });\n    });\n  };\n}\n\nexport function addTable(name, description) {\n  return async (dispatch) => {\n    const ref = db.collection(\"tables\");\n    await ref.add({ name, description }).then((table) => {\n      const cellsRows = getEmptyTableCells(table.id);\n      cellsRows.forEach((cellsRow) => {\n        ref\n          .doc(table.id)\n          .collection(\"cellsRows\")\n          .add({\n            tableId: cellsRow.tableId,\n            rowIndex: cellsRow.rowIndex,\n          })\n          .then((cellsRowValue) => {\n            const newCells = [];\n            cellsRow.cells.forEach((cell) =>\n              newCells.push({\n                ...cell,\n                tableId: table.id,\n                cellsRowId: cellsRowValue.id,\n              })\n            );\n            ref\n              .doc(table.id)\n              .collection(\"cellsRows\")\n              .doc(cellsRowValue.id)\n              .update({ cells: newCells });\n          });\n      });\n\n      dispatch({\n        type: ADD_TABLE,\n        table: { id: table.id, name, description },\n      });\n    });\n  };\n}\n\nexport function deleteTable(tableId, cellsRows) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_TABLE });\n    try {\n      var ref = db.collection(\"tables\").doc(tableId);\n      cellsRows.forEach((row) => {\n        ref.collection(\"cellsRows\").doc(row.id).delete();\n      });\n      ref.delete();\n      dispatch({ type: DELETE_TABLE_SUCCESS, tableId });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: DELETE_TABLE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setBigImage(cell) {\n  return async (dispatch) => {\n    storage\n      .ref(cell.bigImagePath)\n      .getDownloadURL()\n      .then((image) => {\n        dispatch({ type: SET_BIG_IMAGE, image, cell });\n      })\n      .catch(() => {\n        console.log(\"error\");\n      });\n  };\n}\n\nexport function setSelectedTable(table) {\n  return async (dispatch) => {\n    dispatch({ type: SET_SELECTED_TABLE, table });\n  };\n}\n","export const SIGN_IN = \"user/SIGN_IN\";\nexport const SIGN_IN_SUCCESS = \"user/SIGN_IN_SUCCESS\";\nexport const SIGN_IN_FAILED = \"user/SIGN_IN_FAILED\";\nexport const GET_USERS = \"user/GET_USERS\";\nexport const GET_USERS_SUCCESS = \"user/GET_USERS_SUCCESS\";\nexport const GET_USERS_FAILED = \"user/GET_USERS_FAILED\";\nexport const ADD_TABLE_TO_USER = \"user/ADD_TABLE_TO_USER\";\nexport const ADD_TABLE_TO_USER_SUCCESS = \"user/ADD_TABLE_TO_USER_SUCCESS\";\nexport const ADD_TABLE_TO_USER_FAILED = \"user/ADD_TABLE_TO_USER_FAILED\";\n","import { makeStyles } from \"@material-ui/core\";\nimport { Card, Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport TablesListItem from \"./TablesListItem\";\nimport { useEffect, useState } from \"react\";\nimport { getTables } from \"../../state/actions/tables\";\nimport { getUsers } from \"../../state/actions/user\";\nimport {\n  showRaspPopup,\n  showDevicesPopup,\n  showCreateTablePopup,\n  showUserTablesPopup,\n} from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    maxWidth: \"150px\",\n    flex: 1,\n  },\n  raspberrybutton: {\n    height: \"35px\",\n    color: \"white\",\n    background: \"black\",\n    fontSize: \"1em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"#FFFFFF\",\n    borderWidth: \"1px\",\n    margin: \"0px auto 5px auto\",\n    borderStyle: \"solid\",\n    \"&:hover\": {\n      color: \"black\",\n      background: \"white\",\n      borderColor: \"black\",\n    },\n  },\n  iconmenubutton: {\n    height: \"35px\",\n    color: \"black\",\n    fontSize: \"2em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"#FFFFFF\",\n    borderWidth: \"1px\",\n    margin: \"0px auto 5px auto\",\n    borderStyle: \"solid\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  text: {\n    textAlign: \"center\",\n    margin: \"5px\",\n  },\n});\n\nconst TablesList = () => {\n  const [didGetUsers, setDidGetUsers] = useState(false);\n  const classes = useStyles();\n  const tables = useSelector((store) => store.tables.tables);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTables());\n    if (!didGetUsers) {\n      dispatch(getUsers());\n      setDidGetUsers(true);\n    }\n  }, [dispatch, didGetUsers]);\n\n  const toggleRaspPopup = () => {\n    dispatch(showRaspPopup());\n  };\n\n  const toggleDevicesPopup = () => {\n    dispatch(showDevicesPopup());\n  };\n\n  const toggleUserTablesPopup = () => {\n    dispatch(showUserTablesPopup());\n  };\n\n  const showTableNamePopup = () => {\n    dispatch(showCreateTablePopup());\n  };\n\n  return (\n    <Card className={classes.card}>\n      <Button className={classes.raspberrybutton} onClick={toggleDevicesPopup}>\n        SHOW SESSIONS\n      </Button>\n      <Button className={classes.raspberrybutton} onClick={toggleRaspPopup}>\n        MAP RASPBERRY\n      </Button>\n      <Button\n        className={classes.raspberrybutton}\n        onClick={toggleUserTablesPopup}\n      >\n        USER TABLES\n      </Button>\n      <h3 className={classes.text}>Tables</h3>\n      <Button className={classes.iconmenubutton} onClick={showTableNamePopup}>\n        <AddIcon />\n      </Button>\n      {tables.map((item) => (\n        <TablesListItem item={item} key={tables.indexOf(item)} />\n      ))}\n    </Card>\n  );\n};\nexport default TablesList;\n","import {\n  SIGN_IN,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAILED,\n  GET_USERS,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILED,\n  ADD_TABLE_TO_USER,\n  ADD_TABLE_TO_USER_SUCCESS,\n  ADD_TABLE_TO_USER_FAILED,\n} from \"../actionTypes/user\";\nimport { auth, db } from \"../../firebase\";\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    dispatch({ type: SIGN_IN });\n    try {\n      auth\n        .signInWithEmailAndPassword(user.email, user.password)\n        .then((value) => {\n          db.collection(\"users\")\n            .doc(value.user.uid)\n            .get()\n            .then((snapshot) => {\n              const dbUser = snapshot.data();\n              if (dbUser.role === \"admin\") {\n                dispatch({ type: SIGN_IN_SUCCESS, user: dbUser });\n              } else {\n                dispatch({ type: SIGN_IN_FAILED });\n              }\n            });\n        });\n    } catch (e) {\n      dispatch({ type: SIGN_IN_FAILED });\n    }\n  };\n}\n\nexport function getUsers() {\n  return async (dispatch) => {\n    dispatch({ type: GET_USERS });\n    try {\n      db.collection(\"users\")\n        .get()\n        .then((snapshot) => {\n          const data = [];\n          snapshot.forEach((snap) => {\n            data.push({ ...snap.data(), id: snap.id });\n          });\n          dispatch({ type: GET_USERS_SUCCESS, data });\n        });\n    } catch (e) {\n      dispatch({ type: GET_USERS_FAILED });\n    }\n  };\n}\n\nexport function addTableToUser(user, table) {\n  return async (dispatch) => {\n    dispatch({ type: ADD_TABLE_TO_USER });\n    try {\n      const ref = db.collection(\"users\").doc(user.id).collection(\"tables\");\n      ref.get().then((snapshots) => {\n        ref.add({\n          tableId: table.id,\n          tableOrder: snapshots.size,\n          name: table.name,\n        });\n        dispatch({ type: ADD_TABLE_TO_USER_SUCCESS });\n      });\n    } catch (e) {\n      dispatch({ type: ADD_TABLE_TO_USER_FAILED });\n    }\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {\n  showEmptyCellPopup,\n  showImagePopup,\n} from \"../../../state/actions/popups\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { setBigImage } from \"../../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  cell: {\n    height: \"50px\",\n    width: \"100px\",\n    display: \"table-cell\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n  },\n});\n\nconst EmptyCell = ({ cell, cellsRow }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell && cell.bigImagePath !== undefined) {\n      dispatch(setBigImage(cell));\n    }\n  }, [cell, dispatch]);\n\n  const action = () => {\n    if (cell.type === \"empty\") {\n      dispatch(showEmptyCellPopup(cell, cellsRow));\n    } else {\n      dispatch(showImagePopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.type === \"empty\" ? \"\" : \"image\"}\n    </div>\n  );\n};\nEmptyCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n};\nexport default EmptyCell;\n","export default __webpack_public_path__ + \"static/media/dao.ad80d2bc.png\";","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  showActionPopup,\n  showInfoPopup,\n  showNoTypePopup,\n  cellToUpdateCustomCellSelected,\n} from \"../../../state/actions/popups\";\nimport { addSelectingCell } from \"../../../state/actions/cellsRows\";\nimport dao from \"./dao.png\";\n\nconst useStyles = makeStyles({\n  cell: {\n    background: (props) => props.color,\n    borderLeftWidth: (props) => props.left + \"px\",\n    borderRightWidth: (props) => props.right + \"px\",\n    borderTopWidth: (props) => props.top + \"px\",\n    borderBottomWidth: (props) => props.bottom + \"px\",\n    borderTopColor: (props) =>\n      props.isCustomCell\n        ? \"#2BFF00\"\n        : props.borderColor === undefined ||\n          props.borderColor === null ||\n          props.borderColor === \"\"\n        ? \"black\"\n        : props.borderColor,\n    borderRightColor: (props) =>\n      props.isCustomCell\n        ? \"#2BFF00\"\n        : props.borderColor === undefined ||\n          props.borderColor === null ||\n          props.borderColor === \"\"\n        ? \"black\"\n        : props.borderColor,\n    borderLeftColor: (props) =>\n      props.isCustomCell\n        ? \"#2BFF00\"\n        : props.borderColor === undefined ||\n          props.borderColor === null ||\n          props.borderColor === \"\"\n        ? \"black\"\n        : props.borderColor,\n    borderBottomColor: (props) =>\n      props.isCustomCell\n        ? \"#2BFF00\"\n        : props.borderColor === undefined ||\n          props.borderColor === null ||\n          props.borderColor === \"\"\n        ? \"black\"\n        : props.borderColor,\n    height: \"50px\",\n    width: \"100px\",\n    borderLeftStyle: \"solid\",\n    borderRightStyle: \"solid\",\n    borderTopStyle: \"solid\",\n    borderBottomStyle: \"solid\",\n    alignContent: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    display: \"table-cell\",\n    verticalAlign: \"middle\",\n    lineHeight: \"0.87\",\n  },\n});\n\nconst Cell = ({ cell, cellsRow, isCustomCell }) => {\n  const classes = useStyles({\n    left: cell.leftBorder,\n    right: cell.rightBorder,\n    top: cell.topBorder,\n    bottom: cell.bottomBorder,\n    color: cell.color,\n    isCustomCell,\n    borderColor: cell.borderColor,\n  });\n  const cellToUpdate = useSelector((store) => store.popups.cellToUpdate);\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const action = () => {\n    if (isSelecting) {\n      dispatch(addSelectingCell(cell));\n    } else if (cellToUpdate !== undefined) {\n      if (\n        !(\n          cellToUpdate.cell.columnIndex === cell.columnIndex &&\n          cellToUpdate.cell.rowIndex === cell.rowIndex\n        ) &&\n        (cell.type === \"info\" || cell.type === \"action\")\n      ) {\n        dispatch(cellToUpdateCustomCellSelected(cell));\n      }\n    } else if (cell.type === \"notype\") {\n      dispatch(showNoTypePopup(cell, cellsRow));\n    } else if (cell.type === \"info\") {\n      dispatch(showInfoPopup(cell, cellsRow));\n    } else if (cell.type === \"action\") {\n      dispatch(showActionPopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.sumAll && (\n        <img\n          style={{\n            width: \"25px\",\n            height: \"25px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n          src={dao}\n          alt=\"all\"\n        />\n      )}\n      {cell.name && !cell.sumAll && (\n        <span\n          style={{\n            fontSize:\n              cell.fontSize === undefined || cell.fontSize === null\n                ? 12\n                : cell.fontSize + \"px\",\n            fontWeight: cell.name.includes(\"<strong>\") ? \"bold\" : \"normal\",\n            fontStyle: cell.name.includes(\"<em>\") ? \"italic\" : \"normal\",\n            textDecoration: cell.name.includes(\"<u>\") ? \"underline\" : \"none\",\n            color:\n              cell.fontColor === undefined ||\n              cell.fontColor === null ||\n              cell.fontColor === \"\"\n                ? \"black\"\n                : cell.fontColor,\n          }}\n        >\n          {cell.name\n            .replaceAll(\"<p>\", \"\")\n            .replaceAll(\"</p>\", \"\")\n            .replaceAll(\"<span>\", \"\")\n            .replaceAll(\"</span>\", \"\")\n            .replaceAll(\"&amp;\", \"\")\n            .replaceAll(\"&nbsp;\", \"\")\n            .replaceAll(`<span class=\"ql-cursor\">`, \"\")\n            .replaceAll(\"<em>\", \"\")\n            .replaceAll(\"</em>\", \"\")\n            .replaceAll(\"<u>\", \"\")\n            .replaceAll(\"</u>\", \"\")\n            .replaceAll(\"<strong>\", \"\")\n            .replaceAll(\"</strong>\", \"\")}\n        </span>\n      )}\n    </div>\n  );\n};\nCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n  isCustomCell: PropTypes.bool,\n};\nexport default Cell;\n","import PropTypes from \"prop-types\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport EmptyCell from \"./cells/EmptyCell\";\nimport Cell from \"./cells/Cell\";\nimport { addSelectingRowCells } from \"../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  row: {\n    display: \"table-row\",\n  },\n  selectRowButton: {\n    background: \"blue\",\n    fontWeight: \"bold\",\n    color: \"white\",\n    width: \"50px\",\n    height: \"50px\",\n    border: \"1px solid white\",\n    \"&:hover\": {\n      color: \"black\",\n    },\n  },\n});\n\nconst CellsRow = ({ cellsRow }) => {\n  const classes = useStyles();\n  const cellToUpdateCustomCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRowLetsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  const dispatch = useDispatch();\n\n  const selectRow = () => {\n    dispatch(addSelectingRowCells(cellsRow.rowIndex));\n  };\n\n  return (\n    <div className={classes.row}>\n      {letsUpdate && cellsRowLetsUpdate && <div></div>}\n      {isSelecting && (\n        <Button onClick={selectRow} className={classes.selectRowButton}>\n          {\">\"}\n        </Button>\n      )}\n      {cellsRow &&\n        cellsRow.cells &&\n        cellsRow.cells\n          .sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1))\n          .map((cell) =>\n            cell.type === \"empty\" || cell.type === \"image\" ? (\n              <EmptyCell\n                cell={cell}\n                cellsRow={cellsRow}\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            ) : (\n              <Cell\n                cell={cell}\n                cellsRow={cellsRow}\n                isCustomCell={\n                  (cellToUpdateCustomCells &&\n                    cellToUpdateCustomCells.includes(cell)) ||\n                  (selectedCells && selectedCells.includes(cell))\n                }\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            )\n          )}\n    </div>\n  );\n};\nCellsRow.propTypes = {\n  cellsRow: PropTypes.object,\n};\nexport default CellsRow;\n","export const UPDATE_CELL = \"cell/UPDATE_CELL\";\nexport const UPDATE_CELL_SUCCESS = \"cell/UPDATE_CELL_SUCCESS\";\nexport const UPDATE_CELL_FAILED = \"cell/UPDATE_CELL_FAILED\";\nexport const GET_CELL_FILE = \"cell/GET_CELL_FILE\";\nexport const GET_CELL_FILE_SUCCESS = \"cell/GET_CELL_FILE_SUCCESS\";\nexport const GET_CELL_FILE_FAILED = \"cell/GET_CELL_FILE_FAILED\";\nexport const GET_CELL_NAME_FILE = \"cell/GET_CELL_NAME_FILE\";\nexport const GET_CELL_NAME_FILE_SUCCESS = \"cell/GET_CELL_NAME_FILE_SUCCESS\";\nexport const GET_CELL_NAME_FILE_FAILED = \"cell/GET_CELL_NAME_FILE_FAILED\";\nexport const GET_CELL_IMAGE_FILE = \"cell/GET_CELL_IMAGE_FILE\";\nexport const GET_CELL_IMAGE_FILE_SUCCESS = \"cell/GET_CELL_IMAGE_FILE_SUCCESS\";\nexport const GET_CELL_IMAGE_FILE_FAILED = \"cell/GET_CELL_IMAGE_FILE_FAILED\";","import { db, storage } from \"../../firebase\";\nimport {\n  UPDATE_CELL,\n  UPDATE_CELL_SUCCESS,\n  UPDATE_CELL_FAILED,\n  GET_CELL_FILE,\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_FILE_FAILED,\n  GET_CELL_NAME_FILE,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_FAILED,\n  GET_CELL_IMAGE_FILE,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_FAILED,\n} from \"../actionTypes/cell\";\nimport { CLOSE_POPUP, CUSTOM_CELLS_SUBMITED } from \"../actionTypes/popups\";\n\nexport function updateCell(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== cell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(cell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell,\n      });\n      dispatch({ type: CUSTOM_CELLS_SUBMITED });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function updateImageCell(cell, file, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let bigImagePath =\n        file !== undefined\n          ? \"/\" +\n            cell.tableId +\n            \"/\" +\n            cell.cellsRowId +\n            \"/\" +\n            cell.columnIndex +\n            \"/\" +\n            file.name\n          : cell.bigImagePath;\n      if (file !== undefined) {\n        await storage.ref(bigImagePath).put(file);\n      }\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, bigImagePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        e,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function getCellImageFile(bigImagePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_IMAGE_FILE });\n    try {\n      storage\n        .ref(bigImagePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_IMAGE_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_IMAGE_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellNameFile(nameFilePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_NAME_FILE });\n    try {\n      storage\n        .ref(nameFilePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_NAME_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_NAME_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellFile(filePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_FILE });\n    try {\n      storage\n        .ref(filePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function updateInfoCell(cell, file, nameFile, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let filePath = \"\";\n      let nameFilePath = \"\";\n      if (file !== undefined) {\n        filePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          file.name;\n        await storage.ref(filePath).put(file);\n      } else if (cell.filePath && cell.filePath !== \"\") {\n        filePath = cell.filePath;\n      }\n      if (nameFile !== undefined) {\n        nameFilePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          nameFile.name;\n        await storage.ref(nameFilePath).put(nameFile);\n      } else if (cell.nameFilePath && cell.nameFilePath !== \"\") {\n        nameFilePath = cell.nameFilePath;\n      }\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, filePath, nameFilePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      console.log(error);\n      console.log(e);\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cancelCustomCells } from \"../../../state/actions/popups\";\nimport { updateCell } from \"../../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  container: {\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    background: \"white\",\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsInfo = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const customCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const cell = useSelector((store) => store.popups.cellToUpdate);\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const submitCustomCellsF = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell.cell,\n          customCells: convertCustomCells(customCells),\n        },\n        cellsRow\n      )\n    );\n  };\n\n  const convertCustomCells = (cells) => {\n    const data = [];\n    cells.forEach((element) => {\n      data.push({\n        columnIndex: element.columnIndex,\n        rowIndex: element.rowIndex,\n      });\n    });\n    return data;\n  };\n\n  const cancelCustomCellsF = () => {\n    dispatch(cancelCustomCells());\n  };\n\n  const convertCustomCellsName = (text) => {\n    return text.split(\"<br />\").join(\" \");\n  };\n\n  return customCells !== undefined ? (\n    <div className={classes.container}>\n      {letsUpdate && <div></div>}\n      <h2>Select cells</h2>\n      <div className={classes.cont}>\n        {customCells.map((cell, ix) => (\n          <p key={ix} className={classes.text}>\n            {cell.name === null ? \"\" : convertCustomCellsName(cell.name)}\n          </p>\n        ))}\n        {customCells.length === 0 ? (\n          <p className={classes.text}>No cells are selected</p>\n        ) : (\n          <p />\n        )}\n      </div>\n      <Button className={classes.cancelButton} onClick={cancelCustomCellsF}>\n        Cancel\n      </Button>\n      <Button className={classes.submitButton} onClick={submitCustomCellsF}>\n        Submit custom cells\n      </Button>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\nexport default SelectedCellsInfo;\n","import { useSelector } from \"react-redux\";\n\nconst BigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const cell = useSelector((store) => store.tables.bigImageCell);\n\n  return image !== undefined ? (\n    <img\n      style={{\n        position: \"absolute\",\n        top: `${\n          cell.rowIndex * 50 +\n          140 +\n          64 +\n          56 +\n          parseInt(cell.bigImageTopMargin) +\n          25 -\n          cell.bigImageHeight / 2\n        }px`,\n        left: `${\n          cell.columnIndex * 100 +\n          180 +\n          parseInt(cell.bigImageLeftMargin) +\n          50 -\n          cell.bigImageWidth / 2\n        }px`,\n      }}\n      src={image}\n      height={cell.bigImageHeight}\n      width={cell.bigImageWidth}\n      alt=\"big\"\n    />\n  ) : (\n    <div></div>\n  );\n};\nexport default BigImage;\n","import { Button } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeBigImage } from \"../../../state/actions/tables\";\n\nconst RemoveBigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const dispatch = useDispatch();\n\n  const removeBigImageFromTable = () => {\n    dispatch(removeBigImage());\n  };\n\n  return image !== undefined ? (\n    <Button\n      style={{\n        color: \"white\",\n        background: \"red\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\",\n      }}\n      onClick={removeBigImageFromTable}\n    >\n      TEMPORARILY REMOVE BIG IMAGE ( UNTIL REFRESH )\n    </Button>\n  ) : (\n    <div></div>\n  );\n};\nexport default RemoveBigImage;\n","import { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addSelectingAllCells,\n  cancelIsSelecting,\n} from \"../../../state/actions/cellsRows\";\nimport { showFormatCellsPopup } from \"../../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"20px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsFormat = () => {\n  const classes = useStyles();\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const letsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n  const dispatch = useDispatch();\n\n  const convertCellsName = (text) => {\n    return text ? text.split(\"<br />\").join(\" \") : \"\";\n  };\n\n  const handleFormat = () => {\n    dispatch(showFormatCellsPopup());\n  };\n\n  const handleSelectAll = () => {\n    dispatch(addSelectingAllCells());\n  };\n\n  const handleCancel = () => {\n    dispatch(cancelIsSelecting());\n  };\n\n  return (\n    <div>\n      <Button className={classes.formatButton} onClick={handleFormat}>\n        Format Cells\n      </Button>\n      <Button className={classes.formatButton} onClick={handleSelectAll}>\n        Select All\n      </Button>\n      <Button className={classes.cancelButton} onClick={handleCancel}>\n        CANCEL\n      </Button>\n      <h2>Select cells</h2>\n      {letsUpdate && <div></div>}\n      <div className={classes.cont}>\n        {selectedCells &&\n          selectedCells.map((cell, ix) => (\n            <p key={ix} className={classes.text}>\n              {cell.name === null ? \"\" : convertCellsName(cell.name)}\n            </p>\n          ))}\n      </div>\n      {!selectedCells || selectedCells.length === 0 ? (\n        <p>No cells are selected</p>\n      ) : (\n        <span />\n      )}\n    </div>\n  );\n};\nexport default SelectedCellsFormat;\n","import { Button, Card, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCellsRows, setIsSelecting } from \"../../state/actions/cellsRows\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport CellsRow from \"./CellsRow\";\nimport {\n  deleteTable,\n  setTableJustCreatedFalse,\n} from \"../../state/actions/tables\";\nimport SelectedCellsInfo from \"./utils/SelectedCellsInfo\";\nimport BigImage from \"./utils/BigImage\";\nimport RemoveBigImage from \"./utils/RemoveBigImage\";\nimport SelectedCellsFormat from \"./utils/SelectedCellsFormat\";\nimport {\n  showAddToUserPopup,\n  showCreateTablePopup,\n} from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    height: \"20px\",\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  addToUserButton: {\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst Table = ({ table }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n  const tableJustCreated = useSelector(\n    (store) => store.tables.tableJustCreated\n  );\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const timeoutFinished = useCallback(() => {\n    dispatch(getCellsRows(table.id));\n    dispatch(setTableJustCreatedFalse());\n  }, [dispatch, table]);\n\n  useEffect(() => {\n    if (!tableJustCreated) {\n      if (!loading) {\n        dispatch(getCellsRows(table.id));\n      }\n      setLoading(false);\n    } else {\n      setLoading(true);\n      setTimeout(timeoutFinished, 3000);\n    }\n  }, [dispatch, table, tableJustCreated, loading, timeoutFinished]);\n\n  const handleDelete = () => {\n    dispatch(deleteTable(table.id, cellsRows));\n  };\n\n  const handleAddToUser = () => {\n    dispatch(showAddToUserPopup());\n  };\n\n  const handleDuplicateTable = () => {\n    dispatch(showCreateTablePopup(cellsRows));\n  };\n\n  const handleSelect = () => {\n    dispatch(setIsSelecting());\n  };\n\n  return (\n    <Card className={classes.card}>\n      <h2 className={classes.name}>{table.name}</h2>\n      <div\n        dangerouslySetInnerHTML={{\n          __html: table.description\n            .replaceAll(\"<p\", \"<span\")\n            .replaceAll(\"</p>\", \"</span><br/>\"),\n        }}\n      ></div>\n      <RemoveBigImage />\n      <SelectedCellsInfo />\n      {loading && <CircularProgress />}\n      {!loading && (\n        <div>\n          {!isSelecting && (\n            <Button className={classes.formatButton} onClick={handleSelect}>\n              Select Cells\n            </Button>\n          )}\n          {isSelecting && <SelectedCellsFormat />}\n          <div className={classes.cellContainer}>\n            <BigImage />\n            {cellsRows.map((cellsRow) => (\n              <CellsRow cellsRow={cellsRow} key={cellsRows.indexOf(cellsRow)} />\n            ))}\n          </div>\n          <div>\n            <Button\n              className={classes.addToUserButton}\n              onClick={handleAddToUser}\n            >\n              ADD TABLE TO USER\n            </Button>\n            <Button\n              className={classes.addToUserButton}\n              onClick={handleDuplicateTable}\n            >\n              DUPLICATE TABLE\n            </Button>\n            <Button className={classes.deleteButton} onClick={handleDelete}>\n              Delete\n            </Button>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\nTable.propTypes = {\n  table: PropTypes.object,\n};\nexport default Table;\n","import React from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReactQuill from \"react-quill\";\n\nimport {\n  addTable,\n  addTemplateTable,\n  addTemplateTableTwo,\n  duplicateTable,\n} from \"../../state/actions/tables\";\nimport { closePopup } from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    marginTop: \"60px\",\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginRight: \"20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst TableInfoPopup = () => {\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const cellsRowsToDuplicate = useSelector(\n    (store) => store.popups.cellsRowsToDuplicate\n  );\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    if (cellsRowsToDuplicate !== undefined) {\n      dispatch(duplicateTable(name, description, cellsRowsToDuplicate));\n    } else {\n      dispatch(addTable(name, description));\n    }\n    handleClose();\n  };\n\n  const handleTemplateSubmit = () => {\n    dispatch(addTemplateTable(name, description));\n    handleClose();\n  };\n\n  const handleTemplateTwoSubmit = () => {\n    dispatch(addTemplateTableTwo(name, description));\n    handleClose();\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleDescriptionChange = (value) => {\n    setDescription(value);\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2>\n          {cellsRowsToDuplicate === undefined\n            ? \"Create table\"\n            : \"Duplicate table\"}\n        </h2>\n        <TextField\n          required\n          fullWidth\n          label=\"Name\"\n          name=\"name\"\n          variant=\"outlined\"\n          placeholder=\"Name\"\n          value={name}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleNameChange}\n        />\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter description:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          {cellsRowsToDuplicate === undefined ? \"Create Default\" : \"Duplicate\"}\n        </Button>\n        {cellsRowsToDuplicate === undefined && (\n          <Button className={classes.button} onClick={handleTemplateSubmit}>\n            Create Template 1\n          </Button>\n        )}\n        {cellsRowsToDuplicate === undefined && (\n          <Button className={classes.button} onClick={handleTemplateTwoSubmit}>\n            Create Template 2\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TableInfoPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useEffect } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nimport { beginCustomSelect, closePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n});\n\nconst ActionCellPopup = () => {\n  const [sumAll, setSumAll] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [rows, setRows] = React.useState(\"\");\n  const [actionType, setActionType] = React.useState(\"\");\n  const [typeActionType, setTypeActionType] = React.useState(\"\");\n  const [typeActionTypeName, setTypeActionTypeName] = React.useState(\"\");\n  const [fontSize, setFontSize] = React.useState(\"\");\n  const [fontColor, setFontColor] = React.useState(\"\");\n  const [borderColor, setBorderColor] = React.useState(\"\");\n  const [baseTen, setBaseTen] = React.useState(\"\");\n  const [baseThree, setBaseThree] = React.useState(\"\");\n  const [baseHundred, setBaseHundred] = React.useState(\"\");\n  const [baseFour, setBaseFour] = React.useState(\"\");\n  const [databaseID, setDatabaseID] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      if (cell.sumAll) {\n        setSumAll(cell.sumAll);\n      } else {\n        setName(cell.name === undefined ? \"\" : cell.name);\n        setFontSize(cell.fontSize);\n        setFontColor(cell.fontColor);\n        setActionType(cell.actionType);\n        setBorderColor(cell.borderColor);\n        setTypeActionType(cell.typeActionType);\n        setTypeActionTypeName(cell.typeActionTypeName);\n        setColor(cell.color);\n        setRows(cell.rows);\n        setBaseTen(cell.baseTen);\n        setBaseFour(cell.baseFour);\n        setBaseHundred(cell.baseHundred);\n        setBaseThree(cell.baseThree);\n        setDatabaseID(cell.databaseID);\n      }\n    }\n  }, [cell]);\n\n  const actionTypes = [\"selectrows\", \"selecttype\", \"custom\"];\n  const typeActionTypes = [\"selecttypeall\", \"selecttyperows\"];\n  const actionTypesNames = [\"Select Rows\", \"Select Type\", \"Custom\"];\n  const typeActionTypesNames = [\"Select All Cells of Type\", \"Select Type Rows\"];\n\n  const handleNameChange = (value) => {\n    setName(value);\n  };\n\n  const handleTypeNameChange = (event) => {\n    setTypeActionTypeName(event.target.value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleBorderColorChange = (event) => {\n    setBorderColor(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (actionType === \"custom\") {\n      dispatch(\n        beginCustomSelect({\n          cell: {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            fontColor: fontColor === undefined ? \"\" : fontColor,\n            borderColor: borderColor === undefined ? \"\" : borderColor,\n            fontSize: fontSize === undefined ? \"\" : fontSize,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n            baseTen: baseTen === undefined ? \"\" : baseTen,\n            baseFour: baseFour === undefined ? \"\" : baseFour,\n            baseHundred: baseHundred === undefined ? \"\" : baseHundred,\n            baseThree: baseThree === undefined ? \"\" : baseThree,\n            databaseID: databaseID === undefined ? \"\" : databaseID,\n          },\n        })\n      );\n    } else {\n      dispatch(\n        updateCell(\n          {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            fontColor: fontColor === undefined ? \"\" : fontColor,\n            fontSize: fontSize === undefined ? \"\" : fontSize,\n            borderColor: borderColor === undefined ? \"\" : borderColor,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n            baseTen: baseTen === undefined ? \"\" : baseTen,\n            baseFour: baseFour === undefined ? \"\" : baseFour,\n            baseHundred: baseHundred === undefined ? \"\" : baseHundred,\n            baseThree: baseThree === undefined ? \"\" : baseThree,\n            databaseID: databaseID === undefined ? \"\" : databaseID,\n          },\n          cellsRow\n        )\n      );\n      handleClose();\n    }\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          nameFilePath: \"\",\n          fontColor: \"\",\n          borderColor: \"\",\n          color: \"white\",\n          actionType: \"\",\n          typeActionType: \"\",\n          typeActionTypeName: \"\",\n          topBorder: 2,\n          bottomBorder: 2,\n          leftBorder: 2,\n          rightBorder: 2,\n          fontSize: \"\",\n          rows: \"\",\n          sumAll: false,\n          type: \"notype\",\n          baseTen: \"\",\n          baseHundred: \"\",\n          baseThree: \"\",\n          baseFour: \"\",\n          databaseId: \"\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleRowsChange = (event) => {\n    setRows(event.target.value);\n  };\n\n  const handleActionTypeChange = (event) => {\n    setActionType(event.target.value);\n  };\n\n  const handleTypeActionTypeChange = (event) => {\n    setTypeActionType(event.target.value);\n  };\n\n  const handleSumAll = () => {\n    setSumAll(!sumAll);\n  };\n\n  const handleFontSize = (event) => {\n    setFontSize(event.target.value);\n  };\n\n  const handleFontColor = (event) => {\n    setFontColor(event.target.value);\n  };\n\n  const handleBaseTenChange = (event) => {\n    setBaseTen(event.target.value);\n  };\n\n  const handleBaseFourChange = (event) => {\n    setBaseFour(event.target.value);\n  };\n\n  const handleBaseThreeChange = (event) => {\n    setBaseThree(event.target.value);\n  };\n\n  const handleBaseHundredChange = (event) => {\n    setBaseHundred(event.target.value);\n  };\n\n  const handleDatabaseIDChange = (event) => {\n    setDatabaseID(event.target.value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Action</h2>\n        <div>\n          <FormControlLabel\n            value={sumAll}\n            control={<Checkbox color=\"default\" onClick={handleSumAll} />}\n            label=\"Sum all?\"\n            checked={sumAll}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!sumAll && (\n          <div>\n            <div className={classes.quillContainer}>\n              <p className={classes.text}>Enter name:</p>\n              <ReactQuill\n                theme=\"snow\"\n                className={classes.editor}\n                value={name}\n                onChange={handleNameChange}\n              />\n            </div>\n            <h4 style={{ marginTop: \"60px\" }}>\n              Hint: Standard mobile font is 12. 3 Rows can pass into cell.\n            </h4>\n            <TextField\n              fullWidth\n              label=\"Font size\"\n              name=\"font_size\"\n              variant=\"outlined\"\n              placeholder=\"Font size\"\n              value={fontSize}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleFontSize}\n            />\n            <TextField\n              fullWidth\n              label=\"Font color\"\n              name=\"font_color\"\n              variant=\"outlined\"\n              placeholder=\"Font color\"\n              value={fontColor}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleFontColor}\n            />\n            <h3>Format cell</h3>\n            <TextField\n              fullWidth\n              label=\"Color\"\n              name=\"color\"\n              variant=\"outlined\"\n              placeholder=\"Cell color\"\n              value={color}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleColorChange}\n            />\n            <TextField\n              fullWidth\n              label=\"Border Color\"\n              name=\"border_color\"\n              variant=\"outlined\"\n              placeholder=\"Border Color\"\n              value={borderColor}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleBorderColorChange}\n            />\n            <h2>Bluetooth</h2>\n            <TextField\n              fullWidth\n              label=\"Base 10\"\n              name=\"base10\"\n              variant=\"outlined\"\n              placeholder=\"Base 10\"\n              value={baseTen}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleBaseTenChange}\n            />\n            <TextField\n              fullWidth\n              label=\"Base 44\"\n              name=\"base44\"\n              variant=\"outlined\"\n              placeholder=\"Base 44\"\n              value={baseFour}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleBaseFourChange}\n            />\n            <TextField\n              fullWidth\n              label=\"Base 100\"\n              name=\"base100\"\n              variant=\"outlined\"\n              placeholder=\"Base 100\"\n              value={baseHundred}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleBaseHundredChange}\n            />\n            <TextField\n              fullWidth\n              label=\"Base 336\"\n              name=\"base336\"\n              variant=\"outlined\"\n              placeholder=\"Base 336\"\n              value={baseThree}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleBaseThreeChange}\n            />\n            <TextField\n              fullWidth\n              label=\"Database ID\"\n              name=\"databaseID\"\n              variant=\"outlined\"\n              placeholder=\"Database ID\"\n              value={databaseID}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleDatabaseIDChange}\n            />\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"label\">Action Type</InputLabel>\n              <Select\n                id=\"select\"\n                value={actionType || \"\"}\n                onChange={handleActionTypeChange}\n              >\n                {actionTypes.map((item, ix) => (\n                  <MenuItem key={item} value={item}>\n                    {actionTypesNames[ix]}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            {actionType === actionTypes[1] && (\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"label\">Action Type</InputLabel>\n                <Select\n                  id=\"select\"\n                  value={typeActionType || \"\"}\n                  onChange={handleTypeActionTypeChange}\n                >\n                  {typeActionTypes.map((item, ix) => (\n                    <MenuItem key={item} value={item}>\n                      {typeActionTypesNames[ix]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n            {actionType === actionTypes[1] && (\n              <TextField\n                fullWidth\n                label=\"Type name\"\n                name=\"Type name\"\n                variant=\"outlined\"\n                placeholder=\"Enter type name\"\n                value={typeActionTypeName || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleTypeNameChange}\n              />\n            )}\n            {(actionType === actionTypes[0] ||\n              (actionType === actionTypes[1] &&\n                typeActionType === typeActionTypes[1])) && (\n              <TextField\n                fullWidth\n                label=\"Rows\"\n                name=\"rows\"\n                variant=\"outlined\"\n                placeholder=\"Enter row indexes separated with Whitespaces ( Begining with 0 )\"\n                value={rows || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleRowsChange}\n              />\n            )}\n          </div>\n        )}\n        {cell.type !== \"notype\" && (\n          <Button className={classes.noTypeButton} onClick={handleNoTypeSubmit}>\n            MAKE NO TYPE\n          </Button>\n        )}\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Checkbox, FormControlLabel, makeStyles } from \"@material-ui/core\";\n\nimport { closePopup, submitNoTypePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst NoTypeCellPopup = () => {\n  const [isAction, setIsAction] = React.useState(false);\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleIsAction = () => {\n    setIsAction(!isAction);\n  };\n\n  const handleSubmit = () => {\n    dispatch(submitNoTypePopup(isAction));\n  };\n\n  const handleMakeEmptySubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"empty\" }, cellsRow));\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Select cell type</h2>\n        <div>\n          <FormControlLabel\n            value={isAction}\n            control={<Checkbox color=\"default\" onClick={handleIsAction} />}\n            label=\"Is it an action cell?\"\n            checked={isAction}\n            labelPlacement=\"start\"\n          />\n        </div>\n        <Button\n          className={classes.makeEmptyButton}\n          onClick={handleMakeEmptySubmit}\n        >\n          Make Empty\n        </Button>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit Type Cell\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default NoTypeCellPopup;\n","export const SHOW_SNACKBAR = \"snackbar/SHOW_SNACKBAR\";\nexport const CLOSE_SNACKBAR = \"snackbar/CLOSE_SNACKBAR\";\n","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nexport function showSnackbar(message) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_SNACKBAR, message });\n  };\n}\n\nexport function closeSnackbar() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_SNACKBAR });\n  };\n}\n","import React from \"react\";\nimport { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport {\n  getCellFile,\n  getCellNameFile,\n  updateInfoCell,\n  updateCell,\n} from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  borderInputcontainer: {\n    marginTop: \"50px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    marginBottom: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst InfoCellPopup = () => {\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [borderColor, setBorderColor] = React.useState(\"\");\n  const [typeForAction, setTypeForAction] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [nameFile, setNameFile] = React.useState(undefined);\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [baseTen, setBaseTen] = React.useState(\"\");\n  const [baseThree, setBaseThree] = React.useState(\"\");\n  const [baseHundred, setBaseHundred] = React.useState(\"\");\n  const [baseFour, setBaseFour] = React.useState(\"\");\n  const [databaseID, setDatabaseID] = React.useState(\"\");\n  const [fontSize, setFontSize] = React.useState(\"\");\n  const [fontColor, setFontColor] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellFile);\n  const cellNameFile = useSelector((store) => store.popups.cellNameFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setName(cell.name === undefined ? \"\" : cell.name);\n      setColor(cell.color);\n      setFontSize(cell.fontSize);\n      setFontColor(cell.fontColor);\n      setBorderColor(cell.borderColor);\n      setDescription(cell.description === undefined ? \"\" : cell.description);\n      setTop(cell.topBorder);\n      setBottom(cell.bottomBorder);\n      setLeft(cell.leftBorder);\n      setRight(cell.rightBorder);\n      setBaseTen(cell.baseTen);\n      setBaseFour(cell.baseFour);\n      setBaseHundred(cell.baseHundred);\n      setBaseThree(cell.baseThree);\n      setDatabaseID(cell.databaseID);\n      if (cell.nameFilePath !== undefined && cell.nameFilePath !== \"\") {\n        dispatch(getCellNameFile(cell.nameFilePath));\n      }\n      if (cell.filePath !== undefined && cell.filePath !== \"\") {\n        dispatch(getCellFile(cell.filePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleSubmit = () => {\n    dispatch(\n      updateInfoCell(\n        {\n          ...cell,\n          name: name,\n          description: description === undefined ? \"\" : description,\n          color,\n          fontColor: fontColor === undefined ? \"\" : fontColor,\n          borderColor: borderColor === undefined ? \"\" : borderColor,\n          fontSize: fontSize === undefined ? null : fontSize,\n          typeForAction: typeForAction === undefined ? \"\" : typeForAction,\n          topBorder: top,\n          bottomBorder: bottom,\n          leftBorder: left,\n          rightBorder: right,\n          type: \"info\",\n          baseTen: baseTen === undefined ? \"\" : baseTen,\n          baseFour: baseFour === undefined ? \"\" : baseFour,\n          baseHundred: baseHundred === undefined ? \"\" : baseHundred,\n          baseThree: baseThree === undefined ? \"\" : baseThree,\n          databaseID: databaseID === undefined ? \"\" : databaseID,\n        },\n        file,\n        nameFile,\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleNameChange = (value) => {\n    setName(value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleDescriptionChange = (value) => {\n    setDescription(value);\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const nameFileLoaded = (loadedFile) => {\n    setNameFile(loadedFile);\n  };\n\n  const removeNameFile = () => {\n    setNameFile(undefined);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const handleTypeForAction = (event) => {\n    setTypeForAction(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBaseTenChange = (event) => {\n    setBaseTen(event.target.value);\n  };\n\n  const handleBaseFourChange = (event) => {\n    setBaseFour(event.target.value);\n  };\n\n  const handleBaseThreeChange = (event) => {\n    setBaseThree(event.target.value);\n  };\n\n  const handleBaseHundredChange = (event) => {\n    setBaseHundred(event.target.value);\n  };\n\n  const handleDatabaseIDChange = (event) => {\n    setDatabaseID(event.target.value);\n  };\n\n  const handleFontSize = (event) => {\n    setFontSize(event.target.value);\n  };\n\n  const handleFontColor = (event) => {\n    setFontColor(event.target.value);\n  };\n\n  const handleBorderColorChange = (event) => {\n    setBorderColor(event.target.value);\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          nameFilePath: \"\",\n          description: \"\",\n          fontColor: \"\",\n          borderColor: \"\",\n          color: \"white\",\n          typeForAction: \"\",\n          topBorder: 2,\n          bottomBorder: 2,\n          leftBorder: 2,\n          rightBorder: 2,\n          type: \"notype\",\n          file: \"\",\n          nameFile: \"\",\n          fontSize: \"\",\n          baseTen: \"\",\n          baseHundred: \"\",\n          baseThree: \"\",\n          baseFour: \"\",\n          databaseId: \"\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Information</h2>\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter name:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={name}\n            onChange={handleNameChange}\n          />\n        </div>\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={nameFileLoaded}\n          onError={showError}\n        >\n          <Button style={{ marginTop: \"60px\" }} className={classes.button}>\n            Click to upload NAME image\n          </Button>\n        </FilePicker>\n        {(nameFile || cellNameFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:\n            <strong>\n              {nameFile === undefined ? cellNameFile.name : nameFile.name}\n            </strong>\n            <button\n              className={classes.removeFileButton}\n              onClick={removeNameFile}\n            >\n              Remove\n            </button>\n          </div>\n        )}\n        <h4>Hint: Standard mobile font is 12. 3 Rows can pass into cell.</h4>\n        <TextField\n          fullWidth\n          label=\"Font size\"\n          name=\"font_size\"\n          variant=\"outlined\"\n          placeholder=\"Font size\"\n          value={fontSize}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleFontSize}\n        />\n        <TextField\n          fullWidth\n          label=\"Font color\"\n          name=\"font_color\"\n          variant=\"outlined\"\n          placeholder=\"Font color\"\n          value={fontColor}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleFontColor}\n        />\n        <h3>Format cell</h3>\n        <TextField\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Border Color\"\n          name=\"border_color\"\n          variant=\"outlined\"\n          placeholder=\"Border Color\"\n          value={borderColor}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBorderColorChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Type for action\"\n          name=\"type_for_action\"\n          variant=\"outlined\"\n          placeholder=\"Type for action\"\n          value={typeForAction}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleTypeForAction}\n        />\n        <FilePicker\n          extensions={[\"pdf\", \"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.button}>Click to upload file</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded file:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter description:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <div className={classes.borderInputcontainer}>\n          <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n          <TextField\n            name=\"top\"\n            variant=\"outlined\"\n            label=\"Top\"\n            placeholder=\"Top\"\n            value={top}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleTopChange}\n          />\n          <TextField\n            label=\"Right\"\n            name=\"right\"\n            variant=\"outlined\"\n            placeholder=\"Right\"\n            value={right}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleRightChange}\n          />\n          <TextField\n            label=\"Bottom\"\n            name=\"bottom\"\n            variant=\"outlined\"\n            placeholder=\"Bottom\"\n            value={bottom}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleBottomChange}\n          />\n          <TextField\n            label=\"Left\"\n            name=\"left\"\n            variant=\"outlined\"\n            placeholder=\"Left\"\n            value={left}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleLeftChange}\n          />\n        </div>\n        <h2>Bluetooth</h2>\n        <TextField\n          fullWidth\n          label=\"Base 10\"\n          name=\"base10\"\n          variant=\"outlined\"\n          placeholder=\"Base 10\"\n          value={baseTen}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseTenChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 44\"\n          name=\"base44\"\n          variant=\"outlined\"\n          placeholder=\"Base 44\"\n          value={baseFour}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseFourChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 100\"\n          name=\"base100\"\n          variant=\"outlined\"\n          placeholder=\"Base 100\"\n          value={baseHundred}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseHundredChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 336\"\n          name=\"base336\"\n          variant=\"outlined\"\n          placeholder=\"Base 336\"\n          value={baseThree}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseThreeChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Database ID\"\n          name=\"databaseID\"\n          variant=\"outlined\"\n          placeholder=\"Database ID\"\n          value={databaseID}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleDatabaseIDChange}\n        />\n        <div>\n          {cell.type !== \"notype\" && (\n            <Button\n              className={classes.noTypeButton}\n              onClick={handleNoTypeSubmit}\n            >\n              MAKE NO TYPE\n            </Button>\n          )}\n          <Button className={classes.submitButton} onClick={handleSubmit}>\n            Submit\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default InfoCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { closePopup, showImagePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  notypeButton: {\n    border: \"1px solid black\",\n    background: \"blue\",\n    marginRight: \"20px\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst EmptyCellPopup = () => {\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"notype\" }, cellsRow));\n  };\n\n  const handleImageSubmit = () => {\n    dispatch(showImagePopup());\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <Button className={classes.notypeButton} onClick={handleSubmit}>\n          MAKE CELL NOTYPE\n        </Button>\n        <Button className={classes.button} onClick={handleImageSubmit}>\n          ADD IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default EmptyCellPopup;\n","import { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport {\n  updateImageCell,\n  getCellImageFile,\n  updateCell,\n} from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  fileButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  noTypeButton: {\n    background: \"red\",\n    marginLeft: \"10px\",\n    marginTop: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst ImageCellPopup = () => {\n  const [width, setWidth] = React.useState(\"\");\n  const [height, setHeight] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [leftMargin, setLeftMargin] = React.useState(\"\");\n  const [topMargin, setTopMargin] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellImageFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setHeight(cell.bigImageHeight === undefined ? \"\" : cell.bigImageHeight);\n      setWidth(cell.bigImageWidth === undefined ? \"\" : cell.bigImageWidth);\n      setLeftMargin(\n        cell.bigImageLeftMargin === undefined ? \"\" : cell.bigImageLeftMargin\n      );\n      setTopMargin(\n        cell.bigImageTopMargin === undefined ? \"\" : cell.bigImageTopMargin\n      );\n      if (\n        cell &&\n        cell.bigImagePath !== undefined &&\n        cell.bigImagePath !== null &&\n        cell.bigImagePath !== \"\"\n      ) {\n        dispatch(getCellImageFile(cell.bigImagePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleHeightChange = (event) => {\n    setHeight(event.target.value);\n  };\n\n  const handleTopMarginChange = (event) => {\n    setTopMargin(event.target.value);\n  };\n\n  const handleLeftMarginChange = (event) => {\n    setLeftMargin(event.target.value);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const handleSubmit = () => {\n    dispatch(\n      updateImageCell(\n        {\n          ...cell,\n          type: \"image\",\n          bigImageWidth: width,\n          bigImageHeight: height,\n          bigImageTopMargin: topMargin === \"\" ? 0 : topMargin,\n          bigImageLeftMargin: leftMargin === \"\" ? 0 : leftMargin,\n        },\n        file,\n        cellsRow\n      )\n    );\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          bigImageWidth: \"\",\n          bigImageHeight: \"\",\n          bigImageTopMargin: \"\",\n          bigImageLeftMargin: \"\",\n          bigImagePath: null,\n          name: \"\",\n          description: \"\",\n          color: \"white\",\n          typeForAction: \"\",\n          topBorder: 2,\n          bottomBorder: 2,\n          leftBorder: 2,\n          rightBorder: 2,\n          type: \"notype\",\n          file: \"\",\n          nameFile: \"\",\n          fontSize: \"\",\n          baseTen: \"\",\n          baseHundred: \"\",\n          baseThree: \"\",\n          baseFour: \"\",\n          databaseId: \"\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n          maxSize={100000}\n        >\n          <Button className={classes.fileButton}>Click to upload image</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <h3>Single cell width = 100 and height = 50</h3>\n        <TextField\n          fullWidth\n          label=\"Width\"\n          name=\"width\"\n          variant=\"outlined\"\n          placeholder=\"Enter width\"\n          value={width}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleWidthChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Height\"\n          name=\"height\"\n          variant=\"outlined\"\n          placeholder=\"Enter height\"\n          value={height}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleHeightChange}\n        />\n        <div style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>\n          <TextField\n            label=\"Top margin\"\n            name=\"topMargin\"\n            variant=\"outlined\"\n            placeholder=\"Top margin\"\n            value={topMargin}\n            style={{\n              marginRight: \"10px\",\n              maxWidth: \"140px\",\n            }}\n            onChange={handleTopMarginChange}\n          />\n          <TextField\n            label=\"Left margin\"\n            name=\"leftMargin\"\n            variant=\"outlined\"\n            placeholder=\"Left margin\"\n            value={leftMargin}\n            style={{\n              maxWidth: \"140px\",\n            }}\n            onChange={handleLeftMarginChange}\n          />\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          SUBMIT\n        </Button>\n        <Button className={classes.noTypeButton} onClick={handleNoTypeSubmit}>\n          MAKE NO TYPE\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default ImageCellPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { submitSelectingCells } from \"../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  borderInputcontainer: {\n    marginTop: \"10px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst FormatCellsPopup = () => {\n  const [fontColor, setFontColor] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [width, setWidth] = React.useState(\"\");\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [borderColor, setBorderColor] = React.useState(\"\");\n  const [isBoxBorder, setIsBoxBorder] = React.useState(false);\n  const [fontSize, setFontSize] = React.useState(\"\");\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(\n      submitSelectingCells(\n        {\n          color,\n          top,\n          bottom,\n          left,\n          right,\n          isBoxBorder,\n          width,\n          borderColor,\n          fontColor,\n          fontSize,\n        },\n        selectedCells,\n        cellsRows\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleFontColorChange = (event) => {\n    setFontColor(event.target.value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBoxBorder = () => {\n    setIsBoxBorder(!isBoxBorder);\n  };\n\n  const handleBorderColorChange = (event) => {\n    setBorderColor(event.target.value);\n  };\n\n  const handleFontSize = (event) => {\n    setFontSize(event.target.value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Format Cells</h2>\n        <TextField\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Font color\"\n          name=\"fontcolor\"\n          variant=\"outlined\"\n          placeholder=\"Cell font color\"\n          value={fontColor}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleFontColorChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Font size\"\n          name=\"font_size\"\n          variant=\"outlined\"\n          placeholder=\"Font size\"\n          value={fontSize}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleFontSize}\n        />\n        <TextField\n          fullWidth\n          label=\"Border Color\"\n          name=\"border_color\"\n          variant=\"outlined\"\n          placeholder=\"Border Color\"\n          value={borderColor}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBorderColorChange}\n        />\n        <div>\n          <FormControlLabel\n            value={isBoxBorder}\n            control={<Checkbox color=\"default\" onClick={handleBoxBorder} />}\n            label=\"Is box border?\"\n            checked={isBoxBorder}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!isBoxBorder && (\n          <div className={classes.borderInputcontainer}>\n            <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n            <TextField\n              name=\"top\"\n              variant=\"outlined\"\n              label=\"Top\"\n              placeholder=\"Top\"\n              value={top}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleTopChange}\n            />\n            <TextField\n              label=\"Right\"\n              name=\"right\"\n              variant=\"outlined\"\n              placeholder=\"Right\"\n              value={right}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleRightChange}\n            />\n            <TextField\n              label=\"Bottom\"\n              name=\"bottom\"\n              variant=\"outlined\"\n              placeholder=\"Bottom\"\n              value={bottom}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleBottomChange}\n            />\n            <TextField\n              label=\"Left\"\n              name=\"left\"\n              variant=\"outlined\"\n              placeholder=\"Left\"\n              value={left}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleLeftChange}\n            />\n          </div>\n        )}\n        {isBoxBorder && (\n          <div>\n            <TextField\n              label=\"Border width\"\n              name=\"width\"\n              variant=\"outlined\"\n              placeholder=\"Border width\"\n              value={width}\n              style={{\n                margin: \"10px\",\n              }}\n              onChange={handleWidthChange}\n            />\n          </div>\n        )}\n        <Button className={classes.submitButton} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default FormatCellsPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport {\n  makeStyles,\n  FormControl,\n  Select,\n  InputLabel,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { addTableToUser } from \"../../state/actions/user\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst AddToUserPopup = () => {\n  const [selectedUser, setSelectedUser] = React.useState(undefined);\n  const users = useSelector((store) => store.user.users);\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(addTableToUser(selectedUser, selectedTable));\n    handleClose();\n  };\n\n  const handleChange = (event) => {\n    setSelectedUser(event.target.value);\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Select user</h2>\n        <div>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"label\">User</InputLabel>\n            <Select\n              id=\"demo-simple-select-helper\"\n              value={selectedUser || \"\"}\n              label=\"User\"\n              onChange={handleChange}\n            >\n              {users.map((user, ix) => (\n                <MenuItem key={ix} value={user}>\n                  <em>{user.email}</em>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default AddToUserPopup;\n","export const LOAD_DEVICES = \"devices/LOAD_DEVICES\";\nexport const LOAD_DEVICES_SUCCESS = \"devices/LOAD_DEVICES_SUCCESS\";\nexport const LOAD_DEVICES_FAILED = \"devices/LOAD_DEVICES_FAILED\";\nexport const LOAD_MAPPINGS = \"devices/LOAD_MAPPINGS\";\nexport const LOAD_MAPPINGS_SUCCESS = \"devices/LOAD_MAPPINGS_SUCCESS\";\nexport const LOAD_MAPPINGS_FAILED = \"devices/LOAD_MAPPINGS_FAILED\";\nexport const DELETE_MAPPING = \"devices/DELETE_MAPPING\";\nexport const DELETE_MAPPING_SUCCESS = \"devices/DELETE_MAPPING_SUCCESS\";\nexport const DELETE_MAPPING_FAILED = \"devices/DELETE_MAPPING_FAILED\";\nexport const ADD_RASP_TO_USER = \"devices/ADD_RASP_TO_USER\";\nexport const ADD_RASP_TO_USER_SUCCESS = \"devices/ADD_RASP_TO_USER_SUCCESS\";\nexport const ADD_RASP_TO_USER_FAILED = \"devices/ADD_RASP_TO_USER_FAILED\";\nexport const LOAD_SESSION_LOGS = \"devices/LOAD_SESSION_LOGS\";\nexport const LOAD_SESSION_LOGS_SUCCESS = \"devices/LOAD_SESSION_LOGS_SUCCESS\";\nexport const LOAD_SESSION_LOGS_FAILED = \"devices/LOAD_SESSION_LOGS_FAILED\";\n","import {\n  DELETE_MAPPING,\n  DELETE_MAPPING_FAILED,\n  DELETE_MAPPING_SUCCESS,\n  LOAD_DEVICES,\n  LOAD_DEVICES_FAILED,\n  LOAD_DEVICES_SUCCESS,\n  LOAD_SESSION_LOGS,\n  LOAD_SESSION_LOGS_FAILED,\n  LOAD_SESSION_LOGS_SUCCESS,\n  LOAD_MAPPINGS,\n  LOAD_MAPPINGS_FAILED,\n  LOAD_MAPPINGS_SUCCESS,\n  ADD_RASP_TO_USER,\n  ADD_RASP_TO_USER_SUCCESS,\n  ADD_RASP_TO_USER_FAILED,\n} from \"../actionTypes/devices\";\nimport { SHOW_SESSION_LOGS_POPUP } from \"../actionTypes/popups\";\n\nexport function deleteMapping(mapping) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_MAPPING });\n    const url =\n      \"https://fm.ki.lt/api/v1/dataexchange/mappings?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010\";\n    try {\n      const req = new Request(url, {\n        method: \"DELETE\",\n        body: JSON.stringify({ sessionId: mapping.session_id }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const response = await fetch(req).then();\n      if (response.ok) {\n        dispatch({ type: DELETE_MAPPING_SUCCESS, mapping });\n      } else {\n        dispatch({ type: DELETE_MAPPING_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: DELETE_MAPPING_FAILED });\n    }\n  };\n}\n\nexport function loadMappings() {\n  return async (dispatch) => {\n    dispatch({ type: LOAD_MAPPINGS });\n    const url =\n      \"https://fm.ki.lt/api/v1/dataexchange/mappings?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010\";\n    try {\n      const req = new Request(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const response = await fetch(req).then();\n      if (response.ok) {\n        const data = await response.json();\n        dispatch({ type: LOAD_MAPPINGS_SUCCESS, mappings: data.mappings });\n      } else {\n        dispatch({ type: LOAD_MAPPINGS_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: LOAD_MAPPINGS_FAILED });\n    }\n  };\n}\n\nexport function loadDevices() {\n  return async (dispatch) => {\n    dispatch({ type: LOAD_DEVICES });\n    const devicesUrl =\n      \"https://fm.ki.lt/api/v1/dataexchange/mappings?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010\";\n    try {\n      const devicesReq = new Request(devicesUrl, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const devicesResponse = await fetch(devicesReq).then();\n      if (devicesResponse.ok) {\n        const data = await devicesResponse.json();\n        dispatch({ type: LOAD_DEVICES_SUCCESS, devices: data.mappings });\n      } else {\n        dispatch({ type: LOAD_DEVICES_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: LOAD_DEVICES_FAILED });\n    }\n  };\n}\n\nexport function loadSessionLogs(sessionId, startDate, endDate) {\n  return async (dispatch) => {\n    dispatch({ type: LOAD_SESSION_LOGS });\n    const timeStamp = new Date().getTime();\n    const yesterdayTimeStamp = timeStamp - 24 * 60 * 60 * 1000;\n    const cDate = new Date(yesterdayTimeStamp).toJSON().slice(0, 10);\n    const sessionStartDate =\n      startDate === undefined\n        ? cDate\n        : new Date(startDate).toJSON().slice(0, 10);\n    const sessionEndDate =\n      endDate === undefined\n        ? new Date().toJSON().slice(0, 10)\n        : endDate.toJSON().slice(0, 10);\n    const url =\n      \"https://fm.ki.lt/api/v1/dataexchange/data?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010&session_id=\" +\n      sessionId +\n      \"&start=\" +\n      sessionStartDate +\n      \"&end=\" +\n      sessionEndDate;\n    try {\n      const req = new Request(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const resp = await fetch(req).then();\n      if (resp.ok) {\n        const data = await resp.json();\n        dispatch({ type: LOAD_SESSION_LOGS_SUCCESS, sessionData: data.data });\n        if (startDate === undefined) {\n          dispatch({ type: SHOW_SESSION_LOGS_POPUP });\n        }\n      } else {\n        dispatch({ type: LOAD_SESSION_LOGS_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: LOAD_SESSION_LOGS_FAILED });\n    }\n  };\n}\n\nexport function addRaspberryToUser(user, rasp) {\n  return async (dispatch) => {\n    const url =\n      \"https://fm.ki.lt/api/v1/dataexchange/mappings?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010\";\n    dispatch({ type: ADD_RASP_TO_USER });\n    try {\n      const data = {\n        userId: user.id,\n        raspberryId: rasp,\n      };\n      const req = new Request(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const response = await fetch(req);\n      if (response.ok) {\n        dispatch({ type: ADD_RASP_TO_USER_SUCCESS });\n      } else {\n        dispatch({ type: ADD_RASP_TO_USER_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: ADD_RASP_TO_USER_FAILED });\n    }\n  };\n}\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {\n  makeStyles,\n  FormControl,\n  Select,\n  InputLabel,\n  TextField,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { closePopup } from \"../../state/actions/popups\";\nimport { addRaspberryToUser, deleteMapping } from \"../../state/actions/devices\";\nimport { loadMappings } from \"../../state/actions/devices\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  boxik: {\n    display: \"flex\",\n    color: \"black\",\n    background: \"white\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n  },\n  columns: {\n    display: \"flex\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    fontWeight: \"bold\",\n    marginLeft: \"auto\",\n    fontSize: \"30px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst MapRaspberryPopup = () => {\n  const [didGet, setDidGet] = React.useState(false);\n  const [shouldUpdate, setShouldUpdate] = React.useState(false);\n  const [selectedUser, setSelectedUser] = React.useState(undefined);\n  const [oldMappings, setOldMappings] = React.useState([]);\n  const users = useSelector((store) => store.user.users);\n  const mappings = useSelector((store) => store.devices.mappings);\n\n  const [raspberryID, setRaspberryID] = React.useState(\"\");\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (!didGet) {\n      setDidGet(true);\n      dispatch(loadMappings());\n    }\n    if (mappings.length !== oldMappings.length) {\n      setShouldUpdate(!shouldUpdate);\n      setOldMappings(mappings);\n    }\n  }, [\n    dispatch,\n    didGet,\n    mappings.length,\n    oldMappings.length,\n    mappings,\n    shouldUpdate,\n  ]);\n\n  const handleSubmit = () => {\n    if (raspberryID !== \"\") {\n      dispatch(addRaspberryToUser(selectedUser, raspberryID));\n    }\n    handleClose();\n  };\n\n  const handleRaspberryIDChange = (event) => {\n    setRaspberryID(event.target.value);\n  };\n\n  const handleChange = (event) => {\n    setSelectedUser(event.target.value);\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleDelete = (item) => {\n    dispatch(deleteMapping(item));\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Map User to Raspberry</h2>\n        {shouldUpdate && <span></span>}\n        {mappings &&\n          mappings.map((item) => (\n            <MappingsListItem\n              item={item}\n              user={users.find((e) => e.id === item.userId)}\n              key={mappings.indexOf(item)}\n              onDelete={handleDelete}\n            />\n          ))}\n        <div>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"label\">User</InputLabel>\n            <Select\n              id=\"demo-simple-select-helper\"\n              value={selectedUser || \"\"}\n              label=\"User\"\n              onChange={handleChange}\n            >\n              {users.map((user, ix) => (\n                <MenuItem key={ix} value={user}>\n                  <em>{user.email}</em>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <TextField\n          fullWidth\n          label=\"Raspberry ID\"\n          name=\"raspberryID\"\n          variant=\"outlined\"\n          placeholder=\"Raspberry ID\"\n          value={raspberryID}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleRaspberryIDChange}\n        />\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default MapRaspberryPopup;\n\nconst MappingsListItem = ({ item, user, onDelete }) => {\n  const classes = useStyles();\n\n  const deleteMapping = () => {\n    onDelete(item);\n  };\n\n  return (\n    <div className={classes.boxik}>\n      <div>\n        {user && (\n          <span className={classes.columns}>User Email: {user.email}</span>\n        )}\n        <span className={classes.columns}>User ID: {item.userId}</span>\n        <span className={classes.columns}>\n          Raspberry ID: {item.raspberryId}\n        </span>\n        <span className={classes.columns}>Session ID: {item.session_id}</span>\n      </div>\n      <Button className={classes.deleteButton} onClick={deleteMapping}>\n        X\n      </Button>\n    </div>\n  );\n};\nMappingsListItem.propTypes = {\n  item: PropTypes.object,\n  user: PropTypes.object,\n  onDelete: PropTypes.func,\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { loadDevices, loadSessionLogs } from \"../../state/actions/devices\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  boxik: {\n    color: \"black\",\n    background: \"white\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n      borderColor: \"black\",\n      cursor: \"pointer\",\n    },\n  },\n  circle: {\n    marginLeft: \"5px\",\n    width: \"25px\",\n    height: \"25px\",\n    webkitBorderRadius: \"15px\",\n    mozBorderradius: \"15px\",\n    borderRadius: \"15px\",\n  },\n  connectionText: {\n    verticalAlign: \"center\",\n    marginTop: \"auto\",\n    marginBottom: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst DevicesPopup = () => {\n  const devices = useSelector((store) => store.devices.devices);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDevices());\n  }, [dispatch]);\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Active sessions</h2>\n        {devices &&\n          devices.map((item) => (\n            <DevicePopupItem item={item} key={devices.indexOf(item)} />\n          ))}\n      </div>\n    </div>\n  );\n};\nexport default DevicesPopup;\nconst DevicePopupItem = ({ item }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const openLogs = () => {\n    dispatch(loadSessionLogs(item.session_id));\n  };\n\n  return (\n    <div className={classes.boxik} onClick={openLogs}>\n      <div>Raspberry ID: {item.raspberryId}</div>\n      <div>Session ID: {item.session_id === \"\" ? \"N/A\" : item.session_id}</div>\n      <div>User ID: {item.userId === \"\" ? \"N/A\" : item.userId}</div>\n      <div\n        style={{\n          display: \"flex\",\n        }}\n      >\n        <span className={classes.connectionText}>Is User Connected:</span>\n        <div\n          className={classes.circle}\n          style={{\n            background: item.is_user_connected ? \"green\" : \"red\",\n          }}\n        ></div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n        }}\n      >\n        <span className={classes.connectionText}>Is Raspberry Connected:</span>\n        <div\n          className={classes.circle}\n          style={{\n            background: item.is_device_connected ? \"green\" : \"red\",\n          }}\n        ></div>\n      </div>\n      <div>Update at: {item.updated_at}</div>\n    </div>\n  );\n};\nDevicePopupItem.propTypes = {\n  item: PropTypes.object,\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { closePopup, showDevicesPopup } from \"../../state/actions/popups\";\nimport { loadSessionLogs } from \"../../state/actions/devices\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  backButton: {\n    height: \"35px\",\n    color: \"white\",\n    background: \"black\",\n    fontSize: \"1em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"#FFFFFF\",\n    borderWidth: \"1px\",\n    margin: \"0px auto 5px auto\",\n    borderStyle: \"solid\",\n    \"&:hover\": {\n      color: \"black\",\n      background: \"white\",\n      borderColor: \"black\",\n    },\n  },\n  box: {\n    minHeight: \"500px\",\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  boxik: {\n    color: \"black\",\n    background: \"white\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n  },\n  picker: {\n    fontSize: \"20px\",\n    marginBottom: \"5px\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst SessionLogsPopup = () => {\n  const [startDate, setStartDate] = React.useState(\n    new Date(new Date().getTime() - 24 * 60 * 60 * 1000)\n  );\n  const [endDate, setEndDate] = React.useState(new Date());\n  const sessionData = useSelector((store) => store.devices.sessionData);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const goBack = () => {\n    dispatch(showDevicesPopup());\n  };\n\n  const loadLogs = (date) => {\n    setStartDate(date);\n    if (sessionData !== undefined && date < endDate) {\n      dispatch(loadSessionLogs(sessionData.device_id, date, endDate));\n    }\n  };\n\n  const endDateSelected = (date) => {\n    setEndDate(date);\n    if (sessionData !== undefined && startDate < date) {\n      dispatch(loadSessionLogs(sessionData.device_id, startDate, date));\n    }\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <Button className={classes.backButton} onClick={goBack}>\n          GO BACK\n        </Button>\n        <h2 className={classes.header}>Session logs</h2>\n        <div>\n          Pick Start Date:\n          <DatePicker\n            className={classes.picker}\n            selected={startDate}\n            onChange={loadLogs}\n          />\n        </div>\n        <div>\n          Pick End Date:\n          <DatePicker\n            className={classes.picker}\n            selected={endDate}\n            onChange={endDateSelected}\n          />\n        </div>\n        {sessionData && (\n          <div>\n            <div>Device ID: {sessionData.device_id}</div>\n            <div>Start: {sessionData.period.start}</div>\n            <div>End: {sessionData.period.end}</div>\n          </div>\n        )}\n\n        {sessionData &&\n          sessionData.sessions.map((item) => (\n            <SessionLogsPopupItem\n              item={item}\n              key={sessionData.sessions.indexOf(item)}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\nexport default SessionLogsPopup;\nconst SessionLogsPopupItem = ({ item }) => {\n  return (\n    <div>\n      {item && (\n        <div>\n          <div>Session ID: {item.session_id}</div>\n          <div>User ID: {item.user_id}</div>\n        </div>\n      )}\n      {item &&\n        item.data.map((dataItem) => (\n          <SessionLogsPopupDataItem\n            dataItem={dataItem}\n            key={item.data.indexOf(dataItem)}\n          />\n        ))}\n    </div>\n  );\n};\nSessionLogsPopupItem.propTypes = {\n  item: PropTypes.object,\n};\nconst SessionLogsPopupDataItem = ({ dataItem }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.boxik}>\n      <div>Table ID: {dataItem.tableId}</div>\n      <div>Cells Row ID: {dataItem.cellsRowId}</div>\n      <div>Row Index: {dataItem.rowIndex}</div>\n      <div>Column Index: {dataItem.columnIndex}</div>\n      <div>Created at: {dataItem.created_at}</div>\n    </div>\n  );\n};\nSessionLogsPopupDataItem.propTypes = {\n  dataItem: PropTypes.object,\n};\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {\n  makeStyles,\n  FormControl,\n  Select,\n  InputLabel,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { closePopup } from \"../../state/actions/popups\";\nimport { getUserTables, deleteUserTable } from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  boxik: {\n    display: \"flex\",\n    color: \"black\",\n    background: \"white\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n  },\n  columns: {\n    display: \"flex\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    fontWeight: \"bold\",\n    marginLeft: \"auto\",\n    fontSize: \"20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst UserTablesPopup = () => {\n  const [shouldUpdate, setShouldUpdate] = React.useState(false);\n  const [selectedUser, setSelectedUser] = React.useState(undefined);\n  const [oldUserTables, setOldUserTables] = React.useState([]);\n  const users = useSelector((store) => store.user.users);\n  const userTables = useSelector((store) => store.popups.userTables);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (userTables.length !== oldUserTables.length) {\n      setShouldUpdate(!shouldUpdate);\n      setOldUserTables(userTables);\n    }\n  }, [userTables.length, oldUserTables.length, userTables, shouldUpdate]);\n\n  const handleChange = (event) => {\n    setSelectedUser(event.target.value);\n    dispatch(getUserTables(event.target.value));\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleDelete = (item) => {\n    dispatch(deleteUserTable(item.id, selectedUser.id));\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Delete User Tables</h2>\n        {shouldUpdate && <span></span>}\n        <div>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"label\">User</InputLabel>\n            <Select\n              id=\"demo-simple-select-helper\"\n              value={selectedUser || \"\"}\n              label=\"User\"\n              onChange={handleChange}\n            >\n              {users.map((user, ix) => (\n                <MenuItem key={ix} value={user}>\n                  <em>{user.email}</em>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        {userTables &&\n          userTables.map((item) => (\n            <UserTablesListItem\n              item={item}\n              user={users.find((e) => e.id === item.userId)}\n              key={userTables.indexOf(item)}\n              onDelete={handleDelete}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\nexport default UserTablesPopup;\n\nconst UserTablesListItem = ({ item, onDelete }) => {\n  const classes = useStyles();\n\n  const deleteTable = () => {\n    onDelete(item);\n  };\n\n  return (\n    <div className={classes.boxik}>\n      <div>\n        <span className={classes.columns}>Table Name: {item.name}</span>\n        <span className={classes.columns}>Table ID: {item.id}</span>\n        <span className={classes.columns}>Table Order: {item.tableOrder}</span>\n      </div>\n      <Button className={classes.deleteButton} onClick={deleteTable}>\n        X\n      </Button>\n    </div>\n  );\n};\nUserTablesListItem.propTypes = {\n  item: PropTypes.object,\n  onDelete: PropTypes.func,\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TablesList from \"../tables_list/TablesList\";\nimport Table from \"../table/Table\";\nimport TableInfoPopup from \"../popup/TableInfoPopup\";\nimport ActionCellPopup from \"../popup/ActionCellPopup\";\nimport NoTypeCellPopup from \"../popup/NoTypeCellPopup\";\nimport InfoCellPopup from \"../popup/InfoCellPopup\";\nimport EmptyCellPopup from \"../popup/EmptyCellPopup\";\nimport ImageCellPopup from \"../popup/ImageCellPopup\";\nimport FormatCellsPopup from \"../popup/FormatCellsPopup\";\nimport AddToUserPopup from \"../popup/AddToUserPopup\";\nimport MapRaspberryPopup from \"../popup/MapRaspberryPopup\";\nimport DevicesPopup from \"../popup/DevicesPopup\";\nimport SessionLogsPopup from \"../popup/SessionLogsPopup\";\nimport UserTablesPopup from \"../popup/UserTablesPopup\";\n\nconst Home = () => {\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const isCreateTablePopupOpen = useSelector(\n    (store) => store.popups.createTablePopupOpen\n  );\n  const isActionCellPopupOpen = useSelector(\n    (store) => store.popups.actionPopupOpen\n  );\n  const isEmptyCellPopupOpen = useSelector(\n    (store) => store.popups.emptyCellPopupOpen\n  );\n  const isInfoCellPopupOpen = useSelector(\n    (store) => store.popups.infoPopupOpen\n  );\n  const noTypeCellPopupOpen = useSelector(\n    (store) => store.popups.noTypePopupOpen\n  );\n  const imageCellPopupOpen = useSelector(\n    (store) => store.popups.imagePopupOpen\n  );\n  const formatCellsPopupOpen = useSelector(\n    (store) => store.popups.formatCellsPopupOpen\n  );\n  const addToUserPopupOpen = useSelector(\n    (store) => store.popups.addToUserPopupOpen\n  );\n  const raspberryPopupOpen = useSelector(\n    (store) => store.popups.raspberryPopupOpen\n  );\n  const devicesPopupOpen = useSelector(\n    (store) => store.popups.devicesPopupOpen\n  );\n  const sessionLogsPopupOpen = useSelector(\n    (store) => store.popups.sessionLogsPopupOpen\n  );\n  const isUserTablesPopupOpen = useSelector(\n    (store) => store.popups.userTablesPopupOpen\n  );\n  const user = useSelector((store) => store.user.user);\n\n  const history = useHistory();\n\n  const popupOpened = () => {\n    window.scrollTo(0, 0);\n    disableBodyScroll(document);\n  };\n\n  sessionLogsPopupOpen ||\n  devicesPopupOpen ||\n  isCreateTablePopupOpen ||\n  isActionCellPopupOpen ||\n  isInfoCellPopupOpen ||\n  imageCellPopupOpen ||\n  isEmptyCellPopupOpen ||\n  noTypeCellPopupOpen ||\n  formatCellsPopupOpen ||\n  addToUserPopupOpen ||\n  raspberryPopupOpen ||\n  isUserTablesPopupOpen\n    ? popupOpened()\n    : enableBodyScroll(document);\n\n  useEffect(() => {\n    if (user === undefined || user.role !== \"admin\") {\n      history.push(\"/\");\n    }\n    window.scrollTo(0, 0);\n  }, [user, history]);\n\n  return (\n    <Container\n      style={{\n        padding: \"10px\",\n        width: \"100%\",\n        display: \"inline-flex\",\n        flexDirection: \"row\",\n        maxWidth: \"1400px\",\n      }}\n    >\n      <TablesList />\n      {selectedTable === undefined ? (\n        <h2 style={{ flex: 1, textAlign: \"center\" }}>Please select a table</h2>\n      ) : (\n        <Table table={selectedTable} />\n      )}\n      {isCreateTablePopupOpen && <TableInfoPopup />}\n      {isEmptyCellPopupOpen && <EmptyCellPopup />}\n      {isActionCellPopupOpen && <ActionCellPopup />}\n      {isInfoCellPopupOpen && <InfoCellPopup />}\n      {noTypeCellPopupOpen && <NoTypeCellPopup />}\n      {imageCellPopupOpen && <ImageCellPopup />}\n      {formatCellsPopupOpen && <FormatCellsPopup />}\n      {addToUserPopupOpen && <AddToUserPopup />}\n      {raspberryPopupOpen && <MapRaspberryPopup />}\n      {devicesPopupOpen && <DevicesPopup />}\n      {sessionLogsPopupOpen && <SessionLogsPopup />}\n      {isUserTablesPopupOpen && <UserTablesPopup />}\n    </Container>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { closeSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nconst AppSnackbar = () => {\n  const classes = useStyles();\n  const open = useSelector((store) => store.snackbar.open);\n  const message = useSelector((store) => store.snackbar.message);\n  const dispatch = useDispatch();\n\n  if (!open) {\n    return null;\n  }\n\n  const close = () => {\n    dispatch(closeSnackbar());\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      open={open}\n      autoHideDuration={5000}\n      onClose={close}\n      message={<span>{message}</span>}\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={close}\n        >\n          <CloseIcon />\n        </IconButton>,\n      ]}\n    />\n  );\n};\n\nexport default AppSnackbar;\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button, Card, TextField, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signIn } from \"../../state/actions/user\";\n\nconst useStyles = makeStyles({\n  title: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: \"bold\",\n  },\n  container: {\n    background: \"white\",\n    borderRadius: \"10px\",\n    maxWidth: \"500px\",\n    alignContent: \"center\",\n    padding: \"10px\",\n    display: \"flex\",\n    marginTop: \"30px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    margin: \"10px\",\n    minWidth: \"200px\",\n    background: \"green\",\n    fontWeight: \"bold\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SignIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const user = useSelector((store) => store.user.user);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user !== undefined) {\n      history.push(\"/home\");\n    }\n  }, [user, history]);\n\n  const handleSubmit = () => {\n    dispatch(signIn({ email, password }));\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <Card className={classes.container}>\n      <Typography className={classes.title}>Sign In</Typography>\n      <TextField\n        required\n        fullWidth\n        name=\"email\"\n        variant=\"outlined\"\n        placeholder=\"Email\"\n        value={email}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handleEmailChange}\n      />\n      <TextField\n        required\n        fullWidth\n        name=\"password\"\n        variant=\"outlined\"\n        placeholder=\"Password\"\n        value={password}\n        type={\"password\"}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handlePasswordChange}\n      />\n      <Button className={classes.button} onClick={handleSubmit}>\n        Submit\n      </Button>\n    </Card>\n  );\n};\nexport default SignIn;\n","import \"./App.css\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Home from \"./components/home/Home\";\nimport AppSnackbar from \"./components/popup/AppSnackbar\";\nimport SignIn from \"./components/sign-in/SignIn\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <CssBaseline />\n      <div\n        style={{\n          minHeight: \"100vh\",\n          width: \"100%\",\n          margin: \"0px\",\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/home\" component={Home} />\n          <Route path=\"/\" component={SignIn} />\n        </Switch>\n      </div>\n      <AppSnackbar />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nconst initialState = {\n  open: false,\n  message: \"\",\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SHOW_SNACKBAR: {\n      return { ...state, open: true, message: action.message };\n    }\n    case CLOSE_SNACKBAR: {\n      return { ...state, open: false, message: \"\" };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\n\nconst initialState = {\n  tables: [],\n  selectedTable: undefined,\n  tableJustCreated: false,\n  bigImage: undefined,\n  bigImageCell: undefined,\n  error: undefined,\n};\n\nexport default function tablesReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case GET_TABLES: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case REMOVE_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: undefined,\n        bigImageCell: undefined,\n        error: undefined,\n      };\n    }\n    case SET_TABLE_JUST_CREATED_FALSE: {\n      return {\n        ...state,\n        tableJustCreated: false,\n      };\n    }\n    case GET_TABLES_SUCCESS: {\n      return { ...state, tables: action.tables };\n    }\n    case GET_TABLES_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case ADD_TABLE: {\n      const newTables = state.tables;\n      newTables.push(action.table);\n      return {\n        ...state,\n        tableJustCreated: true,\n        selectedTable: action.table,\n        tables: newTables,\n      };\n    }\n    case SET_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: action.image,\n        bigImageCell: action.cell,\n      };\n    }\n    case SET_SELECTED_TABLE: {\n      return {\n        ...state,\n        selectedTable: action.table,\n        bigImage: undefined,\n        bigImageCell: undefined,\n      };\n    }\n    case DELETE_TABLE: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case DELETE_TABLE_SUCCESS: {\n      const newTables = state.tables;\n      state.tables.forEach((table) => {\n        if (table.id === action.id) {\n          newTables.remove(table);\n        }\n      });\n      return {\n        ...state,\n        selectedTable: undefined,\n        tables: newTables,\n      };\n    }\n    case DELETE_TABLE_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n} from \"../actionTypes/cell\";\nimport {\n  SHOW_RASP_POPUP,\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  SUBMIT_NO_TYPE_POPUP,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CUSTOM_CELLS_SUBMITED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n  SHOW_ADD_TO_USER_POPUP,\n  SHOW_DEVICES_POPUP,\n  SHOW_SESSION_LOGS_POPUP,\n  SHOW_CREATE_TABLE_POPUP,\n  SHOW_USER_TABLES_POPUP,\n  GET_USER_TABLES_SUCCESS,\n  DELETE_USER_TABLE_SUCCESS,\n} from \"../actionTypes/popups\";\n\nconst initialState = {\n  createTablePopupOpen: false,\n  sessionLogsPopupOpen: false,\n  devicesPopupOpen: false,\n  raspberryPopupOpen: false,\n  actionPopupOpen: false,\n  infoPopupOpen: false,\n  noTypePopupOpen: false,\n  emptyCellPopupOpen: false,\n  imagePopupOpen: false,\n  formatCellsPopupOpen: false,\n  addToUserPopupOpen: false,\n  userTablesPopupOpen: false,\n  cell: undefined,\n  cellsRow: undefined,\n  cellFile: undefined,\n  cellNameFile: undefined,\n  cellImageFile: undefined,\n  cellToUpdate: undefined,\n  cellToUpdateCustomCells: undefined,\n  letsUpdate: false,\n  cellsRowsToDuplicate: undefined,\n  userTables: [],\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case DELETE_USER_TABLE_SUCCESS: {\n      const newTables = state.userTables;\n      state.userTables.forEach((table) => {\n        if (table.id === action.id) {\n          newTables.remove(table);\n        }\n      });\n      return { ...state, userTables: newTables };\n    }\n    case GET_USER_TABLES_SUCCESS: {\n      return { ...state, userTables: action.data };\n    }\n    case SHOW_SESSION_LOGS_POPUP: {\n      return {\n        ...state,\n        sessionLogsPopupOpen: true,\n        devicesPopupOpen: false,\n      };\n    }\n    case SHOW_DEVICES_POPUP: {\n      return {\n        ...state,\n        sessionLogsPopupOpen: false,\n        devicesPopupOpen: true,\n      };\n    }\n    case SHOW_RASP_POPUP: {\n      return {\n        ...state,\n        raspberryPopupOpen: true,\n      };\n    }\n    case CANCEL_CUSTOM_CELLS: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case CUSTOM_CELLS_SUBMITED: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SHOW_ACTION_POPUP: {\n      return {\n        ...state,\n        actionPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case BEGIN_CUSTOM_SELECT: {\n      return {\n        ...state,\n        actionPopupOpen: false,\n        cellToUpdate: action.cell,\n        cellToUpdateCustomCells: [],\n      };\n    }\n    case CELL_TO_UPDATE_CUSTOM_CELL_SELECTED: {\n      const cells = state.cellToUpdateCustomCells;\n      if (cells.includes(action.cell)) {\n        const index = cells.indexOf(action.cell);\n        cells.splice(index, 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        cellToUpdateCustomCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SHOW_ADD_TO_USER_POPUP: {\n      return {\n        ...state,\n        addToUserPopupOpen: true,\n      };\n    }\n    case SUBMIT_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: false,\n        actionPopupOpen: action.isAction,\n        infoPopupOpen: !action.isAction,\n      };\n    }\n    case SHOW_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_EMPTY_CELL_POPUP: {\n      return {\n        ...state,\n        emptyCellPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_IMAGE_CELL_POPUP: {\n      if (action.cell !== undefined) {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n          cell: action.cell,\n          cellsRow: action.cellsRow,\n        };\n      } else {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n        };\n      }\n    }\n    case SHOW_INFO_POPUP: {\n      return {\n        ...state,\n        infoPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_FORMAT_CELLS_POPUP: {\n      return {\n        ...state,\n        formatCellsPopupOpen: true,\n      };\n    }\n    case SHOW_CREATE_TABLE_POPUP: {\n      return {\n        ...state,\n        createTablePopupOpen: true,\n        cellsRowsToDuplicate: action.cellsRows,\n      };\n    }\n    case SHOW_USER_TABLES_POPUP: {\n      return {\n        ...state,\n        userTablesPopupOpen: true,\n      };\n    }\n    case CLOSE_POPUP: {\n      return {\n        ...state,\n        sessionLogsPopupOpen: false,\n        devicesPopupOpen: false,\n        raspberryPopupOpen: false,\n        infoPopupOpen: false,\n        actionPopupOpen: false,\n        noTypePopupOpen: false,\n        emptyCellPopupOpen: false,\n        userTablesPopupOpen: false,\n        imagePopupOpen: false,\n        formatCellsPopupOpen: false,\n        addToUserPopupOpen: false,\n        createTablePopupOpen: false,\n        cell: undefined,\n        cellsRow: undefined,\n        cellFile: undefined,\n        cellNameFile: undefined,\n        cellImageFile: undefined,\n        cellsRowsToDuplicate: undefined,\n        userTables: [],\n      };\n    }\n    case GET_CELL_NAME_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellNameFile: action.file,\n      };\n    }\n    case GET_CELL_IMAGE_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellImageFile: action.file,\n      };\n    }\n    case GET_CELL_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellFile: action.file,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  CLEAR_CELLS_ROWS,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n  ADD_SELECTING_ALL_CELLS,\n  ADD_SELECTING_ROW_CELLS,\n} from \"../actionTypes/cellsRows\";\nimport { UPDATE_CELL_SUCCESS } from \"../actionTypes/cell\";\nconst initialState = {\n  cellsRows: [],\n  selectedCells: undefined,\n  error: undefined,\n  letsUpdate: false,\n  isSelecting: false,\n};\n\nexport default function cellsRowsReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case UPDATE_CELL_SUCCESS: {\n      let rowIndex;\n      let cellIndex;\n      state.cellsRows.forEach((cellsRow) => {\n        cellsRow.cells.forEach((cell) => {\n          if (\n            cell.columnIndex === action.cell.columnIndex &&\n            cell.rowIndex === action.cell.rowIndex\n          ) {\n            rowIndex = state.cellsRows.indexOf(cellsRow);\n            cellIndex = cellsRow.cells.indexOf(cell);\n          }\n        });\n      });\n      state.cellsRows[rowIndex].cells[cellIndex] = action.cell;\n      return { ...state, error: undefined };\n    }\n    case BEGIN_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: true,\n        selectedCells: [],\n      };\n    }\n    case ADD_SELECTING_ROW_CELLS: {\n      var cells = state.selectedCells;\n      state.cellsRows[action.rowIndex].cells.forEach((e) => {\n        if (!cells.includes(e)) {\n          cells.push(e);\n        } else {\n          cells.splice(cells.indexOf(e), 1);\n        }\n      });\n      return { ...state, selectedCells: cells, letsUpdate: !state.letsUpdate };\n    }\n    case ADD_SELECTING_ALL_CELLS: {\n      const cells = [];\n      state.cellsRows.forEach((e) => {\n        cells.push(...e.cells);\n      });\n      return { ...state, selectedCells: cells, letsUpdate: !state.letsUpdate };\n    }\n    case STOP_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: false,\n        selectedCells: undefined,\n      };\n    }\n    case ADD_SELECTING_CELL: {\n      const cells = state.selectedCells;\n      if (cells.includes(action.cell)) {\n        cells.splice(cells.indexOf(action.cell), 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        selectedCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case GET_CELLS_ROWS: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case GET_CELLS_ROWS_SUCCESS: {\n      action.data.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return { ...state, cellsRows: action.data };\n    }\n    case UPDATE_CELLS_ROWS: {\n      action.cellsRows.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return {\n        ...state,\n        cellsRows: action.cellsRows,\n        selectedCells: undefined,\n        isSelecting: false,\n      };\n    }\n    case GET_CELLS_ROWS_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case CLEAR_CELLS_ROWS: {\n      return {\n        ...state,\n        cellsRows: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  SIGN_IN,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAILED,\n  GET_USERS_SUCCESS,\n  ADD_TABLE_TO_USER,\n  ADD_TABLE_TO_USER_SUCCESS,\n  ADD_TABLE_TO_USER_FAILED,\n} from \"../actionTypes/user\";\n\nconst initialState = {\n  user: undefined,\n  users: [],\n  error: false,\n};\n\nexport default function userReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ADD_TABLE_TO_USER_FAILED:\n    case ADD_TABLE_TO_USER_SUCCESS:\n    case ADD_TABLE_TO_USER: {\n      return { ...state };\n    }\n    case SIGN_IN: {\n      return { ...state, error: false };\n    }\n    case SIGN_IN_SUCCESS: {\n      return { ...state, user: action.user };\n    }\n    case SIGN_IN_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case GET_USERS_SUCCESS: {\n      return { ...state, users: action.data };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  LOAD_DEVICES,\n  LOAD_DEVICES_SUCCESS,\n  LOAD_MAPPINGS,\n  LOAD_MAPPINGS_SUCCESS,\n  ADD_RASP_TO_USER,\n  ADD_RASP_TO_USER_SUCCESS,\n  DELETE_MAPPING,\n  DELETE_MAPPING_SUCCESS,\n  LOAD_SESSION_LOGS,\n  LOAD_SESSION_LOGS_SUCCESS,\n} from \"../actionTypes/devices\";\n\nconst initialState = {\n  devices: [],\n  mappings: [],\n  sessionData: undefined,\n};\n\nexport default function devicesReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case LOAD_SESSION_LOGS: {\n      return { ...state };\n    }\n    case LOAD_SESSION_LOGS_SUCCESS: {\n      return { ...state, sessionData: action.sessionData };\n    }\n    case ADD_RASP_TO_USER: {\n      return { ...state };\n    }\n    case ADD_RASP_TO_USER_SUCCESS: {\n      return { ...state };\n    }\n    case DELETE_MAPPING: {\n      return { ...state };\n    }\n    case DELETE_MAPPING_SUCCESS: {\n      return {\n        ...state,\n        mappings: state.mappings.filter(\n          (item) => item.id !== action.mapping.id\n        ),\n      };\n    }\n    case LOAD_MAPPINGS: {\n      return { ...state };\n    }\n    case LOAD_MAPPINGS_SUCCESS: {\n      return { ...state, mappings: action.mappings };\n    }\n    case LOAD_DEVICES: {\n      return { ...state };\n    }\n    case LOAD_DEVICES_SUCCESS: {\n      return { ...state, devices: action.devices };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport snackbar from \"./snackbar\";\nimport tables from \"./tables\";\nimport popups from \"./popups\";\nimport cellsRows from \"./cellsRows\";\nimport user from \"./user\";\nimport devices from \"./devices\";\n\nexport default combineReducers({\n  snackbar,\n  tables,\n  popups,\n  cellsRows,\n  user,\n  devices,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport reducers from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/* eslint-enable */\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\"],\n};\nconst pReducer = persistReducer(persistConfig, reducers);\n\nconst store = createStore(\n  pReducer,\n  compose(applyMiddleware(thunk), composeEnhancers())\n);\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./state/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}