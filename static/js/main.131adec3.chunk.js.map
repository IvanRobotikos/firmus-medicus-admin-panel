{"version":3,"sources":["state/actionTypes/tables.js","firebase.js","common/CellFunctions.js","state/actionTypes/cellsRows.js","state/actions/cellsRows.js","state/actionTypes/popups.js","state/actions/popups.js","components/tables_list/TablesListItem.js","state/actions/tables.js","components/tables_list/TablesList.js","components/table/cells/EmptyCell.js","components/table/cells/Cell.js","components/table/CellsRow.js","state/actionTypes/cell.js","state/actions/cell.js","components/table/utils/SelectedCellsInfo.js","components/table/utils/BigImage.js","components/table/utils/RemoveBigImage.js","components/table/utils/SelectedCellsFormat.js","components/table/Table.js","components/popup/TableInfoPopup.js","components/popup/ActionCellPopup.js","components/popup/NoTypeCellPopup.js","state/actionTypes/snackbar.js","state/actions/snackbar.js","components/popup/InfoCellPopup.js","components/popup/EmptyCellPopup.js","components/popup/ImageCellPopup.js","components/popup/FormatCellsPopup.js","components/home/Home.js","components/popup/AppSnackbar.js","state/actionTypes/user.js","components/sign-in/SignIn.js","state/actions/user.js","App.js","serviceWorker.js","state/reducers/snackbar.js","state/reducers/tables.js","state/reducers/popups.js","state/reducers/cellsRows.js","state/reducers/user.js","state/reducers/index.js","state/store.js","index.js"],"names":["GET_TABLES","GET_TABLES_SUCCESS","GET_TABLES_FAILED","ADD_TABLE","DELETE_TABLE","DELETE_TABLE_SUCCESS","DELETE_TABLE_FAILED","SET_SELECTED_TABLE","SET_BIG_IMAGE","SET_TABLE_JUST_CREATED_FALSE","REMOVE_BIG_IMAGE","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","auth","getEmptyTableCells","tableId","data","push","rowIndex","cells","getNoTypeCell","getEmptyCell","getFirstEmptyRow","i","getEmptyRow","columnIndex","type","color","topBorder","leftBorder","rightBorder","bottomBorder","GET_CELLS_ROWS","GET_CELLS_ROWS_SUCCESS","GET_CELLS_ROWS_FAILED","CLEAR_CELLS_ROWS","ADD_SELECTING_CELL","BEGIN_FORMAT_SELECTING","STOP_FORMAT_SELECTING","UPDATE_CELLS_ROWS","getCellsRows","dispatch","a","collection","doc","get","then","snapshot","forEach","cellsRow","id","e","error","sendUpdateRowRequest","row","update","getFormattedRow","cell","mirrorCell","cellIndex","indexOf","cancelIsSelecting","SHOW_ACTION_POPUP","CLOSE_POPUP","SHOW_INFO_POPUP","SHOW_NO_TYPE_POPUP","SHOW_IMAGE_CELL_POPUP","SHOW_EMPTY_CELL_POPUP","SUBMIT_NO_TYPE_POPUP","BEGIN_CUSTOM_SELECT","CELL_TO_UPDATE_CUSTOM_CELL_SELECTED","CUSTOM_CELLS_SUBMITED","CANCEL_CUSTOM_CELLS","SHOW_FORMAT_CELLS_POPUP","cancelCustomCells","showImagePopup","closePopup","useStyles","makeStyles","buttonNormal","fontSize","textTransform","borderRadius","borderColor","borderWidth","margin","whiteSpace","borderStyle","padding","background","buttonSelected","cursos","TablesListItem","item","selectedTable","useSelector","store","tables","useState","isSelected","setIsSelected","classes","useDispatch","useEffect","Button","onClick","table","className","name","card","display","flexDirection","minHeight","maxWidth","flex","iconmenubutton","height","text","textAlign","TablesList","showTableNamePopup","ref","Card","map","width","verticalAlign","EmptyCell","undefined","bigImagePath","getDownloadURL","image","catch","console","log","setBigImage","showEmptyCellPopup","props","borderLeftWidth","left","borderRightWidth","right","borderTopWidth","top","borderBottomWidth","bottom","borderTopColor","isCustomCell","borderRightColor","borderLeftColor","borderBottomColor","borderLeftStyle","borderRightStyle","borderTopStyle","borderBottomStyle","alignContent","justifyContent","lineHeight","fontWeight","Cell","cellToUpdate","popups","isSelecting","cellsRows","addSelectingCell","cellToUpdateCustomCellSelected","showNoTypePopup","showInfoPopup","showActionPopup","sumAll","style","marginLeft","marginRight","src","alt","split","ix","CellsRow","cellToUpdateCustomCells","selectedCells","cellsRowLetsUpdate","letsUpdate","sort","b","includes","UPDATE_CELL","UPDATE_CELL_SUCCESS","UPDATE_CELL_FAILED","GET_CELL_FILE_SUCCESS","GET_CELL_NAME_FILE_SUCCESS","GET_CELL_IMAGE_FILE_SUCCESS","updateCell","cellsRowId","newRow","element","container","marginBottom","marginTop","cont","border","submitButton","cancelButton","SelectedCellsInfo","customCells","convertCustomCells","join","length","BigImage","bigImage","bigImageCell","position","parseInt","bigImageTopMargin","bigImageHeight","bigImageLeftMargin","bigImageWidth","RemoveBigImage","description","cellContainer","deleteButton","formatButton","SelectedCellsFormat","Table","loading","setLoading","tableJustCreated","timeoutFinished","useCallback","setTimeout","size","CircularProgress","delete","deleteTable","popupbox","box","maxHeight","overflow","closeicon","content","cursor","button","TableInfoPopup","React","setName","setDescription","handleClose","TextField","required","fullWidth","label","variant","placeholder","value","onChange","event","target","multiline","rows","rowsMax","add","cellsRowValue","newCells","addTable","formControl","minWidth","header","noTypeButton","ActionCellPopup","setSumAll","setColor","setRows","actionType","setActionType","typeActionType","setTypeActionType","typeActionTypeName","setTypeActionTypeName","actionTypes","typeActionTypes","actionTypesNames","typeActionTypesNames","FormControlLabel","control","Checkbox","checked","labelPlacement","FormControl","InputLabel","Select","MenuItem","beginCustomSelect","makeEmptyButton","NoTypeCellPopup","isAction","setIsAction","submitNoTypePopup","SHOW_SNACKBAR","CLOSE_SNACKBAR","showSnackbar","message","quillContainer","editor","fileNameContainer","removeFileButton","borderInputcontainer","borderText","InfoCellPopup","typeForAction","setTypeForAction","file","setFile","nameFile","setNameFile","setTop","setBottom","setLeft","setRight","baseTen","setBaseTen","baseThree","setBaseThree","baseHundred","setBaseHundred","baseFour","setBaseFour","databaseID","setDatabaseID","cellFile","cellNameFile","filePath","nameFilePath","getMetadata","showError","msg","extensions","loadedFile","onError","theme","bluetoothContent","put","newCell","updateInfoCell","notypeButton","EmptyCellPopup","fileButton","ImageCellPopup","setWidth","setHeight","leftMargin","setLeftMargin","topMargin","setTopMargin","cellImageFile","updateImageCell","FormatCellsPopup","cellInfo","rowsToUpdate","cellsToUpdate","rowsForRequest","index","submitSelectingCells","Home","isNamePopupOpen","setIsNamePopupOpen","isActionCellPopupOpen","actionPopupOpen","isEmptyCellPopupOpen","emptyCellPopupOpen","isInfoCellPopupOpen","infoPopupOpen","noTypeCellPopupOpen","noTypePopupOpen","imageCellPopupOpen","imagePopupOpen","formatCellsPopupOpen","user","history","useHistory","window","scrollTo","disableBodyScroll","document","enableBodyScroll","role","toggleNamePopup","Container","close","spacing","AppSnackbar","open","snackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","SIGN_IN","SIGN_IN_SUCCESS","SIGN_IN_FAILED","title","alignItems","SignIn","email","setEmail","password","setPassword","Typography","signInWithEmailAndPassword","uid","dbUser","signIn","App","CssBaseline","exact","path","component","Boolean","location","hostname","match","initialState","combineReducers","state","newTables","remove","splice","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","whitelist","pReducer","persistReducer","reducers","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.131adec3.chunk.js","sourcesContent":["export const GET_TABLES = \"tables/GET_TABLES\";\nexport const GET_TABLES_SUCCESS = \"tables/GET_TABLES_SUCCESS\";\nexport const GET_TABLES_FAILED = \"tables/GET_TABLES_FAILED\";\nexport const ADD_TABLE = \"tables/ADD_TABLE\";\nexport const DELETE_TABLE = \"tables/DELETE_TABLE\";\nexport const DELETE_TABLE_SUCCESS = \"tables/DELETE_TABLE_SUCCESS\";\nexport const DELETE_TABLE_FAILED = \"tables/DELETE_TABLE_FAILED\";\nexport const SET_SELECTED_TABLE = \"tables/SET_SELECTED_TABLE\";\nexport const SET_BIG_IMAGE = \"tables/SET_BIG_IMAGE\";\nexport const SET_TABLE_JUST_CREATED_FALSE =\n  \"tables/SET_TABLE_JUST_CREATED_FALSE\";\nexport const REMOVE_BIG_IMAGE = \"tables/REMOVE_BIG_IMAGE\";\n","import firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBN83KPofzkMJ8I61kt8Fn8our5BSWfNjw\",\n  authDomain: \"firmus-medicus-a254b.firebaseapp.com\",\n  projectId: \"firmus-medicus-a254b\",\n  storageBucket: \"firmus-medicus-a254b.appspot.com\",\n  messagingSenderId: \"906887380621\",\n  appId: \"1:906887380621:web:d9ab0a949265376084ecc4\",\n  measurementId: \"G-506ZEGQVF1\",\n};\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const auth = firebase.auth();\n","export function getEmptyTableCells(tableId) {\n  const data = [];\n  data.push(getFirstEmptyRow(tableId));\n  for (let i = 1; i < 28; i++) {\n    data.push(getEmptyRow(i, tableId));\n  }\n  return data;\n}\nfunction getFirstEmptyRow(tableId) {\n  return {\n    tableId,\n    rowIndex: 0,\n    cells: [\n      getNoTypeCell(0, 0),\n      getNoTypeCell(0, 1),\n      getNoTypeCell(0, 2),\n      getNoTypeCell(0, 3),\n      getEmptyCell(4),\n      getEmptyCell(5),\n      getEmptyCell(6),\n      getNoTypeCell(0, 7),\n      getNoTypeCell(0, 8),\n      getNoTypeCell(0, 9),\n      getNoTypeCell(0, 10),\n    ],\n  };\n}\nfunction getEmptyRow(rowIndex, tableId) {\n  return {\n    tableId,\n    rowIndex,\n    cells: [\n      getNoTypeCell(rowIndex, 0),\n      getNoTypeCell(rowIndex, 1),\n      getNoTypeCell(rowIndex, 2),\n      getNoTypeCell(rowIndex, 3),\n      getNoTypeCell(rowIndex, 4),\n      getNoTypeCell(rowIndex, 5),\n      getNoTypeCell(rowIndex, 6),\n      getNoTypeCell(rowIndex, 7),\n      getNoTypeCell(rowIndex, 8),\n      getNoTypeCell(rowIndex, 9),\n      getNoTypeCell(rowIndex, 10),\n    ],\n  };\n}\nfunction getNoTypeCell(rowIndex, columnIndex) {\n  return {\n    type: \"notype\",\n    rowIndex,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"1\",\n    leftBorder: \"1\",\n    rightBorder: \"1\",\n    bottomBorder: \"1\",\n  };\n}\nfunction getEmptyCell(columnIndex) {\n  return {\n    type: \"empty\",\n    rowIndex: 0,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"1\",\n    leftBorder: \"1\",\n    rightBorder: \"1\",\n    bottomBorder: \"1\",\n  };\n}\n","export const GET_CELLS_ROWS = \"cellsRows/GET_CELLS_ROWS\";\nexport const GET_CELLS_ROWS_SUCCESS = \"cellsRows/GET_CELLS_ROWS_SUCCESS\";\nexport const GET_CELLS_ROWS_FAILED = \"cellsRows/GET_CELLS_ROWS_FAILED\";\nexport const CLEAR_CELLS_ROWS = \"cellsRows/CLEAR_CELLS_ROWS\";\nexport const ADD_SELECTING_CELL = \"cellsRows/ADD_SELECTING_CELL\";\nexport const BEGIN_FORMAT_SELECTING = \"cellsRows/BEGIN_FORMAT_SELECTING\";\nexport const STOP_FORMAT_SELECTING = \"cellsRows/STOP_FORMAT_SELECTING\";\nexport const SUBMIT_FORMAT_SELECTING = \"cellsRows/SUBMIT_FORMAT_SELECTING\";\nexport const UPDATE_CELLS_ROWS = \"cellsRows/UPDATE_CELLS_ROWS\";\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n} from \"../actionTypes/cellsRows\";\nimport { db } from \"../../firebase\";\n\nexport function getCellsRows(tableId) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELLS_ROWS });\n\n    try {\n      const ref = db.collection(\"tables\").doc(tableId).collection(\"cellsRows\");\n      ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((cellsRow) => {\n          data.push({ ...cellsRow.data(), id: cellsRow.id });\n        });\n        dispatch({ type: GET_CELLS_ROWS_SUCCESS, data: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELLS_ROWS_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function submitSelectingCells(cellInfo, cells, cellsRows) {\n  return async (dispatch) => {\n    const rowsToUpdate = [...cellsRows];\n    const cellsToUpdate = [];\n    const rowsForRequest = [];\n    cells.forEach((cell) => {\n      const newCell = {\n        ...cell,\n        color: cellInfo.color !== \"\" ? cellInfo.color : cell.color,\n        bottomBorder:\n          cellInfo.bottom !== \"\" ? cellInfo.bottom : cell.bottomBorder,\n        topBorder: cellInfo.top !== \"\" ? cellInfo.top : cell.topBorder,\n        leftBorder: cellInfo.left !== \"\" ? cellInfo.left : cell.leftBorder,\n        rightBorder: cellInfo.right !== \"\" ? cellInfo.right : cell.rightBorder,\n      };\n      cellsToUpdate.push(newCell);\n    });\n    cellsToUpdate.forEach((cell, index) => {\n      rowsToUpdate[cell.rowIndex] = getFormattedRow(\n        cell,\n        cells[index],\n        rowsToUpdate[cell.rowIndex]\n      );\n      if (!rowsForRequest.includes(cell.rowIndex)) {\n        rowsForRequest.push(cell.rowIndex);\n      }\n    });\n    rowsToUpdate.forEach((row) => {\n      if (rowsForRequest.includes(row.rowIndex)) {\n        sendUpdateRowRequest(row);\n      }\n    });\n    dispatch({ type: UPDATE_CELLS_ROWS, cellsRows: rowsToUpdate });\n  };\n}\n\nconst sendUpdateRowRequest = (row) => {\n  db.collection(\"tables\")\n    .doc(row.tableId)\n    .collection(\"cellsRows\")\n    .doc(row.id)\n    .update({ cells: row.cells });\n};\n\nconst getFormattedRow = (cell, mirrorCell, row) => {\n  const cellIndex = row.cells.indexOf(mirrorCell);\n  row.cells[cellIndex] = cell;\n  return row;\n};\n\nexport function addSelectingCell(cell) {\n  return async (dispatch) => {\n    dispatch({ type: ADD_SELECTING_CELL, cell });\n  };\n}\n\nexport function setIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_FORMAT_SELECTING });\n  };\n}\n\nexport function cancelIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: STOP_FORMAT_SELECTING });\n  };\n}\n","export const SHOW_ACTION_POPUP = \"popups/SHOW_ACTION_POPUP\";\nexport const CLOSE_POPUP = \"popups/CLOSE_ACTION_POPUP\";\nexport const SHOW_INFO_POPUP = \"popups/SHOW_INFO_POPUP\";\nexport const SHOW_NO_TYPE_POPUP = \"popups/SHOW_NO_TYPE_POPUP\";\nexport const SHOW_IMAGE_CELL_POPUP = \"popups/SHOW_IMAGE_CELL_POPUP\";\nexport const SHOW_EMPTY_CELL_POPUP = \"popups/SHOW_EMPTY_CELL_POPUP\";\nexport const SUBMIT_NO_TYPE_POPUP = \"popups/SUBMIT_NO_TYPE_POPUP\";\nexport const BEGIN_CUSTOM_SELECT = \"popups/BEGIN_CUSTOM_SELECT\";\nexport const CELL_TO_UPDATE_CUSTOM_CELL_SELECTED =\n  \"popups/CELL_TO_UPDATE_CUSTOM_CELL_SELECTED\";\nexport const CUSTOM_CELLS_SUBMITED = \"popups/CUSTOM_CELLS_SUBMITED\";\nexport const CANCEL_CUSTOM_CELLS = \"popups/CANCEL_CUSTOM_CELLS\";\nexport const SHOW_FORMAT_CELLS_POPUP = \"popups/SHOW_FORMAT_CELLS_POPUP\";\n","import {\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SUBMIT_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n} from \"../actionTypes/popups\";\n\nexport function beginCustomSelect(cell) {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_CUSTOM_SELECT, cell });\n  };\n}\n\nexport function cancelCustomCells() {\n  return async (dispatch) => {\n    dispatch({ type: CANCEL_CUSTOM_CELLS });\n  };\n}\n\nexport function cellToUpdateCustomCellSelected(cell) {\n  return async (dispatch) => {\n    dispatch({ type: CELL_TO_UPDATE_CUSTOM_CELL_SELECTED, cell });\n  };\n}\n\nexport function showFormatCellsPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_FORMAT_CELLS_POPUP });\n  };\n}\n\nexport function showImagePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_IMAGE_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showActionPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_ACTION_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showEmptyCellPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_EMPTY_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function submitNoTypePopup(isAction) {\n  return async (dispatch) => {\n    dispatch({ type: SUBMIT_NO_TYPE_POPUP, isAction });\n  };\n}\n\nexport function showNoTypePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_NO_TYPE_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showInfoPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_INFO_POPUP, cell, cellsRow });\n  };\n}\n\nexport function closePopup() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { setSelectedTable } from \"../../state/actions/tables\";\nimport { cancelIsSelecting } from \"../../state/actions/cellsRows\";\nimport { cancelCustomCells } from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  buttonNormal: {\n    color: \"black\",\n    fontSize: \"1em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    whiteSpace: \"wrap\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  buttonSelected: {\n    color: \"white\",\n    background: \"black\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n      cursos: \"auto\",\n    },\n  },\n});\n\nconst TablesListItem = ({ item }) => {\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const [isSelected, setIsSelected] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsSelected(selectedTable && selectedTable.id === item.id);\n  }, [setIsSelected, selectedTable, item]);\n\n  const selectTable = () => {\n    dispatch(setSelectedTable(item));\n    dispatch(cancelIsSelecting());\n    dispatch(cancelCustomCells());\n  };\n\n  return (\n    <Button\n      onClick={isSelected ? null : selectTable}\n      className={isSelected ? classes.buttonSelected : classes.buttonNormal}\n    >\n      {item.name}\n    </Button>\n  );\n};\nTablesListItem.propTypes = {\n  item: PropTypes.object,\n};\nexport default TablesListItem;\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\nimport { db, storage } from \"../../firebase\";\nimport { getEmptyTableCells } from \"../../common/CellFunctions\";\n\nexport function removeBigImage() {\n  return async (dispatch) => {\n    dispatch({ type: REMOVE_BIG_IMAGE });\n  };\n}\n\nexport function getTables() {\n  return async (dispatch) => {\n    dispatch({ type: GET_TABLES });\n\n    try {\n      const ref = db.collection(\"tables\");\n      await ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((table) => {\n          data.push({ ...table.data(), id: table.id });\n        });\n        dispatch({ type: GET_TABLES_SUCCESS, tables: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_TABLES_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setTableJustCreatedFalse() {\n  return async (dispatch) => {\n    dispatch({\n      type: SET_TABLE_JUST_CREATED_FALSE,\n    });\n  };\n}\n\nexport function addTable(name, description) {\n  return async (dispatch) => {\n    const ref = db.collection(\"tables\");\n    await ref.add({ name, description }).then((table) => {\n      const cellsRows = getEmptyTableCells(table.id);\n      cellsRows.forEach((cellsRow) => {\n        ref\n          .doc(table.id)\n          .collection(\"cellsRows\")\n          .add({\n            tableId: cellsRow.tableId,\n            rowIndex: cellsRow.rowIndex,\n          })\n          .then((cellsRowValue) => {\n            const newCells = [];\n            cellsRow.cells.forEach((cell) =>\n              newCells.push({\n                ...cell,\n                tableId: table.id,\n                cellsRowId: cellsRowValue.id,\n              })\n            );\n            ref\n              .doc(table.id)\n              .collection(\"cellsRows\")\n              .doc(cellsRowValue.id)\n              .update({ cells: newCells });\n          });\n      });\n\n      dispatch({\n        type: ADD_TABLE,\n        table: { id: table.id, name, description },\n      });\n    });\n  };\n}\n\nexport function deleteTable(tableId, cellsRows) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_TABLE });\n    try {\n      var ref = db.collection(\"tables\").doc(tableId);\n      cellsRows.forEach((row) => {\n        ref.collection(\"cellsRows\").doc(row.id).delete();\n      });\n      ref.delete();\n      dispatch({ type: DELETE_TABLE_SUCCESS, tableId });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: DELETE_TABLE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setBigImage(cell) {\n  return async (dispatch) => {\n    storage\n      .ref(cell.bigImagePath)\n      .getDownloadURL()\n      .then((image) => {\n        dispatch({ type: SET_BIG_IMAGE, image, cell });\n      })\n      .catch(() => {\n        console.log(\"error\");\n      });\n  };\n}\n\nexport function setSelectedTable(table) {\n  return async (dispatch) => {\n    dispatch({ type: SET_SELECTED_TABLE, table });\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { Card, Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport TablesListItem from \"./TablesListItem\";\nimport { useEffect } from \"react\";\nimport { getTables } from \"../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    maxWidth: \"150px\",\n    flex: 1,\n  },\n  iconmenubutton: {\n    height: \"35px\",\n    color: \"black\",\n    fontSize: \"2em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"#FFFFFF\",\n    borderWidth: \"1px\",\n    margin: \"0px auto 5px auto\",\n    borderStyle: \"solid\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  text: {\n    textAlign: \"center\",\n    margin: \"5px\",\n  },\n});\n\nconst TablesList = ({ showTableNamePopup }) => {\n  const classes = useStyles();\n  const tables = useSelector((store) => store.tables.tables);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTables());\n  }, [dispatch]);\n\n  return (\n    <Card className={classes.card}>\n      <h3 className={classes.text}>Tables</h3>\n      <Button className={classes.iconmenubutton} onClick={showTableNamePopup}>\n        <AddIcon />\n      </Button>\n      {tables.map((item) => (\n        <TablesListItem item={item} key={tables.indexOf(item)} />\n      ))}\n    </Card>\n  );\n};\nTablesList.propTypes = {\n  showTableNamePopup: PropTypes.func,\n};\nexport default TablesList;\n","import { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {\n  showEmptyCellPopup,\n  showImagePopup,\n} from \"../../../state/actions/popups\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { setBigImage } from \"../../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  cell: {\n    height: \"50px\",\n    width: \"100px\",\n    display: \"table-cell\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n  },\n});\n\nconst EmptyCell = ({ cell, cellsRow }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell && cell.bigImagePath !== undefined) {\n      dispatch(setBigImage(cell));\n    }\n  }, [cell, dispatch]);\n\n  const action = () => {\n    if (cell.type === \"empty\") {\n      dispatch(showEmptyCellPopup(cell, cellsRow));\n    } else {\n      dispatch(showImagePopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.type === \"empty\" ? \"\" : \"image\"}\n    </div>\n  );\n};\nEmptyCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n};\nexport default EmptyCell;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  showActionPopup,\n  showInfoPopup,\n  showNoTypePopup,\n  cellToUpdateCustomCellSelected,\n} from \"../../../state/actions/popups\";\nimport { addSelectingCell } from \"../../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  cell: {\n    background: (props) => props.color,\n    borderLeftWidth: (props) => props.left + \"px\",\n    borderRightWidth: (props) => props.right + \"px\",\n    borderTopWidth: (props) => props.top + \"px\",\n    borderBottomWidth: (props) => props.bottom + \"px\",\n    borderTopColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderRightColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderLeftColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderBottomColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    height: \"50px\",\n    width: \"100px\",\n    borderLeftStyle: \"solid\",\n    borderRightStyle: \"solid\",\n    borderTopStyle: \"solid\",\n    borderBottomStyle: \"solid\",\n    alignContent: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    display: \"table-cell\",\n    verticalAlign: \"middle\",\n  },\n  text: {\n    fontSize: \"10px\",\n    margin: \"0px\",\n    lineHeight: \"1.1\",\n    fontWeight: \"bold\",\n  },\n});\n\nconst Cell = ({ cell, cellsRow, isCustomCell }) => {\n  const classes = useStyles({\n    left: cell.leftBorder,\n    right: cell.rightBorder,\n    top: cell.topBorder,\n    bottom: cell.bottomBorder,\n    color: cell.color,\n    isCustomCell,\n  });\n  const cellToUpdate = useSelector((store) => store.popups.cellToUpdate);\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const action = () => {\n    if (isSelecting) {\n      dispatch(addSelectingCell(cell));\n    } else if (cellToUpdate !== undefined) {\n      if (\n        !(\n          cellToUpdate.cell.columnIndex === cell.columnIndex &&\n          cellToUpdate.cell.rowIndex === cell.rowIndex\n        ) &&\n        cell.type === \"info\"\n      ) {\n        dispatch(cellToUpdateCustomCellSelected(cell));\n      }\n    } else if (cell.type === \"notype\") {\n      dispatch(showNoTypePopup(cell, cellsRow));\n    } else if (cell.type === \"info\") {\n      dispatch(showInfoPopup(cell, cellsRow));\n    } else if (cell.type === \"action\") {\n      dispatch(showActionPopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.sumAll && (\n        <img\n          style={{\n            width: \"25px\",\n            height: \"25px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n          src={\"/dao.png\"}\n          alt=\"all\"\n        />\n      )}\n      {cell.name &&\n        !cell.sumAll &&\n        cell.name.split(\"<br />\").map((text, ix) => (\n          <p className={classes.text} key={ix}>\n            {text}\n          </p>\n        ))}\n    </div>\n  );\n};\nCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n  isCustomCell: PropTypes.bool,\n};\nexport default Cell;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nimport EmptyCell from \"./cells/EmptyCell\";\nimport Cell from \"./cells/Cell\";\n\nconst useStyles = makeStyles({\n  row: {\n    display: \"table-row\",\n  },\n});\n\nconst CellsRow = ({ cellsRow }) => {\n  const classes = useStyles();\n  const cellToUpdateCustomCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRowLetsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  return (\n    <div className={classes.row}>\n      {letsUpdate && cellsRowLetsUpdate && <div></div>}\n      {cellsRow &&\n        cellsRow.cells &&\n        cellsRow.cells\n          .sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1))\n          .map((cell) =>\n            cell.type === \"empty\" || cell.type === \"image\" ? (\n              <EmptyCell\n                cell={cell}\n                cellsRow={cellsRow}\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            ) : (\n              <Cell\n                cell={cell}\n                cellsRow={cellsRow}\n                isCustomCell={\n                  (cellToUpdateCustomCells &&\n                    cellToUpdateCustomCells.includes(cell)) ||\n                  (selectedCells && selectedCells.includes(cell))\n                }\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            )\n          )}\n    </div>\n  );\n};\nCellsRow.propTypes = {\n  cellsRow: PropTypes.object,\n};\nexport default CellsRow;\n","export const UPDATE_CELL = \"cell/UPDATE_CELL\";\nexport const UPDATE_CELL_SUCCESS = \"cell/UPDATE_CELL_SUCCESS\";\nexport const UPDATE_CELL_FAILED = \"cell/UPDATE_CELL_FAILED\";\nexport const GET_CELL_FILE = \"cell/GET_CELL_FILE\";\nexport const GET_CELL_FILE_SUCCESS = \"cell/GET_CELL_FILE_SUCCESS\";\nexport const GET_CELL_FILE_FAILED = \"cell/GET_CELL_FILE_FAILED\";\nexport const GET_CELL_NAME_FILE = \"cell/GET_CELL_NAME_FILE\";\nexport const GET_CELL_NAME_FILE_SUCCESS = \"cell/GET_CELL_NAME_FILE_SUCCESS\";\nexport const GET_CELL_NAME_FILE_FAILED = \"cell/GET_CELL_NAME_FILE_FAILED\";\nexport const GET_CELL_IMAGE_FILE = \"cell/GET_CELL_IMAGE_FILE\";\nexport const GET_CELL_IMAGE_FILE_SUCCESS = \"cell/GET_CELL_IMAGE_FILE_SUCCESS\";\nexport const GET_CELL_IMAGE_FILE_FAILED = \"cell/GET_CELL_IMAGE_FILE_FAILED\";","import { db, storage } from \"../../firebase\";\nimport {\n  UPDATE_CELL,\n  UPDATE_CELL_SUCCESS,\n  UPDATE_CELL_FAILED,\n  GET_CELL_FILE,\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_FILE_FAILED,\n  GET_CELL_NAME_FILE,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_FAILED,\n  GET_CELL_IMAGE_FILE,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_FAILED,\n} from \"../actionTypes/cell\";\nimport { CLOSE_POPUP, CUSTOM_CELLS_SUBMITED } from \"../actionTypes/popups\";\n\nexport function updateCell(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== cell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(cell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell,\n      });\n      dispatch({ type: CUSTOM_CELLS_SUBMITED });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function updateImageCell(cell, file, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let bigImagePath =\n      \"/\" +\n      cell.tableId +\n      \"/\" +\n      cell.cellsRowId +\n      \"/\" +\n      cell.columnIndex +\n      \"/\" +\n      file.name;\n    await storage.ref(bigImagePath).put(file);\n    const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, bigImagePath };\n      console.log(newCell);\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        e,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function getCellImageFile(bigImagePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_IMAGE_FILE });\n    try {\n      storage\n        .ref(bigImagePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_IMAGE_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_IMAGE_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellNameFile(nameFilePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_NAME_FILE });\n    try {\n      storage\n        .ref(nameFilePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_NAME_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_NAME_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellFile(filePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_FILE });\n    try {\n      storage\n        .ref(filePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function updateInfoCell(cell, file, nameFile, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let filePath = \"\";\n      let nameFilePath = \"\";\n      if (file !== undefined) {\n        filePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          file.name;\n        await storage.ref(filePath).put(file);\n      } else if (cell.filePath && cell.filePath !== \"\") {\n        filePath = cell.filePath;\n      }\n      if (nameFile !== undefined) {\n        nameFilePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          nameFile.name;\n        await storage.ref(nameFilePath).put(nameFile);\n      } else if (cell.nameFilePath && cell.nameFilePath !== \"\") {\n        nameFilePath = cell.nameFilePath;\n      }\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, filePath, nameFilePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cancelCustomCells } from \"../../../state/actions/popups\";\nimport { updateCell } from \"../../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  container: {\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    background: \"white\",\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsInfo = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const customCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const cell = useSelector((store) => store.popups.cellToUpdate);\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const submitCustomCellsF = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell.cell,\n          customCells: convertCustomCells(customCells),\n        },\n        cellsRow\n      )\n    );\n  };\n\n  const convertCustomCells = (cells) => {\n    const data = [];\n    cells.forEach((element) => {\n      data.push({\n        columnIndex: element.columnIndex,\n        rowIndex: element.rowIndex,\n      });\n    });\n    return data;\n  };\n\n  const cancelCustomCellsF = () => {\n    dispatch(cancelCustomCells());\n  };\n\n  const convertCustomCellsName = (text) => {\n    return text.split(\"<br />\").join(\" \");\n  };\n\n  return customCells !== undefined ? (\n    <div className={classes.container}>\n      {letsUpdate && <div></div>}\n      <h2>Select cells</h2>\n      <div className={classes.cont}>\n        {customCells.map((cell, ix) => (\n          <p key={ix} className={classes.text}>\n            {cell.name === null ? \"\" : convertCustomCellsName(cell.name)}\n          </p>\n        ))}\n        {customCells.length === 0 ? (\n          <p className={classes.text}>No cells are selected</p>\n        ) : (\n          <p />\n        )}\n      </div>\n      <Button className={classes.cancelButton} onClick={cancelCustomCellsF}>\n        Cancel\n      </Button>\n      <Button className={classes.submitButton} onClick={submitCustomCellsF}>\n        Submit custom cells\n      </Button>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\nexport default SelectedCellsInfo;\n","import { useSelector } from \"react-redux\";\n\nconst BigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const cell = useSelector((store) => store.tables.bigImageCell);\n\n  return image !== undefined ? (\n    <img\n      style={{\n        position: \"absolute\",\n        top: `${\n          cell.rowIndex * 50 +\n          140 +\n          64 +\n          56 +\n          parseInt(cell.bigImageTopMargin) +\n          25 -\n          cell.bigImageHeight / 2\n        }px`,\n        left: `${\n          cell.columnIndex * 100 +\n          180 +\n          parseInt(cell.bigImageLeftMargin) +\n          50 -\n          cell.bigImageWidth / 2\n        }px`,\n      }}\n      src={image}\n      height={cell.bigImageHeight}\n      width={cell.bigImageWidth}\n      alt=\"big\"\n    />\n  ) : (\n    <div></div>\n  );\n};\nexport default BigImage;\n","import { Button } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeBigImage } from \"../../../state/actions/tables\";\n\nconst RemoveBigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const dispatch = useDispatch();\n\n  const removeBigImageFromTable = () => {\n    dispatch(removeBigImage());\n  };\n\n  return image !== undefined ? (\n    <Button\n      style={{\n        color: \"white\",\n        background: \"red\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\",\n      }}\n      onClick={removeBigImageFromTable}\n    >\n      TEMPORARILY REMOVE BIG IMAGE ( UNTIL REFRESH )\n    </Button>\n  ) : (\n    <div></div>\n  );\n};\nexport default RemoveBigImage;\n","import { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cancelIsSelecting } from \"../../../state/actions/cellsRows\";\nimport { showFormatCellsPopup } from \"../../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"20px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsFormat = () => {\n  const classes = useStyles();\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const letsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n  const dispatch = useDispatch();\n\n  const convertCellsName = (text) => {\n    return text ? text.split(\"<br />\").join(\" \") : \"\";\n  };\n\n  const handleFormat = () => {\n    dispatch(showFormatCellsPopup());\n  };\n\n  const handleCancel = () => {\n    dispatch(cancelIsSelecting());\n  };\n\n  return (\n    <div>\n      <Button className={classes.formatButton} onClick={handleFormat}>\n        Format Cells\n      </Button>\n      <Button className={classes.cancelButton} onClick={handleCancel}>\n        CANCEL\n      </Button>\n      <h2>Select cells</h2>\n      {letsUpdate && <div></div>}\n      <div className={classes.cont}>\n        {selectedCells &&\n          selectedCells.map((cell, ix) => (\n            <p key={ix} className={classes.text}>\n              {cell.name === null ? \"\" : convertCellsName(cell.name)}\n            </p>\n          ))}\n      </div>\n      {!selectedCells || selectedCells.length === 0 ? (\n        <p>No cells are selected</p>\n      ) : (\n        <span />\n      )}\n    </div>\n  );\n};\nexport default SelectedCellsFormat;\n","import { Button, Card, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCellsRows, setIsSelecting } from \"../../state/actions/cellsRows\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport CellsRow from \"./CellsRow\";\nimport {\n  deleteTable,\n  setTableJustCreatedFalse,\n} from \"../../state/actions/tables\";\nimport SelectedCellsInfo from \"./utils/SelectedCellsInfo\";\nimport BigImage from \"./utils/BigImage\";\nimport RemoveBigImage from \"./utils/RemoveBigImage\";\nimport SelectedCellsFormat from \"./utils/SelectedCellsFormat\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    height: \"20px\",\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst Table = ({ table }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n  const tableJustCreated = useSelector(\n    (store) => store.tables.tableJustCreated\n  );\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const timeoutFinished = useCallback(() => {\n    dispatch(getCellsRows(table.id));\n    dispatch(setTableJustCreatedFalse());\n  }, [dispatch, table]);\n\n  useEffect(() => {\n    if (!tableJustCreated) {\n      if (!loading) {\n        dispatch(getCellsRows(table.id));\n      }\n      setLoading(false);\n    } else {\n      setLoading(true);\n      setTimeout(timeoutFinished, 3000);\n    }\n  }, [dispatch, table, tableJustCreated, loading, timeoutFinished]);\n\n  const handleDelete = () => {\n    dispatch(deleteTable(table.id, cellsRows));\n  };\n\n  const handleSelect = () => {\n    dispatch(setIsSelecting());\n  };\n\n  const getElement = (size) => {\n    return (\n      <p className={classes.description} style={{ height: `${20 * size}px` }} />\n    );\n  };\n\n  return (\n    <Card className={classes.card}>\n      <h2 className={classes.name}>{table.name}</h2>\n      {table.description.split(\"<br />\").map((text, ix) => (\n        <p className={classes.description} key={ix}>\n          {text}\n        </p>\n      ))}\n      {table.description.split(\"<br />\").length < 4\n        ? getElement(4 - table.description.split(\"<br />\").length)\n        : \"\"}\n      <RemoveBigImage />\n      <SelectedCellsInfo />\n      {loading && <CircularProgress />}\n      {!loading && (\n        <div>\n          {!isSelecting && (\n            <Button className={classes.formatButton} onClick={handleSelect}>\n              Select Cells\n            </Button>\n          )}\n          {isSelecting && <SelectedCellsFormat />}\n          <div className={classes.cellContainer}>\n            <BigImage />\n            {cellsRows.map((cellsRow) => (\n              <CellsRow cellsRow={cellsRow} key={cellsRows.indexOf(cellsRow)} />\n            ))}\n          </div>\n          <div>\n            <Button className={classes.deleteButton} onClick={handleDelete}>\n              Delete\n            </Button>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\nTable.propTypes = {\n  table: PropTypes.object,\n};\nexport default Table;\n","import React from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\n\nimport { addTable } from \"../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst TableInfoPopup = (props) => {\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(addTable(name, description.split(\"\\n\").join(\"<br />\")));\n    props.handleClose();\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={props.handleClose}>\n          x\n        </span>\n        <h2>Create table</h2>\n        <TextField\n          required\n          fullWidth\n          label=\"Name\"\n          name=\"name\"\n          variant=\"outlined\"\n          placeholder=\"Name\"\n          value={name}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleNameChange}\n        />\n        <TextField\n          required\n          fullWidth\n          label=\"Description\"\n          name=\"description\"\n          variant=\"outlined\"\n          multiline={true}\n          rows={4}\n          rowsMax={4}\n          placeholder=\"Description\"\n          value={description}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleDescriptionChange}\n        />\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default TableInfoPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useEffect } from \"react\";\n\nimport { beginCustomSelect, closePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst ActionCellPopup = () => {\n  const [sumAll, setSumAll] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [rows, setRows] = React.useState(\"\");\n  const [actionType, setActionType] = React.useState(\"\");\n  const [typeActionType, setTypeActionType] = React.useState(\"\");\n  const [typeActionTypeName, setTypeActionTypeName] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell.sumAll) {\n      setSumAll(cell.sumAll);\n    } else {\n      setName(\n        cell.name === undefined ? \"\" : cell.name.split(\"<br />\").join(\"\\n\")\n      );\n      setActionType(cell.actionType);\n      setTypeActionType(cell.typeActionType);\n      setTypeActionTypeName(cell.typeActionTypeName);\n      setColor(cell.color);\n      setRows(cell.rows);\n    }\n  }, [cell]);\n\n  const actionTypes = [\"selectrows\", \"selecttype\", \"custom\"];\n  const typeActionTypes = [\"selecttypeall\", \"selecttyperows\"];\n  const actionTypesNames = [\"Select Rows\", \"Select Type\", \"Custom\"];\n  const typeActionTypesNames = [\"Select All Cells of Type\", \"Select Type Rows\"];\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleTypeNameChange = (event) => {\n    setTypeActionTypeName(event.target.value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (actionType === \"custom\") {\n      dispatch(\n        beginCustomSelect({\n          cell: {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n          },\n        })\n      );\n    } else {\n      dispatch(\n        updateCell(\n          {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n          },\n          cellsRow\n        )\n      );\n      handleClose();\n    }\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          color: \"white\",\n          actionType: \"\",\n          typeActionType: \"\",\n          typeActionTypeName: \"\",\n          rows: \"\",\n          sumAll: false,\n          type: \"notype\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleRowsChange = (event) => {\n    setRows(event.target.value);\n  };\n\n  const handleActionTypeChange = (event) => {\n    setActionType(event.target.value);\n  };\n\n  const handleTypeActionTypeChange = (event) => {\n    setTypeActionType(event.target.value);\n  };\n\n  const handleSumAll = () => {\n    setSumAll(!sumAll);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Action</h2>\n        <div>\n          <FormControlLabel\n            value={sumAll}\n            control={<Checkbox color=\"default\" onClick={handleSumAll} />}\n            label=\"Sum all?\"\n            checked={sumAll}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!sumAll && (\n          <div>\n            <TextField\n              fullWidth\n              label=\"Name\"\n              name=\"name\"\n              variant=\"outlined\"\n              placeholder=\"Name\"\n              value={name}\n              multiline={true}\n              rows={3}\n              rowsMax={3}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleNameChange}\n            />\n            <TextField\n              fullWidth\n              label=\"Color\"\n              name=\"color\"\n              variant=\"outlined\"\n              placeholder=\"Cell color\"\n              value={color}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleColorChange}\n            />\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"label\">Action Type</InputLabel>\n              <Select\n                id=\"select\"\n                value={actionType || \"\"}\n                onChange={handleActionTypeChange}\n              >\n                {actionTypes.map((item, ix) => (\n                  <MenuItem key={item} value={item}>\n                    {actionTypesNames[ix]}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            {actionType === actionTypes[1] && (\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"label\">Action Type</InputLabel>\n                <Select\n                  id=\"select\"\n                  value={typeActionType || \"\"}\n                  onChange={handleTypeActionTypeChange}\n                >\n                  {typeActionTypes.map((item, ix) => (\n                    <MenuItem key={item} value={item}>\n                      {typeActionTypesNames[ix]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n            {actionType === actionTypes[1] && (\n              <TextField\n                fullWidth\n                label=\"Type name\"\n                name=\"Type name\"\n                variant=\"outlined\"\n                placeholder=\"Enter type name\"\n                value={typeActionTypeName || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleTypeNameChange}\n              />\n            )}\n            {(actionType === actionTypes[0] ||\n              (actionType === actionTypes[1] &&\n                typeActionType === typeActionTypes[1])) && (\n              <TextField\n                fullWidth\n                label=\"Rows\"\n                name=\"rows\"\n                variant=\"outlined\"\n                placeholder=\"Enter row indexes separated with Whitespaces ( Begining with 0 )\"\n                value={rows || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleRowsChange}\n              />\n            )}\n          </div>\n        )}\n        {cell.type !== \"notype\" && (\n          <Button className={classes.noTypeButton} onClick={handleNoTypeSubmit}>\n            MAKE NO TYPE\n          </Button>\n        )}\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Checkbox, FormControlLabel, makeStyles } from \"@material-ui/core\";\n\nimport { closePopup, submitNoTypePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst NoTypeCellPopup = () => {\n  const [isAction, setIsAction] = React.useState(false);\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleIsAction = () => {\n    setIsAction(!isAction);\n  };\n\n  const handleSubmit = () => {\n    dispatch(submitNoTypePopup(isAction));\n  };\n\n  const handleMakeEmptySubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"empty\" }, cellsRow));\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Select cell type</h2>\n        <div>\n          <FormControlLabel\n            value={isAction}\n            control={<Checkbox color=\"default\" onClick={handleIsAction} />}\n            label=\"Is it an action cell?\"\n            checked={isAction}\n            labelPlacement=\"start\"\n          />\n        </div>\n        <Button\n          className={classes.makeEmptyButton}\n          onClick={handleMakeEmptySubmit}\n        >\n          Make Empty\n        </Button>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit Type Cell\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default NoTypeCellPopup;\n","export const SHOW_SNACKBAR = \"snackbar/SHOW_SNACKBAR\";\nexport const CLOSE_SNACKBAR = \"snackbar/CLOSE_SNACKBAR\";\n","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nexport function showSnackbar(message) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_SNACKBAR, message });\n  };\n}\n\nexport function closeSnackbar() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_SNACKBAR });\n  };\n}\n","import React from \"react\";\nimport { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport {\n  getCellFile,\n  getCellNameFile,\n  updateInfoCell,\n  updateCell,\n} from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  borderInputcontainer: {\n    marginTop: \"50px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    marginBottom: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst InfoCellPopup = () => {\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [typeForAction, setTypeForAction] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [nameFile, setNameFile] = React.useState(undefined);\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [baseTen, setBaseTen] = React.useState(\"\");\n  const [baseThree, setBaseThree] = React.useState(\"\");\n  const [baseHundred, setBaseHundred] = React.useState(\"\");\n  const [baseFour, setBaseFour] = React.useState(\"\");\n  const [databaseID, setDatabaseID] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellFile);\n  const cellNameFile = useSelector((store) => store.popups.cellNameFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setName(\n        cell.name === undefined ? \"\" : cell.name.split(\"<br />\").join(\"\\n\")\n      );\n      setColor(cell.color);\n      setDescription(cell.description === undefined ? \"\" : cell.description);\n      setTop(cell.topBorder);\n      setBottom(cell.bottomBorder);\n      setLeft(cell.leftBorder);\n      setRight(cell.rightBorder);\n      setBaseTen(cell.baseTen);\n      setBaseFour(cell.baseFour);\n      setBaseHundred(cell.baseHundred);\n      setBaseThree(cell.baseThree);\n      setDatabaseID(cell.databaseID);\n      if (cell.nameFilePath !== undefined && cell.nameFilePath !== \"\") {\n        dispatch(getCellNameFile(cell.nameFilePath));\n      }\n      if (cell.filePath !== undefined && cell.filePath !== \"\") {\n        dispatch(getCellFile(cell.filePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleSubmit = () => {\n    dispatch(\n      updateInfoCell(\n        {\n          ...cell,\n          name: name.split(\"\\n\").join(\"<br />\"),\n          description,\n          color,\n          typeForAction,\n          topBorder: top,\n          bottomBorder: bottom,\n          leftBorder: left,\n          rightBorder: right,\n          type: \"info\",\n          baseTen,\n          baseFour,\n          baseHundred,\n          baseThree,\n          databaseID,\n        },\n        file,\n        nameFile,\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleDescriptionChange = (value) => {\n    setDescription(value);\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const nameFileLoaded = (loadedFile) => {\n    setNameFile(loadedFile);\n  };\n\n  const removeNameFile = () => {\n    setNameFile(undefined);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const handleTypeForAction = (event) => {\n    setTypeForAction(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBaseTenChange = (event) => {\n    setBaseTen(event.target.value);\n  };\n\n  const handleBaseFourChange = (event) => {\n    setBaseFour(event.target.value);\n  };\n\n  const handleBaseThreeChange = (event) => {\n    setBaseThree(event.target.value);\n  };\n\n  const handleBaseHundredChange = (event) => {\n    setBaseHundred(event.target.value);\n  };\n\n  const handleDatabaseIDChange = (event) => {\n    setDatabaseID(event.target.value);\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          description: \"\",\n          color: \"white\",\n          typeForAction: \"\",\n          topBorder: 1,\n          bottomBorder: 1,\n          leftBorder: 1,\n          rightBorder: 1,\n          type: \"notype\",\n          file: \"\",\n          nameFile: \"\",\n          bluetoothContent: \"\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Information</h2>\n        <TextField\n          required\n          fullWidth\n          name=\"name\"\n          variant=\"outlined\"\n          label=\"Name\"\n          placeholder=\"Name\"\n          value={name}\n          multiline={true}\n          rows={3}\n          rowsMax={3}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleNameChange}\n        />\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={nameFileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.button}>Click to upload NAME image</Button>\n        </FilePicker>\n        {(nameFile || cellNameFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:\n            <strong>\n              {nameFile === undefined ? cellNameFile.name : nameFile.name}\n            </strong>\n            <button\n              className={classes.removeFileButton}\n              onClick={removeNameFile}\n            >\n              Remove\n            </button>\n          </div>\n        )}\n        <TextField\n          required\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <TextField\n          required\n          fullWidth\n          label=\"Type for action\"\n          name=\"type_for_action\"\n          variant=\"outlined\"\n          placeholder=\"Type for action\"\n          value={typeForAction}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleTypeForAction}\n        />\n        <FilePicker\n          extensions={[\"pdf\", \"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.button}>Click to upload file</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded file:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter description:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <div className={classes.borderInputcontainer}>\n          <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n          <TextField\n            required\n            name=\"top\"\n            variant=\"outlined\"\n            label=\"Top\"\n            placeholder=\"Top\"\n            value={top}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleTopChange}\n          />\n          <TextField\n            required\n            label=\"Right\"\n            name=\"right\"\n            variant=\"outlined\"\n            placeholder=\"Right\"\n            value={right}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleRightChange}\n          />\n          <TextField\n            required\n            label=\"Bottom\"\n            name=\"bottom\"\n            variant=\"outlined\"\n            placeholder=\"Bottom\"\n            value={bottom}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleBottomChange}\n          />\n          <TextField\n            required\n            label=\"Left\"\n            name=\"left\"\n            variant=\"outlined\"\n            placeholder=\"Left\"\n            value={left}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleLeftChange}\n          />\n        </div>\n        <h2>Bluetooth</h2>\n        <TextField\n          required\n          fullWidth\n          label=\"Base 10\"\n          name=\"base10\"\n          variant=\"outlined\"\n          placeholder=\"Base 10\"\n          value={baseTen}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseTenChange}\n        />\n        <TextField\n          required\n          fullWidth\n          label=\"Base 44\"\n          name=\"base44\"\n          variant=\"outlined\"\n          placeholder=\"Base 44\"\n          value={baseFour}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseFourChange}\n        />\n        <TextField\n          required\n          fullWidth\n          label=\"Base 100\"\n          name=\"base100\"\n          variant=\"outlined\"\n          placeholder=\"Base 100\"\n          value={baseHundred}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseHundredChange}\n        />\n        <TextField\n          required\n          fullWidth\n          label=\"Base 336\"\n          name=\"base336\"\n          variant=\"outlined\"\n          placeholder=\"Base 336\"\n          value={baseThree}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseThreeChange}\n        />\n        <TextField\n          required\n          fullWidth\n          label=\"Database ID\"\n          name=\"databaseID\"\n          variant=\"outlined\"\n          placeholder=\"Database ID\"\n          value={databaseID}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleDatabaseIDChange}\n        />\n        <div>\n          {cell.type !== \"notype\" && (\n            <Button\n              className={classes.noTypeButton}\n              onClick={handleNoTypeSubmit}\n            >\n              MAKE NO TYPE\n            </Button>\n          )}\n          <Button className={classes.submitButton} onClick={handleSubmit}>\n            Submit\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default InfoCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { closePopup, showImagePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  notypeButton: {\n    border: \"1px solid black\",\n    background: \"blue\",\n    marginRight: \"20px\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst EmptyCellPopup = () => {\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"notype\" }, cellsRow));\n  };\n\n  const handleImageSubmit = () => {\n    dispatch(showImagePopup());\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <Button className={classes.notypeButton} onClick={handleSubmit}>\n          MAKE CELL NOTYPE\n        </Button>\n        <Button className={classes.button} onClick={handleImageSubmit}>\n          ADD IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default EmptyCellPopup;\n","import { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { updateImageCell, getCellImageFile } from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  fileButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst ImageCellPopup = () => {\n  const [width, setWidth] = React.useState(\"\");\n  const [height, setHeight] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [leftMargin, setLeftMargin] = React.useState(\"\");\n  const [topMargin, setTopMargin] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellImageFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setHeight(cell.bigImageHeight === undefined ? \"\" : cell.bigImageHeight);\n      setWidth(cell.bigImageWidth === undefined ? \"\" : cell.bigImageWidth);\n      setLeftMargin(\n        cell.bigImageLeftMargin === undefined ? \"\" : cell.bigImageLeftMargin\n      );\n      setTopMargin(\n        cell.bigImageTopMargin === undefined ? \"\" : cell.bigImageTopMargin\n      );\n      if (cell && cell.bigImagePath !== undefined && cell.bigImagePath !== \"\") {\n        dispatch(getCellImageFile(cell.bigImagePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleHeightChange = (event) => {\n    setHeight(event.target.value);\n  };\n\n  const handleTopMarginChange = (event) => {\n    setTopMargin(event.target.value);\n  };\n\n  const handleLeftMarginChange = (event) => {\n    setLeftMargin(event.target.value);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const handleSubmit = () => {\n    dispatch(\n      updateImageCell(\n        {\n          ...cell,\n          type: \"image\",\n          bigImageWidth: width,\n          bigImageHeight: height,\n          bigImageTopMargin: topMargin === \"\" ? 0 : topMargin,\n          bigImageLeftMargin: leftMargin === \"\" ? 0 : leftMargin,\n        },\n        file,\n        cellsRow\n      )\n    );\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.fileButton}>Click to upload image</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <h3>Single cell width = 100 and height = 50</h3>\n        <TextField\n          required\n          fullWidth\n          label=\"Width\"\n          name=\"width\"\n          variant=\"outlined\"\n          placeholder=\"Enter width\"\n          value={width}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleWidthChange}\n        />\n        <TextField\n          required\n          fullWidth\n          label=\"Height\"\n          name=\"height\"\n          variant=\"outlined\"\n          placeholder=\"Enter height\"\n          value={height}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleHeightChange}\n        />\n        <div style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>\n          <TextField\n            required\n            label=\"Top margin\"\n            name=\"topMargin\"\n            variant=\"outlined\"\n            placeholder=\"Top margin\"\n            value={topMargin}\n            style={{\n              marginRight: \"10px\",\n              maxWidth: \"140px\",\n            }}\n            onChange={handleTopMarginChange}\n          />\n          <TextField\n            required\n            label=\"Left margin\"\n            name=\"leftMargin\"\n            variant=\"outlined\"\n            placeholder=\"Left margin\"\n            value={leftMargin}\n            style={{\n              maxWidth: \"140px\",\n            }}\n            onChange={handleLeftMarginChange}\n          />\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          SUBMIT\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default ImageCellPopup;\n","import React from \"react\";\nimport { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { submitSelectingCells } from \"../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  borderInputcontainer: {\n    marginTop: \"10px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst FormatCellsPopup = () => {\n  const [color, setColor] = React.useState(\"\");\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(\n      submitSelectingCells(\n        { color, top, bottom, left, right },\n        selectedCells,\n        cellsRows\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Format Cells</h2>\n        <TextField\n          required\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <div className={classes.borderInputcontainer}>\n          <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n          <TextField\n            required\n            name=\"top\"\n            variant=\"outlined\"\n            label=\"Top\"\n            placeholder=\"Top\"\n            value={top}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleTopChange}\n          />\n          <TextField\n            required\n            label=\"Right\"\n            name=\"right\"\n            variant=\"outlined\"\n            placeholder=\"Right\"\n            value={right}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleRightChange}\n          />\n          <TextField\n            required\n            label=\"Bottom\"\n            name=\"bottom\"\n            variant=\"outlined\"\n            placeholder=\"Bottom\"\n            value={bottom}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleBottomChange}\n          />\n          <TextField\n            required\n            label=\"Left\"\n            name=\"left\"\n            variant=\"outlined\"\n            placeholder=\"Left\"\n            value={left}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleLeftChange}\n          />\n        </div>\n        <Button className={classes.submitButton} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default FormatCellsPopup;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TablesList from \"../tables_list/TablesList\";\nimport Table from \"../table/Table\";\nimport TableInfoPopup from \"../popup/TableInfoPopup\";\nimport ActionCellPopup from \"../popup/ActionCellPopup\";\nimport NoTypeCellPopup from \"../popup/NoTypeCellPopup\";\nimport InfoCellPopup from \"../popup/InfoCellPopup\";\nimport EmptyCellPopup from \"../popup/EmptyCellPopup\";\nimport ImageCellPopup from \"../popup/ImageCellPopup\";\nimport FormatCellsPopup from \"../popup/FormatCellsPopup\";\n\nconst Home = () => {\n  const [isNamePopupOpen, setIsNamePopupOpen] = useState(false);\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const isActionCellPopupOpen = useSelector(\n    (store) => store.popups.actionPopupOpen\n  );\n  const isEmptyCellPopupOpen = useSelector(\n    (store) => store.popups.emptyCellPopupOpen\n  );\n  const isInfoCellPopupOpen = useSelector(\n    (store) => store.popups.infoPopupOpen\n  );\n  const noTypeCellPopupOpen = useSelector(\n    (store) => store.popups.noTypePopupOpen\n  );\n  const imageCellPopupOpen = useSelector(\n    (store) => store.popups.imagePopupOpen\n  );\n  const formatCellsPopupOpen = useSelector(\n    (store) => store.popups.formatCellsPopupOpen\n  );\n\n  const user = useSelector((store) => store.user.user);\n\n  const history = useHistory();\n\n  const popupOpened = () => {\n    window.scrollTo(0, 0);\n    disableBodyScroll(document);\n  };\n\n  isNamePopupOpen ||\n  isActionCellPopupOpen ||\n  isInfoCellPopupOpen ||\n  imageCellPopupOpen ||\n  isEmptyCellPopupOpen ||\n  noTypeCellPopupOpen ||\n  formatCellsPopupOpen\n    ? popupOpened()\n    : enableBodyScroll(document);\n\n  useEffect(() => {\n    if (user === undefined || user.role !== \"admin\") {\n      history.push(\"/\");\n    }\n    window.scrollTo(0, 0);\n  }, [user, history]);\n\n  const toggleNamePopup = () => {\n    setIsNamePopupOpen(!isNamePopupOpen);\n  };\n\n  return (\n    <Container\n      style={{\n        padding: \"10px\",\n        width: \"100%\",\n        display: \"inline-flex\",\n        flexDirection: \"row\",\n      }}\n    >\n      <TablesList showTableNamePopup={toggleNamePopup} />\n      {selectedTable === undefined ? (\n        <h2 style={{ flex: 1, textAlign: \"center\" }}>Please select a table</h2>\n      ) : (\n        <Table table={selectedTable} />\n      )}\n      {isNamePopupOpen && <TableInfoPopup handleClose={toggleNamePopup} />}\n      {isEmptyCellPopupOpen && <EmptyCellPopup />}\n      {isActionCellPopupOpen && <ActionCellPopup />}\n      {isInfoCellPopupOpen && <InfoCellPopup />}\n      {noTypeCellPopupOpen && <NoTypeCellPopup />}\n      {imageCellPopupOpen && <ImageCellPopup />}\n      {formatCellsPopupOpen && <FormatCellsPopup />}\n    </Container>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { closeSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nconst AppSnackbar = () => {\n  const classes = useStyles();\n  const open = useSelector((store) => store.snackbar.open);\n  const message = useSelector((store) => store.snackbar.message);\n  const dispatch = useDispatch();\n\n  if (!open) {\n    return null;\n  }\n\n  const close = () => {\n    dispatch(closeSnackbar());\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      open={open}\n      autoHideDuration={5000}\n      onClose={close}\n      message={<span>{message}</span>}\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={close}\n        >\n          <CloseIcon />\n        </IconButton>,\n      ]}\n    />\n  );\n};\n\nexport default AppSnackbar;\n","export const SIGN_IN = \"user/SIGN_IN\";\nexport const SIGN_IN_SUCCESS = \"user/SIGN_IN_SUCCESS\";\nexport const SIGN_IN_FAILED = \"user/SIGN_IN_FAILED\";\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button, Card, TextField, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signIn } from \"../../state/actions/user\";\n\nconst useStyles = makeStyles({\n  title: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: \"bold\",\n  },\n  container: {\n    background: \"white\",\n    borderRadius: \"10px\",\n    maxWidth: \"500px\",\n    alignContent: \"center\",\n    padding: \"10px\",\n    display: \"flex\",\n    marginTop: \"30px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    margin: \"10px\",\n    minWidth: \"200px\",\n    background: \"green\",\n    fontWeight: \"bold\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SignIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const user = useSelector((store) => store.user.user);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user !== undefined) {\n      history.push(\"/home\");\n    }\n  }, [user, history]);\n\n  const handleSubmit = () => {\n    dispatch(signIn({ email, password }));\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <Card className={classes.container}>\n      <Typography className={classes.title}>Sign In</Typography>\n      <TextField\n        required\n        fullWidth\n        name=\"email\"\n        variant=\"outlined\"\n        placeholder=\"Email\"\n        value={email}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handleEmailChange}\n      />\n      <TextField\n        required\n        fullWidth\n        name=\"password\"\n        variant=\"outlined\"\n        placeholder=\"Password\"\n        value={password}\n        type={\"password\"}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handlePasswordChange}\n      />\n      <Button className={classes.button} onClick={handleSubmit}>\n        Submit\n      </Button>\n    </Card>\n  );\n};\nexport default SignIn;\n","import { SIGN_IN, SIGN_IN_SUCCESS, SIGN_IN_FAILED } from \"../actionTypes/user\";\nimport { auth, db } from \"../../firebase\";\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    dispatch({ type: SIGN_IN });\n    try {\n      auth\n        .signInWithEmailAndPassword(user.email, user.password)\n        .then((value) => {\n          db.collection(\"users\")\n            .doc(value.user.uid)\n            .get()\n            .then((snapshot) => {\n              const dbUser = snapshot.data();\n              if (dbUser.role === \"admin\") {\n                dispatch({ type: SIGN_IN_SUCCESS, user: dbUser });\n              } else {\n                dispatch({ type: SIGN_IN_FAILED });\n              }\n            });\n        });\n    } catch (e) {\n      dispatch({ type: SIGN_IN_FAILED });\n    }\n  };\n}\n","import \"./App.css\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Home from \"./components/home/Home\";\nimport AppSnackbar from \"./components/popup/AppSnackbar\";\nimport SignIn from \"./components/sign-in/SignIn\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <CssBaseline />\n      <div\n        style={{\n          minHeight: \"100vh\",\n          width: \"100%\",\n          margin: \"0px\",\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/home\" component={Home} />\n          <Route path=\"/\" component={SignIn} />\n        </Switch>\n      </div>\n      <AppSnackbar />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nconst initialState = {\n  open: false,\n  message: \"\",\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SHOW_SNACKBAR: {\n      return { ...state, open: true, message: action.message };\n    }\n    case CLOSE_SNACKBAR: {\n      return { ...state, open: false, message: \"\" };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\n\nconst initialState = {\n  tables: [],\n  selectedTable: undefined,\n  tableJustCreated: false,\n  bigImage: undefined,\n  bigImageCell: undefined,\n  error: undefined,\n};\n\nexport default function tablesReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case GET_TABLES: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case REMOVE_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: undefined,\n        bigImageCell: undefined,\n        error: undefined,\n      };\n    }\n    case SET_TABLE_JUST_CREATED_FALSE: {\n      return {\n        ...state,\n        tableJustCreated: false,\n      };\n    }\n    case GET_TABLES_SUCCESS: {\n      return { ...state, tables: action.tables };\n    }\n    case GET_TABLES_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case ADD_TABLE: {\n      const newTables = state.tables;\n      newTables.push(action.table);\n      return {\n        ...state,\n        tableJustCreated: true,\n        selectedTable: action.table,\n        tables: newTables,\n      };\n    }\n    case SET_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: action.image,\n        bigImageCell: action.cell,\n      };\n    }\n    case SET_SELECTED_TABLE: {\n      return {\n        ...state,\n        selectedTable: action.table,\n        bigImage: undefined,\n        bigImageCell: undefined,\n      };\n    }\n    case DELETE_TABLE: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case DELETE_TABLE_SUCCESS: {\n      const newTables = state.tables;\n      state.tables.forEach((table) => {\n        if (table.id === action.id) {\n          newTables.remove(table);\n        }\n      });\n      return {\n        ...state,\n        selectedTable: undefined,\n        tables: newTables,\n      };\n    }\n    case DELETE_TABLE_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n} from \"../actionTypes/cell\";\nimport {\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  SUBMIT_NO_TYPE_POPUP,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CUSTOM_CELLS_SUBMITED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n} from \"../actionTypes/popups\";\n\nconst initialState = {\n  actionPopupOpen: false,\n  infoPopupOpen: false,\n  noTypePopupOpen: false,\n  emptyCellPopupOpen: false,\n  imagePopupOpen: false,\n  formatCellsPopupOpen: false,\n  cell: undefined,\n  cellsRow: undefined,\n  cellFile: undefined,\n  cellNameFile: undefined,\n  cellImageFile: undefined,\n  cellToUpdate: undefined,\n  cellToUpdateCustomCells: undefined,\n  letsUpdate: false,\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case CANCEL_CUSTOM_CELLS: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case CUSTOM_CELLS_SUBMITED: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SHOW_ACTION_POPUP: {\n      return {\n        ...state,\n        actionPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case BEGIN_CUSTOM_SELECT: {\n      return {\n        ...state,\n        actionPopupOpen: false,\n        cellToUpdate: action.cell,\n        cellToUpdateCustomCells: [],\n      };\n    }\n    case CELL_TO_UPDATE_CUSTOM_CELL_SELECTED: {\n      const cells = state.cellToUpdateCustomCells;\n      if (cells.includes(action.cell)) {\n        const index = cells.indexOf(action.cell);\n        cells.splice(index, 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        cellToUpdateCustomCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SUBMIT_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: false,\n        actionPopupOpen: action.isAction,\n        infoPopupOpen: !action.isAction,\n      };\n    }\n    case SHOW_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_EMPTY_CELL_POPUP: {\n      return {\n        ...state,\n        emptyCellPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_IMAGE_CELL_POPUP: {\n      if (action.cell !== undefined) {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n          cell: action.cell,\n          cellsRow: action.cellsRow,\n        };\n      } else {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n        };\n      }\n    }\n    case SHOW_INFO_POPUP: {\n      return {\n        ...state,\n        infoPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_FORMAT_CELLS_POPUP: {\n      return {\n        ...state,\n        formatCellsPopupOpen: true,\n      };\n    }\n    case CLOSE_POPUP: {\n      return {\n        ...state,\n        infoPopupOpen: false,\n        actionPopupOpen: false,\n        noTypePopupOpen: false,\n        emptyCellPopupOpen: false,\n        imagePopupOpen: false,\n        formatCellsPopupOpen: false,\n        cell: undefined,\n        cellsRow: undefined,\n        cellFile: undefined,\n        cellNameFile: undefined,\n        cellImageFile: undefined,\n      };\n    }\n    case GET_CELL_NAME_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellNameFile: action.file,\n      };\n    }\n    case GET_CELL_IMAGE_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellImageFile: action.file,\n      };\n    }\n    case GET_CELL_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellFile: action.file,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  CLEAR_CELLS_ROWS,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n} from \"../actionTypes/cellsRows\";\nimport { UPDATE_CELL_SUCCESS } from \"../actionTypes/cell\";\nconst initialState = {\n  cellsRows: [],\n  selectedCells: undefined,\n  error: undefined,\n  letsUpdate: false,\n  isSelecting: false,\n};\n\nexport default function cellsRowsReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case UPDATE_CELL_SUCCESS: {\n      let rowIndex;\n      let cellIndex;\n      state.cellsRows.forEach((cellsRow) => {\n        cellsRow.cells.forEach((cell) => {\n          if (\n            cell.columnIndex === action.cell.columnIndex &&\n            cell.rowIndex === action.cell.rowIndex\n          ) {\n            rowIndex = state.cellsRows.indexOf(cellsRow);\n            cellIndex = cellsRow.cells.indexOf(cell);\n          }\n        });\n      });\n      state.cellsRows[rowIndex].cells[cellIndex] = action.cell;\n      return { ...state, error: undefined };\n    }\n    case BEGIN_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: true,\n        selectedCells: [],\n      };\n    }\n    case STOP_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: false,\n        selectedCells: undefined,\n      };\n    }\n    case ADD_SELECTING_CELL: {\n      var cells = state.selectedCells;\n      if (cells.includes(action.cell)) {\n        cells.splice(cells.indexOf(action.cell), 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        selectedCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case GET_CELLS_ROWS: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case GET_CELLS_ROWS_SUCCESS: {\n      action.data.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return { ...state, cellsRows: action.data };\n    }\n    case UPDATE_CELLS_ROWS: {\n      action.cellsRows.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return {\n        ...state,\n        cellsRows: action.cellsRows,\n        selectedCells: undefined,\n        isSelecting: false,\n      };\n    }\n    case GET_CELLS_ROWS_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case CLEAR_CELLS_ROWS: {\n      return {\n        ...state,\n        cellsRows: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { SIGN_IN, SIGN_IN_SUCCESS, SIGN_IN_FAILED } from \"../actionTypes/user\";\n\nconst initialState = {\n  user: undefined,\n  error: false,\n};\n\nexport default function userReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SIGN_IN: {\n      return { ...state, error: false };\n    }\n    case SIGN_IN_SUCCESS: {\n      return { ...state, user: action.user };\n    }\n    case SIGN_IN_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport snackbar from \"./snackbar\";\nimport tables from \"./tables\";\nimport popups from \"./popups\";\nimport cellsRows from \"./cellsRows\";\nimport user from \"./user\";\n\nexport default combineReducers({\n  snackbar,\n  tables,\n  popups,\n  cellsRows,\n  user,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport reducers from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/* eslint-enable */\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\"],\n};\nconst pReducer = persistReducer(persistConfig, reducers);\n\nconst store = createStore(\n  pReducer,\n  compose(applyMiddleware(thunk), composeEnhancers())\n);\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./state/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}