{"version":3,"sources":["state/actionTypes/tables.js","firebase.js","common/CellFunctions.js","state/actionTypes/cellsRows.js","state/actions/cellsRows.js","state/actionTypes/popups.js","state/actions/popups.js","components/tables_list/TablesListItem.js","state/actions/tables.js","state/actionTypes/user.js","components/tables_list/TablesList.js","state/actions/user.js","components/table/cells/EmptyCell.js","components/table/cells/Cell.js","components/table/CellsRow.js","state/actionTypes/cell.js","state/actions/cell.js","components/table/utils/SelectedCellsInfo.js","components/table/utils/BigImage.js","components/table/utils/RemoveBigImage.js","components/table/utils/SelectedCellsFormat.js","components/table/Table.js","components/popup/TableInfoPopup.js","components/popup/ActionCellPopup.js","components/popup/NoTypeCellPopup.js","state/actionTypes/snackbar.js","state/actions/snackbar.js","components/popup/InfoCellPopup.js","components/popup/EmptyCellPopup.js","components/popup/ImageCellPopup.js","components/popup/FormatCellsPopup.js","components/popup/AddToUserPopup.js","state/actionTypes/devices.js","state/actions/devices.js","components/popup/MapRaspberryPopup.js","components/popup/DevicesPopup.js","components/popup/SessionLogsPopup.js","components/home/Home.js","components/popup/AppSnackbar.js","components/sign-in/SignIn.js","App.js","serviceWorker.js","state/reducers/snackbar.js","state/reducers/tables.js","state/reducers/popups.js","state/reducers/cellsRows.js","state/reducers/user.js","state/reducers/devices.js","state/reducers/index.js","state/store.js","index.js"],"names":["GET_TABLES","GET_TABLES_SUCCESS","GET_TABLES_FAILED","ADD_TABLE","DELETE_TABLE","DELETE_TABLE_SUCCESS","DELETE_TABLE_FAILED","SET_SELECTED_TABLE","SET_BIG_IMAGE","SET_TABLE_JUST_CREATED_FALSE","REMOVE_BIG_IMAGE","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","auth","getEmptyTableCells","tableId","data","push","getFirstEmptyRow","i","getEmptyRow","rowIndex","cells","getNoTypeCell","getEmptyCell","columnIndex","type","color","topBorder","leftBorder","rightBorder","bottomBorder","getInfoCell","name","fontSize","getRowActionCell","rows","actionType","sumAll","getColumnActionCell","getTemplateTableCells","getActionRow","getTemplateRow","getColumnActionName","GET_CELLS_ROWS","GET_CELLS_ROWS_SUCCESS","GET_CELLS_ROWS_FAILED","CLEAR_CELLS_ROWS","ADD_SELECTING_CELL","ADD_SELECTING_ALL_CELLS","BEGIN_FORMAT_SELECTING","STOP_FORMAT_SELECTING","UPDATE_CELLS_ROWS","ADD_SELECTING_ROW_CELLS","getCellsRows","dispatch","a","collection","doc","get","then","snapshot","forEach","cellsRow","id","e","error","boxUpdate","cellInfo","cellsRows","sort","b","smallestRow","bigestRow","length","smallestColumn","bigestColumn","rowsToUpdate","cellsToUpdate","rowsForRequest","cell","newCell","width","index","getFormattedRow","includes","row","sendUpdateRowRequest","simpleUpdate","bottom","top","left","right","update","mirrorCell","cellIndex","indexOf","cancelIsSelecting","SHOW_RASP_POPUP","SHOW_DEVICES_POPUP","SHOW_ACTION_POPUP","CLOSE_POPUP","SHOW_INFO_POPUP","SHOW_NO_TYPE_POPUP","SHOW_IMAGE_CELL_POPUP","SHOW_EMPTY_CELL_POPUP","SUBMIT_NO_TYPE_POPUP","BEGIN_CUSTOM_SELECT","CELL_TO_UPDATE_CUSTOM_CELL_SELECTED","CUSTOM_CELLS_SUBMITED","CANCEL_CUSTOM_CELLS","SHOW_FORMAT_CELLS_POPUP","SHOW_ADD_TO_USER_POPUP","SHOW_SESSION_LOGS_POPUP","SHOW_CREATE_TABLE_POPUP","cancelCustomCells","showImagePopup","showDevicesPopup","showCreateTablePopup","closePopup","useStyles","makeStyles","buttonNormal","textTransform","borderRadius","borderColor","borderWidth","margin","whiteSpace","borderStyle","padding","background","buttonSelected","cursos","TablesListItem","item","selectedTable","useSelector","store","tables","useState","isSelected","setIsSelected","classes","useDispatch","useEffect","Button","onClick","table","className","SIGN_IN","SIGN_IN_SUCCESS","SIGN_IN_FAILED","GET_USERS_SUCCESS","ADD_TABLE_TO_USER","ADD_TABLE_TO_USER_SUCCESS","ADD_TABLE_TO_USER_FAILED","card","display","flexDirection","minHeight","maxWidth","flex","raspberrybutton","height","iconmenubutton","text","textAlign","TablesList","didGetUsers","setDidGetUsers","ref","snap","Card","map","verticalAlign","EmptyCell","undefined","bigImagePath","getDownloadURL","image","catch","console","log","setBigImage","showEmptyCellPopup","props","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","borderTopColor","isCustomCell","borderRightColor","borderLeftColor","borderBottomColor","borderLeftStyle","borderRightStyle","borderTopStyle","borderBottomStyle","alignContent","justifyContent","lineHeight","fontWeight","Cell","cellToUpdate","popups","isSelecting","addSelectingCell","cellToUpdateCustomCellSelected","showNoTypePopup","showInfoPopup","showActionPopup","style","marginLeft","marginRight","src","alt","dangerouslySetInnerHTML","__html","replaceAll","selectRowButton","border","CellsRow","cellToUpdateCustomCells","selectedCells","cellsRowLetsUpdate","letsUpdate","UPDATE_CELL","UPDATE_CELL_SUCCESS","UPDATE_CELL_FAILED","GET_CELL_FILE_SUCCESS","GET_CELL_NAME_FILE_SUCCESS","GET_CELL_IMAGE_FILE_SUCCESS","updateCell","cellsRowId","newRow","element","container","marginBottom","marginTop","cont","submitButton","cancelButton","SelectedCellsInfo","customCells","convertCustomCells","ix","split","join","BigImage","bigImage","bigImageCell","position","parseInt","bigImageTopMargin","bigImageHeight","bigImageLeftMargin","bigImageWidth","RemoveBigImage","description","cellContainer","deleteButton","formatButton","SelectedCellsFormat","addToUserButton","Table","loading","setLoading","tableJustCreated","timeoutFinished","useCallback","setTimeout","CircularProgress","delete","deleteTable","popupbox","quillContainer","editor","box","maxHeight","overflow","closeicon","content","cursor","button","TableInfoPopup","React","setName","setDescription","cellsRowsToDuplicate","handleClose","TextField","required","fullWidth","label","variant","placeholder","value","onChange","event","target","theme","add","cellsRowValue","newCells","duplicateTable","addTable","addTemplateTable","formControl","minWidth","header","noTypeButton","ActionCellPopup","setSumAll","setColor","setRows","setActionType","typeActionType","setTypeActionType","typeActionTypeName","setTypeActionTypeName","setFontSize","baseTen","setBaseTen","baseThree","setBaseThree","baseHundred","setBaseHundred","baseFour","setBaseFour","databaseID","setDatabaseID","actionTypes","typeActionTypes","actionTypesNames","typeActionTypesNames","FormControlLabel","control","Checkbox","checked","labelPlacement","FormControl","InputLabel","Select","MenuItem","databaseId","beginCustomSelect","makeEmptyButton","NoTypeCellPopup","isAction","setIsAction","submitNoTypePopup","SHOW_SNACKBAR","CLOSE_SNACKBAR","showSnackbar","message","fileNameContainer","removeFileButton","borderInputcontainer","borderText","InfoCellPopup","typeForAction","setTypeForAction","file","setFile","nameFile","setNameFile","setTop","setBottom","setLeft","setRight","cellFile","cellNameFile","filePath","nameFilePath","getMetadata","showError","msg","extensions","loadedFile","onError","put","updateInfoCell","notypeButton","EmptyCellPopup","fileButton","ImageCellPopup","setWidth","setHeight","leftMargin","setLeftMargin","topMargin","setTopMargin","cellImageFile","maxSize","updateImageCell","FormatCellsPopup","isBoxBorder","setIsBoxBorder","submitSelectingCells","AddToUserPopup","selectedUser","setSelectedUser","users","user","email","snapshots","tableOrder","size","LOAD_DEVICES","LOAD_DEVICES_SUCCESS","LOAD_DEVICES_FAILED","LOAD_MAPPINGS","LOAD_MAPPINGS_SUCCESS","LOAD_MAPPINGS_FAILED","DELETE_MAPPING","DELETE_MAPPING_SUCCESS","DELETE_MAPPING_FAILED","ADD_RASP_TO_USER","ADD_RASP_TO_USER_SUCCESS","ADD_RASP_TO_USER_FAILED","LOAD_SESSION_LOGS","LOAD_SESSION_LOGS_SUCCESS","LOAD_SESSION_LOGS_FAILED","loadSessionLogs","sessionId","startDate","endDate","timeStamp","Date","getTime","cDate","toJSON","slice","sessionStartDate","sessionEndDate","url","req","Request","method","headers","fetch","resp","ok","json","sessionData","boxik","columns","MapRaspberryPopup","didGet","setDidGet","shouldUpdate","setShouldUpdate","oldMappings","setOldMappings","mappings","devices","raspberryID","setRaspberryID","response","handleDelete","mapping","body","JSON","stringify","session_id","find","userId","onDelete","rasp","raspberryId","MappingsListItem","circle","webkitBorderRadius","mozBorderradius","connectionText","DevicesPopup","devicesReq","devicesResponse","DevicePopupItem","is_user_connected","is_device_connected","updated_at","backButton","picker","SessionLogsPopup","setStartDate","setEndDate","selected","date","device_id","period","start","end","sessions","SessionLogsPopupItem","user_id","dataItem","SessionLogsPopupDataItem","created_at","Home","isCreateTablePopupOpen","createTablePopupOpen","isActionCellPopupOpen","actionPopupOpen","isEmptyCellPopupOpen","emptyCellPopupOpen","isInfoCellPopupOpen","infoPopupOpen","noTypeCellPopupOpen","noTypePopupOpen","imageCellPopupOpen","imagePopupOpen","formatCellsPopupOpen","addToUserPopupOpen","raspberryPopupOpen","devicesPopupOpen","sessionLogsPopupOpen","history","useHistory","window","scrollTo","disableBodyScroll","document","enableBodyScroll","role","Container","close","spacing","AppSnackbar","open","snackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","title","alignItems","SignIn","setEmail","password","setPassword","Typography","signInWithEmailAndPassword","uid","dbUser","signIn","App","CssBaseline","exact","path","component","Boolean","location","hostname","match","initialState","combineReducers","state","newTables","remove","splice","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","whitelist","pReducer","persistReducer","reducers","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3098dc59.chunk.js","sourcesContent":["export const GET_TABLES = \"tables/GET_TABLES\";\nexport const GET_TABLES_SUCCESS = \"tables/GET_TABLES_SUCCESS\";\nexport const GET_TABLES_FAILED = \"tables/GET_TABLES_FAILED\";\nexport const ADD_TABLE = \"tables/ADD_TABLE\";\nexport const DELETE_TABLE = \"tables/DELETE_TABLE\";\nexport const DELETE_TABLE_SUCCESS = \"tables/DELETE_TABLE_SUCCESS\";\nexport const DELETE_TABLE_FAILED = \"tables/DELETE_TABLE_FAILED\";\nexport const SET_SELECTED_TABLE = \"tables/SET_SELECTED_TABLE\";\nexport const SET_BIG_IMAGE = \"tables/SET_BIG_IMAGE\";\nexport const SET_TABLE_JUST_CREATED_FALSE =\n  \"tables/SET_TABLE_JUST_CREATED_FALSE\";\nexport const REMOVE_BIG_IMAGE = \"tables/REMOVE_BIG_IMAGE\";\n","import firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBN83KPofzkMJ8I61kt8Fn8our5BSWfNjw\",\n  authDomain: \"firmus-medicus-a254b.firebaseapp.com\",\n  projectId: \"firmus-medicus-a254b\",\n  storageBucket: \"firmus-medicus-a254b.appspot.com\",\n  messagingSenderId: \"906887380621\",\n  appId: \"1:906887380621:web:d9ab0a949265376084ecc4\",\n  measurementId: \"G-506ZEGQVF1\",\n};\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const auth = firebase.auth();\n","export function getEmptyTableCells(tableId) {\n  const data = [];\n  data.push(getFirstEmptyRow(tableId));\n  for (let i = 1; i < 28; i++) {\n    data.push(getEmptyRow(i, tableId));\n  }\n  return data;\n}\nfunction getFirstEmptyRow(tableId) {\n  return {\n    tableId,\n    rowIndex: 0,\n    cells: [\n      getNoTypeCell(0, 0),\n      getNoTypeCell(0, 1),\n      getNoTypeCell(0, 2),\n      getNoTypeCell(0, 3),\n      getEmptyCell(4),\n      getEmptyCell(5),\n      getEmptyCell(6),\n      getNoTypeCell(0, 7),\n      getNoTypeCell(0, 8),\n      getNoTypeCell(0, 9),\n      getNoTypeCell(0, 10),\n    ],\n  };\n}\nfunction getEmptyRow(rowIndex, tableId) {\n  return {\n    tableId,\n    rowIndex,\n    cells: [\n      getNoTypeCell(rowIndex, 0),\n      getNoTypeCell(rowIndex, 1),\n      getNoTypeCell(rowIndex, 2),\n      getNoTypeCell(rowIndex, 3),\n      getNoTypeCell(rowIndex, 4),\n      getNoTypeCell(rowIndex, 5),\n      getNoTypeCell(rowIndex, 6),\n      getNoTypeCell(rowIndex, 7),\n      getNoTypeCell(rowIndex, 8),\n      getNoTypeCell(rowIndex, 9),\n      getNoTypeCell(rowIndex, 10),\n    ],\n  };\n}\nfunction getNoTypeCell(rowIndex, columnIndex) {\n  return {\n    type: \"notype\",\n    rowIndex,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"2\",\n    leftBorder: \"2\",\n    rightBorder: \"2\",\n    bottomBorder: \"2\",\n  };\n}\nfunction getEmptyCell(columnIndex) {\n  return {\n    type: \"empty\",\n    rowIndex: 0,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"2\",\n    leftBorder: \"2\",\n    rightBorder: \"2\",\n    bottomBorder: \"2\",\n  };\n}\nfunction getInfoCell(rowIndex, columnIndex) {\n  return {\n    type: \"info\",\n    name: \"<p></p>\",\n    rowIndex,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"2\",\n    leftBorder: \"2\",\n    rightBorder: \"2\",\n    bottomBorder: \"2\",\n    fontSize: \"\",\n  };\n}\nfunction getRowActionCell(rowIndex, columnIndex, name, rows) {\n  return {\n    type: \"action\",\n    name: \"<p><strong>\" + name + \"</strong></p>\",\n    rowIndex,\n    columnIndex,\n    actionType: \"selectrows\",\n    color: \"white\",\n    topBorder: \"2\",\n    leftBorder: \"2\",\n    rightBorder: \"2\",\n    bottomBorder: \"2\",\n    fontSize: \"20\",\n    rows: `${rows}`,\n    sumAll: false,\n  };\n}\nfunction getColumnActionCell(rowIndex, columnIndex, name, sumAll = false) {\n  return {\n    type: \"action\",\n    name: \"<p><strong>\" + name + \"</strong></p>\",\n    rowIndex,\n    columnIndex,\n    actionType: \"\",\n    color: \"white\",\n    topBorder: \"2\",\n    leftBorder: \"2\",\n    rightBorder: \"2\",\n    bottomBorder: \"2\",\n    fontSize: \"20\",\n    sumAll,\n  };\n}\nexport function getTemplateTableCells(tableId) {\n  const data = [];\n  data.push(getFirstEmptyRow(tableId));\n  data.push(getActionRow(1, tableId));\n  for (let i = 2; i < 28; i++) {\n    data.push(getTemplateRow(i, tableId));\n  }\n  return data;\n}\nfunction getActionRow(rowIndex, tableId) {\n  return {\n    tableId,\n    rowIndex,\n    cells: [\n      getColumnActionCell(rowIndex, 0, \"\", true),\n      getColumnActionCell(rowIndex, 1, \"1\"),\n      getColumnActionCell(rowIndex, 2, \"2\"),\n      getColumnActionCell(rowIndex, 3, \"3\"),\n      getColumnActionCell(rowIndex, 4, \"4\"),\n      getColumnActionCell(rowIndex, 5, \"5\"),\n      getColumnActionCell(rowIndex, 6, \"6\"),\n      getColumnActionCell(rowIndex, 7, \"7\"),\n      getColumnActionCell(rowIndex, 8, \"8\"),\n      getColumnActionCell(rowIndex, 9, \"9\"),\n      getColumnActionCell(rowIndex, 10, \"10\"),\n    ],\n  };\n}\nfunction getTemplateRow(rowIndex, tableId) {\n  return {\n    tableId,\n    rowIndex,\n    cells: [\n      getRowActionCell(rowIndex, 0, getColumnActionName(rowIndex)),\n      getInfoCell(rowIndex, 1),\n      getInfoCell(rowIndex, 2),\n      getInfoCell(rowIndex, 3),\n      getInfoCell(rowIndex, 4),\n      getInfoCell(rowIndex, 5),\n      getInfoCell(rowIndex, 6),\n      getInfoCell(rowIndex, 7),\n      getInfoCell(rowIndex, 8),\n      getInfoCell(rowIndex, 9),\n      getInfoCell(rowIndex, 10),\n    ],\n  };\n}\nfunction getColumnActionName(rowIndex) {\n  const array = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n  ];\n  return array[rowIndex - 2];\n}\n","export const GET_CELLS_ROWS = \"cellsRows/GET_CELLS_ROWS\";\nexport const GET_CELLS_ROWS_SUCCESS = \"cellsRows/GET_CELLS_ROWS_SUCCESS\";\nexport const GET_CELLS_ROWS_FAILED = \"cellsRows/GET_CELLS_ROWS_FAILED\";\nexport const CLEAR_CELLS_ROWS = \"cellsRows/CLEAR_CELLS_ROWS\";\nexport const ADD_SELECTING_CELL = \"cellsRows/ADD_SELECTING_CELL\";\nexport const ADD_SELECTING_ALL_CELLS = \"cellsRows/ADD_SELECTING_ALL_CELLS\";\nexport const BEGIN_FORMAT_SELECTING = \"cellsRows/BEGIN_FORMAT_SELECTING\";\nexport const STOP_FORMAT_SELECTING = \"cellsRows/STOP_FORMAT_SELECTING\";\nexport const SUBMIT_FORMAT_SELECTING = \"cellsRows/SUBMIT_FORMAT_SELECTING\";\nexport const UPDATE_CELLS_ROWS = \"cellsRows/UPDATE_CELLS_ROWS\";\nexport const ADD_SELECTING_ROW_CELLS = \"cellsRows/ADD_SELECTING_ROW_CELLS\";\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n  ADD_SELECTING_ALL_CELLS,\n  ADD_SELECTING_ROW_CELLS,\n} from \"../actionTypes/cellsRows\";\nimport { db } from \"../../firebase\";\n\nexport function getCellsRows(tableId) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELLS_ROWS });\n\n    try {\n      const ref = db.collection(\"tables\").doc(tableId).collection(\"cellsRows\");\n      ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((cellsRow) => {\n          data.push({ ...cellsRow.data(), id: cellsRow.id });\n        });\n        dispatch({ type: GET_CELLS_ROWS_SUCCESS, data: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELLS_ROWS_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function submitSelectingCells(cellInfo, cells, cellsRows) {\n  return async (dispatch) => {\n    if (cellInfo.isBoxBorder) {\n      boxUpdate(dispatch, cellInfo, cells, cellsRows);\n    } else {\n      simpleUpdate(dispatch, cellInfo, cells, cellsRows);\n    }\n  };\n}\n\nconst boxUpdate = (dispatch, cellInfo, cells, cellsRows) => {\n  cells.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n  const smallestRow = cells[0].rowIndex;\n  const bigestRow =\n    cells.length > 1 ? cells[cells.length - 1].rowIndex : smallestRow;\n  cells.sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1));\n  const smallestColumn = cells[0].columnIndex;\n  const bigestColumn =\n    cells.length > 1 ? cells[cells.length - 1].columnIndex : smallestColumn;\n\n  const rowsToUpdate = [...cellsRows];\n  const cellsToUpdate = [];\n  const rowsForRequest = [];\n  cells.forEach((cell) => {\n    const newCell = {\n      ...cell,\n      color: cellInfo.color !== \"\" ? cellInfo.color : cell.color,\n      bottomBorder:\n        cell.rowIndex === bigestRow ? cellInfo.width : cell.bottomBorder,\n      topBorder:\n        cell.rowIndex === smallestRow ? cellInfo.width : cell.topBorder,\n      leftBorder:\n        cell.columnIndex === smallestColumn ? cellInfo.width : cell.leftBorder,\n      rightBorder:\n        cell.columnIndex === bigestColumn ? cellInfo.width : cell.rightBorder,\n    };\n    cellsToUpdate.push(newCell);\n  });\n  cellsToUpdate.forEach((cell, index) => {\n    rowsToUpdate[cell.rowIndex] = getFormattedRow(\n      cell,\n      cells[index],\n      rowsToUpdate[cell.rowIndex]\n    );\n    if (!rowsForRequest.includes(cell.rowIndex)) {\n      rowsForRequest.push(cell.rowIndex);\n    }\n  });\n  rowsToUpdate.forEach((row) => {\n    if (rowsForRequest.includes(row.rowIndex)) {\n      sendUpdateRowRequest(row);\n    }\n  });\n  dispatch({ type: UPDATE_CELLS_ROWS, cellsRows: rowsToUpdate });\n};\n\nconst simpleUpdate = (dispatch, cellInfo, cells, cellsRows) => {\n  const rowsToUpdate = [...cellsRows];\n  const cellsToUpdate = [];\n  const rowsForRequest = [];\n  cells.forEach((cell) => {\n    const newCell = {\n      ...cell,\n      color: cellInfo.color !== \"\" ? cellInfo.color : cell.color,\n      bottomBorder:\n        cellInfo.bottom !== \"\" ? cellInfo.bottom : cell.bottomBorder,\n      topBorder: cellInfo.top !== \"\" ? cellInfo.top : cell.topBorder,\n      leftBorder: cellInfo.left !== \"\" ? cellInfo.left : cell.leftBorder,\n      rightBorder: cellInfo.right !== \"\" ? cellInfo.right : cell.rightBorder,\n    };\n    cellsToUpdate.push(newCell);\n  });\n  cellsToUpdate.forEach((cell, index) => {\n    rowsToUpdate[cell.rowIndex] = getFormattedRow(\n      cell,\n      cells[index],\n      rowsToUpdate[cell.rowIndex]\n    );\n    if (!rowsForRequest.includes(cell.rowIndex)) {\n      rowsForRequest.push(cell.rowIndex);\n    }\n  });\n  rowsToUpdate.forEach((row) => {\n    if (rowsForRequest.includes(row.rowIndex)) {\n      sendUpdateRowRequest(row);\n    }\n  });\n  dispatch({ type: UPDATE_CELLS_ROWS, cellsRows: rowsToUpdate });\n};\n\nconst sendUpdateRowRequest = (row) => {\n  db.collection(\"tables\")\n    .doc(row.tableId)\n    .collection(\"cellsRows\")\n    .doc(row.id)\n    .update({ cells: row.cells });\n};\n\nconst getFormattedRow = (cell, mirrorCell, row) => {\n  const cellIndex = row.cells.indexOf(mirrorCell);\n  row.cells[cellIndex] = cell;\n  return row;\n};\n\nexport function addSelectingCell(cell) {\n  return async (dispatch) => {\n    dispatch({ type: ADD_SELECTING_CELL, cell });\n  };\n}\n\nexport function addSelectingAllCells() {\n  return async (dispatch) => {\n    dispatch({ type: ADD_SELECTING_ALL_CELLS });\n  };\n}\n\nexport function addSelectingRowCells(rowIndex) {\n  return async (dispatch) => {\n    dispatch({ type: ADD_SELECTING_ROW_CELLS, rowIndex });\n  };\n}\n\nexport function setIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_FORMAT_SELECTING });\n  };\n}\n\nexport function cancelIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: STOP_FORMAT_SELECTING });\n  };\n}\n","export const SHOW_RASP_POPUP = \"popups/SHOW_RASP_POPUP\";\nexport const SHOW_DEVICES_POPUP = \"popups/SHOW_DEVICES_POPUP\";\nexport const SHOW_ACTION_POPUP = \"popups/SHOW_ACTION_POPUP\";\nexport const CLOSE_POPUP = \"popups/CLOSE_ACTION_POPUP\";\nexport const SHOW_INFO_POPUP = \"popups/SHOW_INFO_POPUP\";\nexport const SHOW_NO_TYPE_POPUP = \"popups/SHOW_NO_TYPE_POPUP\";\nexport const SHOW_IMAGE_CELL_POPUP = \"popups/SHOW_IMAGE_CELL_POPUP\";\nexport const SHOW_EMPTY_CELL_POPUP = \"popups/SHOW_EMPTY_CELL_POPUP\";\nexport const SUBMIT_NO_TYPE_POPUP = \"popups/SUBMIT_NO_TYPE_POPUP\";\nexport const BEGIN_CUSTOM_SELECT = \"popups/BEGIN_CUSTOM_SELECT\";\nexport const CELL_TO_UPDATE_CUSTOM_CELL_SELECTED =\n  \"popups/CELL_TO_UPDATE_CUSTOM_CELL_SELECTED\";\nexport const CUSTOM_CELLS_SUBMITED = \"popups/CUSTOM_CELLS_SUBMITED\";\nexport const CANCEL_CUSTOM_CELLS = \"popups/CANCEL_CUSTOM_CELLS\";\nexport const SHOW_FORMAT_CELLS_POPUP = \"popups/SHOW_FORMAT_CELLS_POPUP\";\nexport const SHOW_ADD_TO_USER_POPUP = \"popups/SHOW_ADD_TO_USER_POPUP\";\nexport const SHOW_SESSION_LOGS_POPUP = \"popups/SHOW_SESSION_LOGS_POPUP\";\nexport const SHOW_CREATE_TABLE_POPUP = \"popups/SHOW_CREATE_TABLE_POPUP\";\n","import {\n  SHOW_RASP_POPUP,\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SUBMIT_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n  SHOW_ADD_TO_USER_POPUP,\n  SHOW_DEVICES_POPUP,\n  SHOW_SESSION_LOGS_POPUP,\n  SHOW_CREATE_TABLE_POPUP,\n} from \"../actionTypes/popups\";\n\nexport function beginCustomSelect(cell) {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_CUSTOM_SELECT, cell });\n  };\n}\n\nexport function cancelCustomCells() {\n  return async (dispatch) => {\n    dispatch({ type: CANCEL_CUSTOM_CELLS });\n  };\n}\n\nexport function cellToUpdateCustomCellSelected(cell) {\n  return async (dispatch) => {\n    dispatch({ type: CELL_TO_UPDATE_CUSTOM_CELL_SELECTED, cell });\n  };\n}\n\nexport function showFormatCellsPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_FORMAT_CELLS_POPUP });\n  };\n}\n\nexport function showImagePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_IMAGE_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showActionPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_ACTION_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showEmptyCellPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_EMPTY_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function submitNoTypePopup(isAction) {\n  return async (dispatch) => {\n    dispatch({ type: SUBMIT_NO_TYPE_POPUP, isAction });\n  };\n}\n\nexport function showNoTypePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_NO_TYPE_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showInfoPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_INFO_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showAddToUserPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_ADD_TO_USER_POPUP });\n  };\n}\n\nexport function showRaspPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_RASP_POPUP });\n  };\n}\n\nexport function showDevicesPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_DEVICES_POPUP });\n  };\n}\n\nexport function showSessionLogsPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_SESSION_LOGS_POPUP });\n  };\n}\n\nexport function showCreateTablePopup(cellsRows) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_CREATE_TABLE_POPUP, cellsRows });\n  };\n}\n\nexport function closePopup() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { setSelectedTable } from \"../../state/actions/tables\";\nimport { cancelIsSelecting } from \"../../state/actions/cellsRows\";\nimport { cancelCustomCells } from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  buttonNormal: {\n    color: \"black\",\n    fontSize: \"1em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    whiteSpace: \"wrap\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  buttonSelected: {\n    color: \"white\",\n    background: \"black\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n      cursos: \"auto\",\n    },\n  },\n});\n\nconst TablesListItem = ({ item }) => {\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const [isSelected, setIsSelected] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsSelected(selectedTable && selectedTable.id === item.id);\n  }, [setIsSelected, selectedTable, item]);\n\n  const selectTable = () => {\n    dispatch(setSelectedTable(item));\n    dispatch(cancelIsSelecting());\n    dispatch(cancelCustomCells());\n  };\n\n  return (\n    <Button\n      onClick={isSelected ? null : selectTable}\n      className={isSelected ? classes.buttonSelected : classes.buttonNormal}\n    >\n      {item.name}\n    </Button>\n  );\n};\nTablesListItem.propTypes = {\n  item: PropTypes.object,\n};\nexport default TablesListItem;\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\nimport { db, storage } from \"../../firebase\";\nimport {\n  getEmptyTableCells,\n  getTemplateTableCells,\n} from \"../../common/CellFunctions\";\n\nexport function removeBigImage() {\n  return async (dispatch) => {\n    dispatch({ type: REMOVE_BIG_IMAGE });\n  };\n}\n\nexport function getTables() {\n  return async (dispatch) => {\n    dispatch({ type: GET_TABLES });\n\n    try {\n      const ref = db.collection(\"tables\");\n      await ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((table) => {\n          data.push({ ...table.data(), id: table.id });\n        });\n        dispatch({ type: GET_TABLES_SUCCESS, tables: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_TABLES_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setTableJustCreatedFalse() {\n  return async (dispatch) => {\n    dispatch({\n      type: SET_TABLE_JUST_CREATED_FALSE,\n    });\n  };\n}\n\nexport function addTemplateTable(name, description) {\n  return async (dispatch) => {\n    const ref = db.collection(\"tables\");\n    await ref.add({ name, description }).then((table) => {\n      const cellsRows = getTemplateTableCells(table.id);\n      cellsRows.forEach((cellsRow) => {\n        ref\n          .doc(table.id)\n          .collection(\"cellsRows\")\n          .add({\n            tableId: cellsRow.tableId,\n            rowIndex: cellsRow.rowIndex,\n          })\n          .then((cellsRowValue) => {\n            const newCells = [];\n            cellsRow.cells.forEach((cell) =>\n              newCells.push({\n                ...cell,\n                tableId: table.id,\n                cellsRowId: cellsRowValue.id,\n              })\n            );\n            ref\n              .doc(table.id)\n              .collection(\"cellsRows\")\n              .doc(cellsRowValue.id)\n              .update({ cells: newCells });\n          });\n      });\n\n      dispatch({\n        type: ADD_TABLE,\n        table: { id: table.id, name, description },\n      });\n    });\n  };\n}\n\nexport function duplicateTable(name, description, cellsRows) {\n  return async (dispatch) => {\n    const ref = db.collection(\"tables\");\n    await ref.add({ name, description }).then((table) => {\n      cellsRows.forEach((cellsRow) => {\n        ref\n          .doc(table.id)\n          .collection(\"cellsRows\")\n          .add({\n            tableId: table.id,\n            rowIndex: cellsRow.rowIndex,\n          })\n          .then((cellsRowValue) => {\n            const newCells = [];\n            cellsRow.cells.forEach((cell) =>\n              newCells.push({\n                ...cell,\n                tableId: table.id,\n                cellsRowId: cellsRowValue.id,\n              })\n            );\n            ref\n              .doc(table.id)\n              .collection(\"cellsRows\")\n              .doc(cellsRowValue.id)\n              .update({ cells: newCells });\n          });\n      });\n\n      dispatch({\n        type: ADD_TABLE,\n        table: { id: table.id, name, description },\n      });\n    });\n  };\n}\n\nexport function addTable(name, description) {\n  return async (dispatch) => {\n    const ref = db.collection(\"tables\");\n    await ref.add({ name, description }).then((table) => {\n      const cellsRows = getEmptyTableCells(table.id);\n      cellsRows.forEach((cellsRow) => {\n        ref\n          .doc(table.id)\n          .collection(\"cellsRows\")\n          .add({\n            tableId: cellsRow.tableId,\n            rowIndex: cellsRow.rowIndex,\n          })\n          .then((cellsRowValue) => {\n            const newCells = [];\n            cellsRow.cells.forEach((cell) =>\n              newCells.push({\n                ...cell,\n                tableId: table.id,\n                cellsRowId: cellsRowValue.id,\n              })\n            );\n            ref\n              .doc(table.id)\n              .collection(\"cellsRows\")\n              .doc(cellsRowValue.id)\n              .update({ cells: newCells });\n          });\n      });\n\n      dispatch({\n        type: ADD_TABLE,\n        table: { id: table.id, name, description },\n      });\n    });\n  };\n}\n\nexport function deleteTable(tableId, cellsRows) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_TABLE });\n    try {\n      var ref = db.collection(\"tables\").doc(tableId);\n      cellsRows.forEach((row) => {\n        ref.collection(\"cellsRows\").doc(row.id).delete();\n      });\n      ref.delete();\n      dispatch({ type: DELETE_TABLE_SUCCESS, tableId });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: DELETE_TABLE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setBigImage(cell) {\n  return async (dispatch) => {\n    storage\n      .ref(cell.bigImagePath)\n      .getDownloadURL()\n      .then((image) => {\n        dispatch({ type: SET_BIG_IMAGE, image, cell });\n      })\n      .catch(() => {\n        console.log(\"error\");\n      });\n  };\n}\n\nexport function setSelectedTable(table) {\n  return async (dispatch) => {\n    dispatch({ type: SET_SELECTED_TABLE, table });\n  };\n}\n","export const SIGN_IN = \"user/SIGN_IN\";\nexport const SIGN_IN_SUCCESS = \"user/SIGN_IN_SUCCESS\";\nexport const SIGN_IN_FAILED = \"user/SIGN_IN_FAILED\";\nexport const GET_USERS = \"user/GET_USERS\";\nexport const GET_USERS_SUCCESS = \"user/GET_USERS_SUCCESS\";\nexport const GET_USERS_FAILED = \"user/GET_USERS_FAILED\";\nexport const ADD_TABLE_TO_USER = \"user/ADD_TABLE_TO_USER\";\nexport const ADD_TABLE_TO_USER_SUCCESS = \"user/ADD_TABLE_TO_USER_SUCCESS\";\nexport const ADD_TABLE_TO_USER_FAILED = \"user/ADD_TABLE_TO_USER_FAILED\";\n","import { makeStyles } from \"@material-ui/core\";\nimport { Card, Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport TablesListItem from \"./TablesListItem\";\nimport { useEffect, useState } from \"react\";\nimport { getTables } from \"../../state/actions/tables\";\nimport { getUsers } from \"../../state/actions/user\";\nimport {\n  showRaspPopup,\n  showDevicesPopup,\n  showCreateTablePopup,\n} from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    maxWidth: \"150px\",\n    flex: 1,\n  },\n  raspberrybutton: {\n    height: \"35px\",\n    color: \"white\",\n    background: \"black\",\n    fontSize: \"1em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"#FFFFFF\",\n    borderWidth: \"1px\",\n    margin: \"0px auto 5px auto\",\n    borderStyle: \"solid\",\n    \"&:hover\": {\n      color: \"black\",\n      background: \"white\",\n      borderColor: \"black\",\n    },\n  },\n  iconmenubutton: {\n    height: \"35px\",\n    color: \"black\",\n    fontSize: \"2em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"#FFFFFF\",\n    borderWidth: \"1px\",\n    margin: \"0px auto 5px auto\",\n    borderStyle: \"solid\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  text: {\n    textAlign: \"center\",\n    margin: \"5px\",\n  },\n});\n\nconst TablesList = () => {\n  const [didGetUsers, setDidGetUsers] = useState(false);\n  const classes = useStyles();\n  const tables = useSelector((store) => store.tables.tables);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTables());\n    if (!didGetUsers) {\n      dispatch(getUsers());\n      setDidGetUsers(true);\n    }\n  }, [dispatch, didGetUsers]);\n\n  const toggleRaspPopup = () => {\n    dispatch(showRaspPopup());\n  };\n\n  const toggleDevicesPopup = () => {\n    dispatch(showDevicesPopup());\n  };\n\n  const showTableNamePopup = () => {\n    dispatch(showCreateTablePopup());\n  };\n\n  return (\n    <Card className={classes.card}>\n      <Button className={classes.raspberrybutton} onClick={toggleDevicesPopup}>\n        SHOW SESSIONS\n      </Button>\n      <Button className={classes.raspberrybutton} onClick={toggleRaspPopup}>\n        MAP RASPBERRY\n      </Button>\n      <h3 className={classes.text}>Tables</h3>\n      <Button className={classes.iconmenubutton} onClick={showTableNamePopup}>\n        <AddIcon />\n      </Button>\n      {tables.map((item) => (\n        <TablesListItem item={item} key={tables.indexOf(item)} />\n      ))}\n    </Card>\n  );\n};\nexport default TablesList;\n","import {\n  SIGN_IN,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAILED,\n  GET_USERS,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILED,\n  ADD_TABLE_TO_USER,\n  ADD_TABLE_TO_USER_SUCCESS,\n  ADD_TABLE_TO_USER_FAILED,\n} from \"../actionTypes/user\";\nimport { auth, db } from \"../../firebase\";\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    dispatch({ type: SIGN_IN });\n    try {\n      auth\n        .signInWithEmailAndPassword(user.email, user.password)\n        .then((value) => {\n          db.collection(\"users\")\n            .doc(value.user.uid)\n            .get()\n            .then((snapshot) => {\n              const dbUser = snapshot.data();\n              if (dbUser.role === \"admin\") {\n                dispatch({ type: SIGN_IN_SUCCESS, user: dbUser });\n              } else {\n                dispatch({ type: SIGN_IN_FAILED });\n              }\n            });\n        });\n    } catch (e) {\n      dispatch({ type: SIGN_IN_FAILED });\n    }\n  };\n}\n\nexport function getUsers() {\n  return async (dispatch) => {\n    dispatch({ type: GET_USERS });\n    try {\n      db.collection(\"users\")\n        .get()\n        .then((snapshot) => {\n          const data = [];\n          snapshot.forEach((snap) => {\n            data.push({ ...snap.data(), id: snap.id });\n          });\n          dispatch({ type: GET_USERS_SUCCESS, data });\n        });\n    } catch (e) {\n      dispatch({ type: GET_USERS_FAILED });\n    }\n  };\n}\n\nexport function addTableToUser(user, table) {\n  return async (dispatch) => {\n    dispatch({ type: ADD_TABLE_TO_USER });\n    try {\n      const ref = db.collection(\"users\").doc(user.id).collection(\"tables\");\n      ref.get().then((snapshots) => {\n        ref.add({ tableId: table.id, tableOrder: snapshots.size });\n        dispatch({ type: ADD_TABLE_TO_USER_SUCCESS });\n      });\n    } catch (e) {\n      dispatch({ type: ADD_TABLE_TO_USER_FAILED });\n    }\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {\n  showEmptyCellPopup,\n  showImagePopup,\n} from \"../../../state/actions/popups\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { setBigImage } from \"../../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  cell: {\n    height: \"50px\",\n    width: \"100px\",\n    display: \"table-cell\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n  },\n});\n\nconst EmptyCell = ({ cell, cellsRow }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell && cell.bigImagePath !== undefined) {\n      dispatch(setBigImage(cell));\n    }\n  }, [cell, dispatch]);\n\n  const action = () => {\n    if (cell.type === \"empty\") {\n      dispatch(showEmptyCellPopup(cell, cellsRow));\n    } else {\n      dispatch(showImagePopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.type === \"empty\" ? \"\" : \"image\"}\n    </div>\n  );\n};\nEmptyCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n};\nexport default EmptyCell;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  showActionPopup,\n  showInfoPopup,\n  showNoTypePopup,\n  cellToUpdateCustomCellSelected,\n} from \"../../../state/actions/popups\";\nimport { addSelectingCell } from \"../../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  cell: {\n    background: (props) => props.color,\n    borderLeftWidth: (props) => props.left + \"px\",\n    borderRightWidth: (props) => props.right + \"px\",\n    borderTopWidth: (props) => props.top + \"px\",\n    borderBottomWidth: (props) => props.bottom + \"px\",\n    borderTopColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderRightColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderLeftColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderBottomColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    height: \"50px\",\n    width: \"100px\",\n    borderLeftStyle: \"solid\",\n    borderRightStyle: \"solid\",\n    borderTopStyle: \"solid\",\n    borderBottomStyle: \"solid\",\n    alignContent: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    display: \"table-cell\",\n    verticalAlign: \"middle\",\n  },\n  text: {\n    fontSize: \"10px\",\n    margin: \"0px\",\n    lineHeight: \"1.1\",\n    fontWeight: \"bold\",\n  },\n});\n\nconst Cell = ({ cell, cellsRow, isCustomCell }) => {\n  const classes = useStyles({\n    left: cell.leftBorder,\n    right: cell.rightBorder,\n    top: cell.topBorder,\n    bottom: cell.bottomBorder,\n    color: cell.color,\n    isCustomCell,\n  });\n  const cellToUpdate = useSelector((store) => store.popups.cellToUpdate);\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const action = () => {\n    if (isSelecting) {\n      dispatch(addSelectingCell(cell));\n    } else if (cellToUpdate !== undefined) {\n      if (\n        !(\n          cellToUpdate.cell.columnIndex === cell.columnIndex &&\n          cellToUpdate.cell.rowIndex === cell.rowIndex\n        ) &&\n        cell.type === \"info\"\n      ) {\n        dispatch(cellToUpdateCustomCellSelected(cell));\n      }\n    } else if (cell.type === \"notype\") {\n      dispatch(showNoTypePopup(cell, cellsRow));\n    } else if (cell.type === \"info\") {\n      dispatch(showInfoPopup(cell, cellsRow));\n    } else if (cell.type === \"action\") {\n      dispatch(showActionPopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.sumAll && (\n        <img\n          style={{\n            width: \"25px\",\n            height: \"25px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n          src={\"/dao.png\"}\n          alt=\"all\"\n        />\n      )}\n      {cell.name && !cell.sumAll && (\n        <div\n          dangerouslySetInnerHTML={{\n            __html: cell.name\n              .replaceAll(\"<p>\", \"<span>\")\n              .replaceAll(\"</p>\", \"</span><br/>\"),\n          }}\n        ></div>\n      )}\n    </div>\n  );\n};\nCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n  isCustomCell: PropTypes.bool,\n};\nexport default Cell;\n","import PropTypes from \"prop-types\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport EmptyCell from \"./cells/EmptyCell\";\nimport Cell from \"./cells/Cell\";\nimport { addSelectingRowCells } from \"../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  row: {\n    display: \"table-row\",\n  },\n  selectRowButton: {\n    background: \"blue\",\n    fontWeight: \"bold\",\n    color: \"white\",\n    width: \"50px\",\n    height: \"50px\",\n    border: \"1px solid white\",\n    \"&:hover\": {\n      color: \"black\",\n    },\n  },\n});\n\nconst CellsRow = ({ cellsRow }) => {\n  const classes = useStyles();\n  const cellToUpdateCustomCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRowLetsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  const dispatch = useDispatch();\n\n  const selectRow = () => {\n    dispatch(addSelectingRowCells(cellsRow.rowIndex));\n  };\n\n  return (\n    <div className={classes.row}>\n      {letsUpdate && cellsRowLetsUpdate && <div></div>}\n      {isSelecting && (\n        <Button onClick={selectRow} className={classes.selectRowButton}>\n          {\">\"}\n        </Button>\n      )}\n      {cellsRow &&\n        cellsRow.cells &&\n        cellsRow.cells\n          .sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1))\n          .map((cell) =>\n            cell.type === \"empty\" || cell.type === \"image\" ? (\n              <EmptyCell\n                cell={cell}\n                cellsRow={cellsRow}\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            ) : (\n              <Cell\n                cell={cell}\n                cellsRow={cellsRow}\n                isCustomCell={\n                  (cellToUpdateCustomCells &&\n                    cellToUpdateCustomCells.includes(cell)) ||\n                  (selectedCells && selectedCells.includes(cell))\n                }\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            )\n          )}\n    </div>\n  );\n};\nCellsRow.propTypes = {\n  cellsRow: PropTypes.object,\n};\nexport default CellsRow;\n","export const UPDATE_CELL = \"cell/UPDATE_CELL\";\nexport const UPDATE_CELL_SUCCESS = \"cell/UPDATE_CELL_SUCCESS\";\nexport const UPDATE_CELL_FAILED = \"cell/UPDATE_CELL_FAILED\";\nexport const GET_CELL_FILE = \"cell/GET_CELL_FILE\";\nexport const GET_CELL_FILE_SUCCESS = \"cell/GET_CELL_FILE_SUCCESS\";\nexport const GET_CELL_FILE_FAILED = \"cell/GET_CELL_FILE_FAILED\";\nexport const GET_CELL_NAME_FILE = \"cell/GET_CELL_NAME_FILE\";\nexport const GET_CELL_NAME_FILE_SUCCESS = \"cell/GET_CELL_NAME_FILE_SUCCESS\";\nexport const GET_CELL_NAME_FILE_FAILED = \"cell/GET_CELL_NAME_FILE_FAILED\";\nexport const GET_CELL_IMAGE_FILE = \"cell/GET_CELL_IMAGE_FILE\";\nexport const GET_CELL_IMAGE_FILE_SUCCESS = \"cell/GET_CELL_IMAGE_FILE_SUCCESS\";\nexport const GET_CELL_IMAGE_FILE_FAILED = \"cell/GET_CELL_IMAGE_FILE_FAILED\";","import { db, storage } from \"../../firebase\";\nimport {\n  UPDATE_CELL,\n  UPDATE_CELL_SUCCESS,\n  UPDATE_CELL_FAILED,\n  GET_CELL_FILE,\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_FILE_FAILED,\n  GET_CELL_NAME_FILE,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_FAILED,\n  GET_CELL_IMAGE_FILE,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_FAILED,\n} from \"../actionTypes/cell\";\nimport { CLOSE_POPUP, CUSTOM_CELLS_SUBMITED } from \"../actionTypes/popups\";\n\nexport function updateCell(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== cell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(cell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell,\n      });\n      dispatch({ type: CUSTOM_CELLS_SUBMITED });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function updateImageCell(cell, file, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let bigImagePath =\n        file !== undefined\n          ? \"/\" +\n            cell.tableId +\n            \"/\" +\n            cell.cellsRowId +\n            \"/\" +\n            cell.columnIndex +\n            \"/\" +\n            file.name\n          : cell.bigImagePath;\n      if (file !== undefined) {\n        await storage.ref(bigImagePath).put(file);\n      }\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, bigImagePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        e,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function getCellImageFile(bigImagePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_IMAGE_FILE });\n    try {\n      storage\n        .ref(bigImagePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_IMAGE_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_IMAGE_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellNameFile(nameFilePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_NAME_FILE });\n    try {\n      storage\n        .ref(nameFilePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_NAME_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_NAME_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellFile(filePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_FILE });\n    try {\n      storage\n        .ref(filePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function updateInfoCell(cell, file, nameFile, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let filePath = \"\";\n      let nameFilePath = \"\";\n      if (file !== undefined) {\n        filePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          file.name;\n        await storage.ref(filePath).put(file);\n      } else if (cell.filePath && cell.filePath !== \"\") {\n        filePath = cell.filePath;\n      }\n      if (nameFile !== undefined) {\n        nameFilePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          nameFile.name;\n        await storage.ref(nameFilePath).put(nameFile);\n      } else if (cell.nameFilePath && cell.nameFilePath !== \"\") {\n        nameFilePath = cell.nameFilePath;\n      }\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, filePath, nameFilePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      console.log(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      console.log(error);\n      console.log(e);\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cancelCustomCells } from \"../../../state/actions/popups\";\nimport { updateCell } from \"../../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  container: {\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    background: \"white\",\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsInfo = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const customCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const cell = useSelector((store) => store.popups.cellToUpdate);\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const submitCustomCellsF = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell.cell,\n          customCells: convertCustomCells(customCells),\n        },\n        cellsRow\n      )\n    );\n  };\n\n  const convertCustomCells = (cells) => {\n    const data = [];\n    cells.forEach((element) => {\n      data.push({\n        columnIndex: element.columnIndex,\n        rowIndex: element.rowIndex,\n      });\n    });\n    return data;\n  };\n\n  const cancelCustomCellsF = () => {\n    dispatch(cancelCustomCells());\n  };\n\n  const convertCustomCellsName = (text) => {\n    return text.split(\"<br />\").join(\" \");\n  };\n\n  return customCells !== undefined ? (\n    <div className={classes.container}>\n      {letsUpdate && <div></div>}\n      <h2>Select cells</h2>\n      <div className={classes.cont}>\n        {customCells.map((cell, ix) => (\n          <p key={ix} className={classes.text}>\n            {cell.name === null ? \"\" : convertCustomCellsName(cell.name)}\n          </p>\n        ))}\n        {customCells.length === 0 ? (\n          <p className={classes.text}>No cells are selected</p>\n        ) : (\n          <p />\n        )}\n      </div>\n      <Button className={classes.cancelButton} onClick={cancelCustomCellsF}>\n        Cancel\n      </Button>\n      <Button className={classes.submitButton} onClick={submitCustomCellsF}>\n        Submit custom cells\n      </Button>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\nexport default SelectedCellsInfo;\n","import { useSelector } from \"react-redux\";\n\nconst BigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const cell = useSelector((store) => store.tables.bigImageCell);\n\n  return image !== undefined ? (\n    <img\n      style={{\n        position: \"absolute\",\n        top: `${\n          cell.rowIndex * 50 +\n          140 +\n          64 +\n          56 +\n          parseInt(cell.bigImageTopMargin) +\n          25 -\n          cell.bigImageHeight / 2\n        }px`,\n        left: `${\n          cell.columnIndex * 100 +\n          180 +\n          parseInt(cell.bigImageLeftMargin) +\n          50 -\n          cell.bigImageWidth / 2\n        }px`,\n      }}\n      src={image}\n      height={cell.bigImageHeight}\n      width={cell.bigImageWidth}\n      alt=\"big\"\n    />\n  ) : (\n    <div></div>\n  );\n};\nexport default BigImage;\n","import { Button } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeBigImage } from \"../../../state/actions/tables\";\n\nconst RemoveBigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const dispatch = useDispatch();\n\n  const removeBigImageFromTable = () => {\n    dispatch(removeBigImage());\n  };\n\n  return image !== undefined ? (\n    <Button\n      style={{\n        color: \"white\",\n        background: \"red\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\",\n      }}\n      onClick={removeBigImageFromTable}\n    >\n      TEMPORARILY REMOVE BIG IMAGE ( UNTIL REFRESH )\n    </Button>\n  ) : (\n    <div></div>\n  );\n};\nexport default RemoveBigImage;\n","import { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addSelectingAllCells,\n  cancelIsSelecting,\n} from \"../../../state/actions/cellsRows\";\nimport { showFormatCellsPopup } from \"../../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"20px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsFormat = () => {\n  const classes = useStyles();\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const letsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n  const dispatch = useDispatch();\n\n  const convertCellsName = (text) => {\n    return text ? text.split(\"<br />\").join(\" \") : \"\";\n  };\n\n  const handleFormat = () => {\n    dispatch(showFormatCellsPopup());\n  };\n\n  const handleSelectAll = () => {\n    dispatch(addSelectingAllCells());\n  };\n\n  const handleCancel = () => {\n    dispatch(cancelIsSelecting());\n  };\n\n  return (\n    <div>\n      <Button className={classes.formatButton} onClick={handleFormat}>\n        Format Cells\n      </Button>\n      <Button className={classes.formatButton} onClick={handleSelectAll}>\n        Select All\n      </Button>\n      <Button className={classes.cancelButton} onClick={handleCancel}>\n        CANCEL\n      </Button>\n      <h2>Select cells</h2>\n      {letsUpdate && <div></div>}\n      <div className={classes.cont}>\n        {selectedCells &&\n          selectedCells.map((cell, ix) => (\n            <p key={ix} className={classes.text}>\n              {cell.name === null ? \"\" : convertCellsName(cell.name)}\n            </p>\n          ))}\n      </div>\n      {!selectedCells || selectedCells.length === 0 ? (\n        <p>No cells are selected</p>\n      ) : (\n        <span />\n      )}\n    </div>\n  );\n};\nexport default SelectedCellsFormat;\n","import { Button, Card, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCellsRows, setIsSelecting } from \"../../state/actions/cellsRows\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport CellsRow from \"./CellsRow\";\nimport {\n  deleteTable,\n  setTableJustCreatedFalse,\n} from \"../../state/actions/tables\";\nimport SelectedCellsInfo from \"./utils/SelectedCellsInfo\";\nimport BigImage from \"./utils/BigImage\";\nimport RemoveBigImage from \"./utils/RemoveBigImage\";\nimport SelectedCellsFormat from \"./utils/SelectedCellsFormat\";\nimport {\n  showAddToUserPopup,\n  showCreateTablePopup,\n} from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    height: \"20px\",\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  addToUserButton: {\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst Table = ({ table }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n  const tableJustCreated = useSelector(\n    (store) => store.tables.tableJustCreated\n  );\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const timeoutFinished = useCallback(() => {\n    dispatch(getCellsRows(table.id));\n    dispatch(setTableJustCreatedFalse());\n  }, [dispatch, table]);\n\n  useEffect(() => {\n    if (!tableJustCreated) {\n      if (!loading) {\n        dispatch(getCellsRows(table.id));\n      }\n      setLoading(false);\n    } else {\n      setLoading(true);\n      setTimeout(timeoutFinished, 3000);\n    }\n  }, [dispatch, table, tableJustCreated, loading, timeoutFinished]);\n\n  const handleDelete = () => {\n    dispatch(deleteTable(table.id, cellsRows));\n  };\n\n  const handleAddToUser = () => {\n    dispatch(showAddToUserPopup());\n  };\n\n  const handleDuplicateTable = () => {\n    dispatch(showCreateTablePopup(cellsRows));\n  };\n\n  const handleSelect = () => {\n    dispatch(setIsSelecting());\n  };\n\n  return (\n    <Card className={classes.card}>\n      <h2 className={classes.name}>{table.name}</h2>\n      <div\n        dangerouslySetInnerHTML={{\n          __html: table.description\n            .replaceAll(\"<p\", \"<span\")\n            .replaceAll(\"</p>\", \"</span><br/>\"),\n        }}\n      ></div>\n      <RemoveBigImage />\n      <SelectedCellsInfo />\n      {loading && <CircularProgress />}\n      {!loading && (\n        <div>\n          {!isSelecting && (\n            <Button className={classes.formatButton} onClick={handleSelect}>\n              Select Cells\n            </Button>\n          )}\n          {isSelecting && <SelectedCellsFormat />}\n          <div className={classes.cellContainer}>\n            <BigImage />\n            {cellsRows.map((cellsRow) => (\n              <CellsRow cellsRow={cellsRow} key={cellsRows.indexOf(cellsRow)} />\n            ))}\n          </div>\n          <div>\n            <Button\n              className={classes.addToUserButton}\n              onClick={handleAddToUser}\n            >\n              ADD TABLE TO USER\n            </Button>\n            <Button\n              className={classes.addToUserButton}\n              onClick={handleDuplicateTable}\n            >\n              DUPLICATE TABLE\n            </Button>\n            <Button className={classes.deleteButton} onClick={handleDelete}>\n              Delete\n            </Button>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\nTable.propTypes = {\n  table: PropTypes.object,\n};\nexport default Table;\n","import React from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReactQuill from \"react-quill\";\n\nimport {\n  addTable,\n  addTemplateTable,\n  duplicateTable,\n} from \"../../state/actions/tables\";\nimport { closePopup } from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    marginTop: \"60px\",\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginRight: \"20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst TableInfoPopup = () => {\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const cellsRowsToDuplicate = useSelector(\n    (store) => store.popups.cellsRowsToDuplicate\n  );\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    if (cellsRowsToDuplicate !== undefined) {\n      dispatch(duplicateTable(name, description, cellsRowsToDuplicate));\n    } else {\n      dispatch(addTable(name, description));\n    }\n    handleClose();\n  };\n\n  const handleTemplateSubmit = () => {\n    dispatch(addTemplateTable(name, description));\n    handleClose();\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleDescriptionChange = (value) => {\n    setDescription(value);\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2>\n          {cellsRowsToDuplicate === undefined\n            ? \"Create table\"\n            : \"Duplicate table\"}\n        </h2>\n        <TextField\n          required\n          fullWidth\n          label=\"Name\"\n          name=\"name\"\n          variant=\"outlined\"\n          placeholder=\"Name\"\n          value={name}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleNameChange}\n        />\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter description:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          {cellsRowsToDuplicate === undefined ? \"Create Default\" : \"Duplicate\"}\n        </Button>\n        {cellsRowsToDuplicate === undefined && (\n          <Button className={classes.button} onClick={handleTemplateSubmit}>\n            Create Template 1\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TableInfoPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useEffect } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nimport { beginCustomSelect, closePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n});\n\nconst ActionCellPopup = () => {\n  const [sumAll, setSumAll] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [rows, setRows] = React.useState(\"\");\n  const [actionType, setActionType] = React.useState(\"\");\n  const [typeActionType, setTypeActionType] = React.useState(\"\");\n  const [typeActionTypeName, setTypeActionTypeName] = React.useState(\"\");\n  const [fontSize, setFontSize] = React.useState(\"\");\n  const [baseTen, setBaseTen] = React.useState(\"\");\n  const [baseThree, setBaseThree] = React.useState(\"\");\n  const [baseHundred, setBaseHundred] = React.useState(\"\");\n  const [baseFour, setBaseFour] = React.useState(\"\");\n  const [databaseID, setDatabaseID] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      if (cell.sumAll) {\n        setSumAll(cell.sumAll);\n      } else {\n        setName(cell.name === undefined ? \"\" : cell.name);\n        setFontSize(cell.fontSize);\n        setActionType(cell.actionType);\n        setTypeActionType(cell.typeActionType);\n        setTypeActionTypeName(cell.typeActionTypeName);\n        setColor(cell.color);\n        setRows(cell.rows);\n        setBaseTen(cell.baseTen);\n        setBaseFour(cell.baseFour);\n        setBaseHundred(cell.baseHundred);\n        setBaseThree(cell.baseThree);\n        setDatabaseID(cell.databaseID);\n      }\n    }\n  }, [cell]);\n\n  const actionTypes = [\"selectrows\", \"selecttype\", \"custom\"];\n  const typeActionTypes = [\"selecttypeall\", \"selecttyperows\"];\n  const actionTypesNames = [\"Select Rows\", \"Select Type\", \"Custom\"];\n  const typeActionTypesNames = [\"Select All Cells of Type\", \"Select Type Rows\"];\n\n  const handleNameChange = (value) => {\n    setName(value);\n  };\n\n  const handleTypeNameChange = (event) => {\n    setTypeActionTypeName(event.target.value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (actionType === \"custom\") {\n      dispatch(\n        beginCustomSelect({\n          cell: {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            fontSize: fontSize === undefined ? \"\" : fontSize,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n            baseTen: baseTen === undefined ? \"\" : baseTen,\n            baseFour: baseFour === undefined ? \"\" : baseFour,\n            baseHundred: baseHundred === undefined ? \"\" : baseHundred,\n            baseThree: baseThree === undefined ? \"\" : baseThree,\n            databaseID: databaseID === undefined ? \"\" : databaseID,\n          },\n        })\n      );\n    } else {\n      dispatch(\n        updateCell(\n          {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            fontSize: fontSize === undefined ? \"\" : fontSize,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n            baseTen: baseTen === undefined ? \"\" : baseTen,\n            baseFour: baseFour === undefined ? \"\" : baseFour,\n            baseHundred: baseHundred === undefined ? \"\" : baseHundred,\n            baseThree: baseThree === undefined ? \"\" : baseThree,\n            databaseID: databaseID === undefined ? \"\" : databaseID,\n          },\n          cellsRow\n        )\n      );\n      handleClose();\n    }\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          color: \"white\",\n          actionType: \"\",\n          typeActionType: \"\",\n          typeActionTypeName: \"\",\n          topBorder: 2,\n          bottomBorder: 2,\n          leftBorder: 2,\n          rightBorder: 2,\n          fontSize: \"\",\n          rows: \"\",\n          sumAll: false,\n          type: \"notype\",\n          baseTen: \"\",\n          baseHundred: \"\",\n          baseThree: \"\",\n          baseFour: \"\",\n          databaseId: \"\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleRowsChange = (event) => {\n    setRows(event.target.value);\n  };\n\n  const handleActionTypeChange = (event) => {\n    setActionType(event.target.value);\n  };\n\n  const handleTypeActionTypeChange = (event) => {\n    setTypeActionType(event.target.value);\n  };\n\n  const handleSumAll = () => {\n    setSumAll(!sumAll);\n  };\n\n  const handleFontSize = (event) => {\n    setFontSize(event.target.value);\n  };\n\n  const handleBaseTenChange = (event) => {\n    setBaseTen(event.target.value);\n  };\n\n  const handleBaseFourChange = (event) => {\n    setBaseFour(event.target.value);\n  };\n\n  const handleBaseThreeChange = (event) => {\n    setBaseThree(event.target.value);\n  };\n\n  const handleBaseHundredChange = (event) => {\n    setBaseHundred(event.target.value);\n  };\n\n  const handleDatabaseIDChange = (event) => {\n    setDatabaseID(event.target.value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Action</h2>\n        <div>\n          <FormControlLabel\n            value={sumAll}\n            control={<Checkbox color=\"default\" onClick={handleSumAll} />}\n            label=\"Sum all?\"\n            checked={sumAll}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!sumAll && (\n          <div>\n            <div className={classes.quillContainer}>\n              <p className={classes.text}>Enter name:</p>\n              <ReactQuill\n                theme=\"snow\"\n                className={classes.editor}\n                value={name}\n                onChange={handleNameChange}\n              />\n            </div>\n            <h4 style={{ marginTop: \"60px\" }}>\n              Hint: Standard mobile font is 12. 3 Rows can pass into cell.\n            </h4>\n            <TextField\n              fullWidth\n              label=\"Font size\"\n              name=\"font_size\"\n              variant=\"outlined\"\n              placeholder=\"Font size\"\n              value={fontSize}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleFontSize}\n            />\n            <h3>Format cell</h3>\n            <TextField\n              fullWidth\n              label=\"Color\"\n              name=\"color\"\n              variant=\"outlined\"\n              placeholder=\"Cell color\"\n              value={color}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleColorChange}\n            />\n            <h2>Bluetooth</h2>\n            <TextField\n              fullWidth\n              label=\"Base 10\"\n              name=\"base10\"\n              variant=\"outlined\"\n              placeholder=\"Base 10\"\n              value={baseTen}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleBaseTenChange}\n            />\n            <TextField\n              fullWidth\n              label=\"Base 44\"\n              name=\"base44\"\n              variant=\"outlined\"\n              placeholder=\"Base 44\"\n              value={baseFour}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleBaseFourChange}\n            />\n            <TextField\n              fullWidth\n              label=\"Base 100\"\n              name=\"base100\"\n              variant=\"outlined\"\n              placeholder=\"Base 100\"\n              value={baseHundred}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleBaseHundredChange}\n            />\n            <TextField\n              fullWidth\n              label=\"Base 336\"\n              name=\"base336\"\n              variant=\"outlined\"\n              placeholder=\"Base 336\"\n              value={baseThree}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleBaseThreeChange}\n            />\n            <TextField\n              fullWidth\n              label=\"Database ID\"\n              name=\"databaseID\"\n              variant=\"outlined\"\n              placeholder=\"Database ID\"\n              value={databaseID}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleDatabaseIDChange}\n            />\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"label\">Action Type</InputLabel>\n              <Select\n                id=\"select\"\n                value={actionType || \"\"}\n                onChange={handleActionTypeChange}\n              >\n                {actionTypes.map((item, ix) => (\n                  <MenuItem key={item} value={item}>\n                    {actionTypesNames[ix]}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            {actionType === actionTypes[1] && (\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"label\">Action Type</InputLabel>\n                <Select\n                  id=\"select\"\n                  value={typeActionType || \"\"}\n                  onChange={handleTypeActionTypeChange}\n                >\n                  {typeActionTypes.map((item, ix) => (\n                    <MenuItem key={item} value={item}>\n                      {typeActionTypesNames[ix]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n            {actionType === actionTypes[1] && (\n              <TextField\n                fullWidth\n                label=\"Type name\"\n                name=\"Type name\"\n                variant=\"outlined\"\n                placeholder=\"Enter type name\"\n                value={typeActionTypeName || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleTypeNameChange}\n              />\n            )}\n            {(actionType === actionTypes[0] ||\n              (actionType === actionTypes[1] &&\n                typeActionType === typeActionTypes[1])) && (\n              <TextField\n                fullWidth\n                label=\"Rows\"\n                name=\"rows\"\n                variant=\"outlined\"\n                placeholder=\"Enter row indexes separated with Whitespaces ( Begining with 0 )\"\n                value={rows || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleRowsChange}\n              />\n            )}\n          </div>\n        )}\n        {cell.type !== \"notype\" && (\n          <Button className={classes.noTypeButton} onClick={handleNoTypeSubmit}>\n            MAKE NO TYPE\n          </Button>\n        )}\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Checkbox, FormControlLabel, makeStyles } from \"@material-ui/core\";\n\nimport { closePopup, submitNoTypePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst NoTypeCellPopup = () => {\n  const [isAction, setIsAction] = React.useState(false);\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleIsAction = () => {\n    setIsAction(!isAction);\n  };\n\n  const handleSubmit = () => {\n    dispatch(submitNoTypePopup(isAction));\n  };\n\n  const handleMakeEmptySubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"empty\" }, cellsRow));\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Select cell type</h2>\n        <div>\n          <FormControlLabel\n            value={isAction}\n            control={<Checkbox color=\"default\" onClick={handleIsAction} />}\n            label=\"Is it an action cell?\"\n            checked={isAction}\n            labelPlacement=\"start\"\n          />\n        </div>\n        <Button\n          className={classes.makeEmptyButton}\n          onClick={handleMakeEmptySubmit}\n        >\n          Make Empty\n        </Button>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit Type Cell\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default NoTypeCellPopup;\n","export const SHOW_SNACKBAR = \"snackbar/SHOW_SNACKBAR\";\nexport const CLOSE_SNACKBAR = \"snackbar/CLOSE_SNACKBAR\";\n","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nexport function showSnackbar(message) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_SNACKBAR, message });\n  };\n}\n\nexport function closeSnackbar() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_SNACKBAR });\n  };\n}\n","import React from \"react\";\nimport { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport {\n  getCellFile,\n  getCellNameFile,\n  updateInfoCell,\n  updateCell,\n} from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  borderInputcontainer: {\n    marginTop: \"50px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    marginBottom: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst InfoCellPopup = () => {\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [typeForAction, setTypeForAction] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [nameFile, setNameFile] = React.useState(undefined);\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [baseTen, setBaseTen] = React.useState(\"\");\n  const [baseThree, setBaseThree] = React.useState(\"\");\n  const [baseHundred, setBaseHundred] = React.useState(\"\");\n  const [baseFour, setBaseFour] = React.useState(\"\");\n  const [databaseID, setDatabaseID] = React.useState(\"\");\n  const [fontSize, setFontSize] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellFile);\n  const cellNameFile = useSelector((store) => store.popups.cellNameFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setName(cell.name === undefined ? \"\" : cell.name);\n      setColor(cell.color);\n      setFontSize(cell.fontSize);\n      setDescription(cell.description === undefined ? \"\" : cell.description);\n      setTop(cell.topBorder);\n      setBottom(cell.bottomBorder);\n      setLeft(cell.leftBorder);\n      setRight(cell.rightBorder);\n      setBaseTen(cell.baseTen);\n      setBaseFour(cell.baseFour);\n      setBaseHundred(cell.baseHundred);\n      setBaseThree(cell.baseThree);\n      setDatabaseID(cell.databaseID);\n      if (cell.nameFilePath !== undefined && cell.nameFilePath !== \"\") {\n        dispatch(getCellNameFile(cell.nameFilePath));\n      }\n      if (cell.filePath !== undefined && cell.filePath !== \"\") {\n        dispatch(getCellFile(cell.filePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleSubmit = () => {\n    dispatch(\n      updateInfoCell(\n        {\n          ...cell,\n          name: name,\n          description: description === undefined ? \"\" : description,\n          color,\n          fontSize: fontSize === undefined ? null : fontSize,\n          typeForAction: typeForAction === undefined ? \"\" : typeForAction,\n          topBorder: top,\n          bottomBorder: bottom,\n          leftBorder: left,\n          rightBorder: right,\n          type: \"info\",\n          baseTen: baseTen === undefined ? \"\" : baseTen,\n          baseFour: baseFour === undefined ? \"\" : baseFour,\n          baseHundred: baseHundred === undefined ? \"\" : baseHundred,\n          baseThree: baseThree === undefined ? \"\" : baseThree,\n          databaseID: databaseID === undefined ? \"\" : databaseID,\n        },\n        file,\n        nameFile,\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleNameChange = (value) => {\n    setName(value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleDescriptionChange = (value) => {\n    setDescription(value);\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const nameFileLoaded = (loadedFile) => {\n    setNameFile(loadedFile);\n  };\n\n  const removeNameFile = () => {\n    setNameFile(undefined);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const handleTypeForAction = (event) => {\n    setTypeForAction(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBaseTenChange = (event) => {\n    setBaseTen(event.target.value);\n  };\n\n  const handleBaseFourChange = (event) => {\n    setBaseFour(event.target.value);\n  };\n\n  const handleBaseThreeChange = (event) => {\n    setBaseThree(event.target.value);\n  };\n\n  const handleBaseHundredChange = (event) => {\n    setBaseHundred(event.target.value);\n  };\n\n  const handleDatabaseIDChange = (event) => {\n    setDatabaseID(event.target.value);\n  };\n\n  const handleFontSize = (event) => {\n    setFontSize(event.target.value);\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          description: \"\",\n          color: \"white\",\n          typeForAction: \"\",\n          topBorder: 2,\n          bottomBorder: 2,\n          leftBorder: 2,\n          rightBorder: 2,\n          type: \"notype\",\n          file: \"\",\n          nameFile: \"\",\n          fontSize: \"\",\n          baseTen: \"\",\n          baseHundred: \"\",\n          baseThree: \"\",\n          baseFour: \"\",\n          databaseId: \"\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Information</h2>\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter name:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={name}\n            onChange={handleNameChange}\n          />\n        </div>\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={nameFileLoaded}\n          onError={showError}\n        >\n          <Button style={{ marginTop: \"60px\" }} className={classes.button}>\n            Click to upload NAME image\n          </Button>\n        </FilePicker>\n        {(nameFile || cellNameFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:\n            <strong>\n              {nameFile === undefined ? cellNameFile.name : nameFile.name}\n            </strong>\n            <button\n              className={classes.removeFileButton}\n              onClick={removeNameFile}\n            >\n              Remove\n            </button>\n          </div>\n        )}\n        <h4>Hint: Standard mobile font is 12. 3 Rows can pass into cell.</h4>\n        <TextField\n          fullWidth\n          label=\"Font size\"\n          name=\"font_size\"\n          variant=\"outlined\"\n          placeholder=\"Font size\"\n          value={fontSize}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleFontSize}\n        />\n        <h3>Format cell</h3>\n        <TextField\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Type for action\"\n          name=\"type_for_action\"\n          variant=\"outlined\"\n          placeholder=\"Type for action\"\n          value={typeForAction}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleTypeForAction}\n        />\n        <FilePicker\n          extensions={[\"pdf\", \"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.button}>Click to upload file</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded file:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter description:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <div className={classes.borderInputcontainer}>\n          <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n          <TextField\n            name=\"top\"\n            variant=\"outlined\"\n            label=\"Top\"\n            placeholder=\"Top\"\n            value={top}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleTopChange}\n          />\n          <TextField\n            label=\"Right\"\n            name=\"right\"\n            variant=\"outlined\"\n            placeholder=\"Right\"\n            value={right}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleRightChange}\n          />\n          <TextField\n            label=\"Bottom\"\n            name=\"bottom\"\n            variant=\"outlined\"\n            placeholder=\"Bottom\"\n            value={bottom}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleBottomChange}\n          />\n          <TextField\n            label=\"Left\"\n            name=\"left\"\n            variant=\"outlined\"\n            placeholder=\"Left\"\n            value={left}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleLeftChange}\n          />\n        </div>\n        <h2>Bluetooth</h2>\n        <TextField\n          fullWidth\n          label=\"Base 10\"\n          name=\"base10\"\n          variant=\"outlined\"\n          placeholder=\"Base 10\"\n          value={baseTen}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseTenChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 44\"\n          name=\"base44\"\n          variant=\"outlined\"\n          placeholder=\"Base 44\"\n          value={baseFour}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseFourChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 100\"\n          name=\"base100\"\n          variant=\"outlined\"\n          placeholder=\"Base 100\"\n          value={baseHundred}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseHundredChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 336\"\n          name=\"base336\"\n          variant=\"outlined\"\n          placeholder=\"Base 336\"\n          value={baseThree}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseThreeChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Database ID\"\n          name=\"databaseID\"\n          variant=\"outlined\"\n          placeholder=\"Database ID\"\n          value={databaseID}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleDatabaseIDChange}\n        />\n        <div>\n          {cell.type !== \"notype\" && (\n            <Button\n              className={classes.noTypeButton}\n              onClick={handleNoTypeSubmit}\n            >\n              MAKE NO TYPE\n            </Button>\n          )}\n          <Button className={classes.submitButton} onClick={handleSubmit}>\n            Submit\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default InfoCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { closePopup, showImagePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  notypeButton: {\n    border: \"1px solid black\",\n    background: \"blue\",\n    marginRight: \"20px\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst EmptyCellPopup = () => {\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"notype\" }, cellsRow));\n  };\n\n  const handleImageSubmit = () => {\n    dispatch(showImagePopup());\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <Button className={classes.notypeButton} onClick={handleSubmit}>\n          MAKE CELL NOTYPE\n        </Button>\n        <Button className={classes.button} onClick={handleImageSubmit}>\n          ADD IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default EmptyCellPopup;\n","import { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport {\n  updateImageCell,\n  getCellImageFile,\n  updateCell,\n} from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  fileButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  noTypeButton: {\n    background: \"red\",\n    marginLeft: \"10px\",\n    marginTop: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst ImageCellPopup = () => {\n  const [width, setWidth] = React.useState(\"\");\n  const [height, setHeight] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [leftMargin, setLeftMargin] = React.useState(\"\");\n  const [topMargin, setTopMargin] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellImageFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setHeight(cell.bigImageHeight === undefined ? \"\" : cell.bigImageHeight);\n      setWidth(cell.bigImageWidth === undefined ? \"\" : cell.bigImageWidth);\n      setLeftMargin(\n        cell.bigImageLeftMargin === undefined ? \"\" : cell.bigImageLeftMargin\n      );\n      setTopMargin(\n        cell.bigImageTopMargin === undefined ? \"\" : cell.bigImageTopMargin\n      );\n      if (\n        cell &&\n        cell.bigImagePath !== undefined &&\n        cell.bigImagePath !== null &&\n        cell.bigImagePath !== \"\"\n      ) {\n        dispatch(getCellImageFile(cell.bigImagePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleHeightChange = (event) => {\n    setHeight(event.target.value);\n  };\n\n  const handleTopMarginChange = (event) => {\n    setTopMargin(event.target.value);\n  };\n\n  const handleLeftMarginChange = (event) => {\n    setLeftMargin(event.target.value);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const handleSubmit = () => {\n    dispatch(\n      updateImageCell(\n        {\n          ...cell,\n          type: \"image\",\n          bigImageWidth: width,\n          bigImageHeight: height,\n          bigImageTopMargin: topMargin === \"\" ? 0 : topMargin,\n          bigImageLeftMargin: leftMargin === \"\" ? 0 : leftMargin,\n        },\n        file,\n        cellsRow\n      )\n    );\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          bigImageWidth: \"\",\n          bigImageHeight: \"\",\n          bigImageTopMargin: \"\",\n          bigImageLeftMargin: \"\",\n          bigImagePath: null,\n          name: \"\",\n          description: \"\",\n          color: \"white\",\n          typeForAction: \"\",\n          topBorder: 2,\n          bottomBorder: 2,\n          leftBorder: 2,\n          rightBorder: 2,\n          type: \"notype\",\n          file: \"\",\n          nameFile: \"\",\n          fontSize: \"\",\n          baseTen: \"\",\n          baseHundred: \"\",\n          baseThree: \"\",\n          baseFour: \"\",\n          databaseId: \"\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n          maxSize={100000}\n        >\n          <Button className={classes.fileButton}>Click to upload image</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <h3>Single cell width = 100 and height = 50</h3>\n        <TextField\n          fullWidth\n          label=\"Width\"\n          name=\"width\"\n          variant=\"outlined\"\n          placeholder=\"Enter width\"\n          value={width}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleWidthChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Height\"\n          name=\"height\"\n          variant=\"outlined\"\n          placeholder=\"Enter height\"\n          value={height}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleHeightChange}\n        />\n        <div style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>\n          <TextField\n            label=\"Top margin\"\n            name=\"topMargin\"\n            variant=\"outlined\"\n            placeholder=\"Top margin\"\n            value={topMargin}\n            style={{\n              marginRight: \"10px\",\n              maxWidth: \"140px\",\n            }}\n            onChange={handleTopMarginChange}\n          />\n          <TextField\n            label=\"Left margin\"\n            name=\"leftMargin\"\n            variant=\"outlined\"\n            placeholder=\"Left margin\"\n            value={leftMargin}\n            style={{\n              maxWidth: \"140px\",\n            }}\n            onChange={handleLeftMarginChange}\n          />\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          SUBMIT\n        </Button>\n        <Button className={classes.noTypeButton} onClick={handleNoTypeSubmit}>\n          MAKE NO TYPE\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default ImageCellPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { submitSelectingCells } from \"../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  borderInputcontainer: {\n    marginTop: \"10px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst FormatCellsPopup = () => {\n  const [color, setColor] = React.useState(\"\");\n  const [width, setWidth] = React.useState(\"\");\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [isBoxBorder, setIsBoxBorder] = React.useState(false);\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(\n      submitSelectingCells(\n        { color, top, bottom, left, right, isBoxBorder, width },\n        selectedCells,\n        cellsRows\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBoxBorder = () => {\n    setIsBoxBorder(!isBoxBorder);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Format Cells</h2>\n        <TextField\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <div>\n          <FormControlLabel\n            value={isBoxBorder}\n            control={<Checkbox color=\"default\" onClick={handleBoxBorder} />}\n            label=\"Is box border?\"\n            checked={isBoxBorder}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!isBoxBorder && (\n          <div className={classes.borderInputcontainer}>\n            <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n            <TextField\n              name=\"top\"\n              variant=\"outlined\"\n              label=\"Top\"\n              placeholder=\"Top\"\n              value={top}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleTopChange}\n            />\n            <TextField\n              label=\"Right\"\n              name=\"right\"\n              variant=\"outlined\"\n              placeholder=\"Right\"\n              value={right}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleRightChange}\n            />\n            <TextField\n              label=\"Bottom\"\n              name=\"bottom\"\n              variant=\"outlined\"\n              placeholder=\"Bottom\"\n              value={bottom}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleBottomChange}\n            />\n            <TextField\n              label=\"Left\"\n              name=\"left\"\n              variant=\"outlined\"\n              placeholder=\"Left\"\n              value={left}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleLeftChange}\n            />\n          </div>\n        )}\n        {isBoxBorder && (\n          <div>\n            <TextField\n              label=\"Border width\"\n              name=\"width\"\n              variant=\"outlined\"\n              placeholder=\"Border width\"\n              value={width}\n              style={{\n                margin: \"10px\",\n              }}\n              onChange={handleWidthChange}\n            />\n          </div>\n        )}\n        <Button className={classes.submitButton} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default FormatCellsPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport {\n  makeStyles,\n  FormControl,\n  Select,\n  InputLabel,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { addTableToUser } from \"../../state/actions/user\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst AddToUserPopup = () => {\n  const [selectedUser, setSelectedUser] = React.useState(undefined);\n  const users = useSelector((store) => store.user.users);\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(addTableToUser(selectedUser, selectedTable));\n    handleClose();\n  };\n\n  const handleChange = (event) => {\n    setSelectedUser(event.target.value);\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Select user</h2>\n        <div>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"label\">User</InputLabel>\n            <Select\n              id=\"demo-simple-select-helper\"\n              value={selectedUser || \"\"}\n              label=\"User\"\n              onChange={handleChange}\n            >\n              {users.map((user, ix) => (\n                <MenuItem key={ix} value={user}>\n                  <em>{user.email}</em>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default AddToUserPopup;\n","export const LOAD_DEVICES = \"devices/LOAD_DEVICES\";\nexport const LOAD_DEVICES_SUCCESS = \"devices/LOAD_DEVICES_SUCCESS\";\nexport const LOAD_DEVICES_FAILED = \"devices/LOAD_DEVICES_FAILED\";\nexport const LOAD_MAPPINGS = \"devices/LOAD_MAPPINGS\";\nexport const LOAD_MAPPINGS_SUCCESS = \"devices/LOAD_MAPPINGS_SUCCESS\";\nexport const LOAD_MAPPINGS_FAILED = \"devices/LOAD_MAPPINGS_FAILED\";\nexport const DELETE_MAPPING = \"devices/DELETE_MAPPING\";\nexport const DELETE_MAPPING_SUCCESS = \"devices/DELETE_MAPPING_SUCCESS\";\nexport const DELETE_MAPPING_FAILED = \"devices/DELETE_MAPPING_FAILED\";\nexport const ADD_RASP_TO_USER = \"devices/ADD_RASP_TO_USER\";\nexport const ADD_RASP_TO_USER_SUCCESS = \"devices/ADD_RASP_TO_USER_SUCCESS\";\nexport const ADD_RASP_TO_USER_FAILED = \"devices/ADD_RASP_TO_USER_FAILED\";\nexport const LOAD_SESSION_LOGS = \"devices/LOAD_SESSION_LOGS\";\nexport const LOAD_SESSION_LOGS_SUCCESS = \"devices/LOAD_SESSION_LOGS_SUCCESS\";\nexport const LOAD_SESSION_LOGS_FAILED = \"devices/LOAD_SESSION_LOGS_FAILED\";\n","import {\n  DELETE_MAPPING,\n  DELETE_MAPPING_FAILED,\n  DELETE_MAPPING_SUCCESS,\n  LOAD_DEVICES,\n  LOAD_DEVICES_FAILED,\n  LOAD_DEVICES_SUCCESS,\n  LOAD_SESSION_LOGS,\n  LOAD_SESSION_LOGS_FAILED,\n  LOAD_SESSION_LOGS_SUCCESS,\n  LOAD_MAPPINGS,\n  LOAD_MAPPINGS_FAILED,\n  LOAD_MAPPINGS_SUCCESS,\n  ADD_RASP_TO_USER,\n  ADD_RASP_TO_USER_SUCCESS,\n  ADD_RASP_TO_USER_FAILED,\n} from \"../actionTypes/devices\";\nimport { SHOW_SESSION_LOGS_POPUP } from \"../actionTypes/popups\";\n\nexport function deleteMapping(mapping) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_MAPPING });\n    const url =\n      \"https://fm.ki.lt/api/v1/dataexchange/mappings?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010\";\n    try {\n      const req = new Request(url, {\n        method: \"DELETE\",\n        body: JSON.stringify({ sessionId: mapping.session_id }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const response = await fetch(req).then();\n      if (response.ok) {\n        dispatch({ type: DELETE_MAPPING_SUCCESS, mapping });\n      } else {\n        dispatch({ type: DELETE_MAPPING_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: DELETE_MAPPING_FAILED });\n    }\n  };\n}\n\nexport function loadMappings() {\n  return async (dispatch) => {\n    dispatch({ type: LOAD_MAPPINGS });\n    const url =\n      \"https://fm.ki.lt/api/v1/dataexchange/mappings?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010\";\n    try {\n      const req = new Request(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const response = await fetch(req).then();\n      if (response.ok) {\n        const data = await response.json();\n        dispatch({ type: LOAD_MAPPINGS_SUCCESS, mappings: data.mappings });\n      } else {\n        dispatch({ type: LOAD_MAPPINGS_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: LOAD_MAPPINGS_FAILED });\n    }\n  };\n}\n\nexport function loadDevices() {\n  return async (dispatch) => {\n    dispatch({ type: LOAD_DEVICES });\n    const devicesUrl =\n      \"https://fm.ki.lt/api/v1/dataexchange/mappings?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010\";\n    try {\n      const devicesReq = new Request(devicesUrl, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const devicesResponse = await fetch(devicesReq).then();\n      if (devicesResponse.ok) {\n        const data = await devicesResponse.json();\n        dispatch({ type: LOAD_DEVICES_SUCCESS, devices: data.mappings });\n      } else {\n        dispatch({ type: LOAD_DEVICES_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: LOAD_DEVICES_FAILED });\n    }\n  };\n}\n\nexport function loadSessionLogs(sessionId, startDate, endDate) {\n  return async (dispatch) => {\n    dispatch({ type: LOAD_SESSION_LOGS });\n    const timeStamp = new Date().getTime();\n    const yesterdayTimeStamp = timeStamp - 24 * 60 * 60 * 1000;\n    const cDate = new Date(yesterdayTimeStamp).toJSON().slice(0, 10);\n    const sessionStartDate =\n      startDate === undefined\n        ? cDate\n        : new Date(startDate).toJSON().slice(0, 10);\n    const sessionEndDate =\n      endDate === undefined\n        ? new Date().toJSON().slice(0, 10)\n        : endDate.toJSON().slice(0, 10);\n    const url =\n      \"https://fm.ki.lt/api/v1/dataexchange/data?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010&session_id=\" +\n      sessionId +\n      \"&start=\" +\n      sessionStartDate +\n      \"&end=\" +\n      sessionEndDate;\n    try {\n      const req = new Request(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const resp = await fetch(req).then();\n      if (resp.ok) {\n        const data = await resp.json();\n        dispatch({ type: LOAD_SESSION_LOGS_SUCCESS, sessionData: data.data });\n        if (startDate === undefined) {\n          dispatch({ type: SHOW_SESSION_LOGS_POPUP });\n        }\n      } else {\n        dispatch({ type: LOAD_SESSION_LOGS_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: LOAD_SESSION_LOGS_FAILED });\n    }\n  };\n}\n\nexport function addRaspberryToUser(user, rasp) {\n  return async (dispatch) => {\n    const url =\n      \"https://fm.ki.lt/api/v1/dataexchange/mappings?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010\";\n    dispatch({ type: ADD_RASP_TO_USER });\n    try {\n      const data = {\n        userId: user.id,\n        raspberryId: rasp,\n      };\n      const req = new Request(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const response = await fetch(req);\n      if (response.ok) {\n        dispatch({ type: ADD_RASP_TO_USER_SUCCESS });\n      } else {\n        dispatch({ type: ADD_RASP_TO_USER_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: ADD_RASP_TO_USER_FAILED });\n    }\n  };\n}\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {\n  makeStyles,\n  FormControl,\n  Select,\n  InputLabel,\n  TextField,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { closePopup } from \"../../state/actions/popups\";\nimport { addRaspberryToUser, deleteMapping } from \"../../state/actions/devices\";\nimport { loadMappings } from \"../../state/actions/devices\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  boxik: {\n    display: \"flex\",\n    color: \"black\",\n    background: \"white\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n  },\n  columns: {\n    display: \"flex\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    fontWeight: \"bold\",\n    marginLeft: \"auto\",\n    fontSize: \"30px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst MapRaspberryPopup = () => {\n  const [didGet, setDidGet] = React.useState(false);\n  const [shouldUpdate, setShouldUpdate] = React.useState(false);\n  const [selectedUser, setSelectedUser] = React.useState(undefined);\n  const [oldMappings, setOldMappings] = React.useState([]);\n  const users = useSelector((store) => store.user.users);\n  const mappings = useSelector((store) => store.devices.mappings);\n\n  const [raspberryID, setRaspberryID] = React.useState(\"\");\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (!didGet) {\n      setDidGet(true);\n      dispatch(loadMappings());\n    }\n    if (mappings.length !== oldMappings.length) {\n      setShouldUpdate(!shouldUpdate);\n      setOldMappings(mappings);\n    }\n  }, [\n    dispatch,\n    didGet,\n    mappings.length,\n    oldMappings.length,\n    mappings,\n    shouldUpdate,\n  ]);\n\n  const handleSubmit = () => {\n    if (raspberryID !== \"\") {\n      dispatch(addRaspberryToUser(selectedUser, raspberryID));\n    }\n    handleClose();\n  };\n\n  const handleRaspberryIDChange = (event) => {\n    setRaspberryID(event.target.value);\n  };\n\n  const handleChange = (event) => {\n    setSelectedUser(event.target.value);\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleDelete = (item) => {\n    dispatch(deleteMapping(item));\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Map User to Raspberry</h2>\n        {shouldUpdate && <span></span>}\n        {mappings &&\n          mappings.map((item) => (\n            <MappingsListItem\n              item={item}\n              user={users.find((e) => e.id === item.userId)}\n              key={mappings.indexOf(item)}\n              onDelete={handleDelete}\n            />\n          ))}\n        <div>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"label\">User</InputLabel>\n            <Select\n              id=\"demo-simple-select-helper\"\n              value={selectedUser || \"\"}\n              label=\"User\"\n              onChange={handleChange}\n            >\n              {users.map((user, ix) => (\n                <MenuItem key={ix} value={user}>\n                  <em>{user.email}</em>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <TextField\n          fullWidth\n          label=\"Raspberry ID\"\n          name=\"raspberryID\"\n          variant=\"outlined\"\n          placeholder=\"Raspberry ID\"\n          value={raspberryID}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleRaspberryIDChange}\n        />\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default MapRaspberryPopup;\n\nconst MappingsListItem = ({ item, user, onDelete }) => {\n  const classes = useStyles();\n\n  const deleteMapping = () => {\n    onDelete(item);\n  };\n\n  return (\n    <div className={classes.boxik}>\n      <div>\n        {user && (\n          <span className={classes.columns}>User Email: {user.email}</span>\n        )}\n        <span className={classes.columns}>User ID: {item.userId}</span>\n        <span className={classes.columns}>\n          Raspberry ID: {item.raspberryId}\n        </span>\n        <span className={classes.columns}>Session ID: {item.session_id}</span>\n      </div>\n      <Button className={classes.deleteButton} onClick={deleteMapping}>\n        X\n      </Button>\n    </div>\n  );\n};\nMappingsListItem.propTypes = {\n  item: PropTypes.object,\n  user: PropTypes.object,\n  onDelete: PropTypes.func,\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { loadDevices, loadSessionLogs } from \"../../state/actions/devices\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  boxik: {\n    color: \"black\",\n    background: \"white\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n      borderColor: \"black\",\n      cursor: \"pointer\",\n    },\n  },\n  circle: {\n    marginLeft: \"5px\",\n    width: \"25px\",\n    height: \"25px\",\n    webkitBorderRadius: \"15px\",\n    mozBorderradius: \"15px\",\n    borderRadius: \"15px\",\n  },\n  connectionText: {\n    verticalAlign: \"center\",\n    marginTop: \"auto\",\n    marginBottom: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst DevicesPopup = () => {\n  const devices = useSelector((store) => store.devices.devices);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDevices());\n  }, [dispatch]);\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Active sessions</h2>\n        {devices &&\n          devices.map((item) => (\n            <DevicePopupItem item={item} key={devices.indexOf(item)} />\n          ))}\n      </div>\n    </div>\n  );\n};\nexport default DevicesPopup;\nconst DevicePopupItem = ({ item }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const openLogs = () => {\n    dispatch(loadSessionLogs(item.session_id));\n  };\n\n  return (\n    <div className={classes.boxik} onClick={openLogs}>\n      <div>Raspberry ID: {item.raspberryId}</div>\n      <div>Session ID: {item.session_id === \"\" ? \"N/A\" : item.session_id}</div>\n      <div>User ID: {item.userId === \"\" ? \"N/A\" : item.userId}</div>\n      <div\n        style={{\n          display: \"flex\",\n        }}\n      >\n        <span className={classes.connectionText}>Is User Connected:</span>\n        <div\n          className={classes.circle}\n          style={{\n            background: item.is_user_connected ? \"green\" : \"red\",\n          }}\n        ></div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n        }}\n      >\n        <span className={classes.connectionText}>Is Raspberry Connected:</span>\n        <div\n          className={classes.circle}\n          style={{\n            background: item.is_device_connected ? \"green\" : \"red\",\n          }}\n        ></div>\n      </div>\n      <div>Update at: {item.updated_at}</div>\n    </div>\n  );\n};\nDevicePopupItem.propTypes = {\n  item: PropTypes.object,\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { closePopup, showDevicesPopup } from \"../../state/actions/popups\";\nimport { loadSessionLogs } from \"../../state/actions/devices\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  backButton: {\n    height: \"35px\",\n    color: \"white\",\n    background: \"black\",\n    fontSize: \"1em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"#FFFFFF\",\n    borderWidth: \"1px\",\n    margin: \"0px auto 5px auto\",\n    borderStyle: \"solid\",\n    \"&:hover\": {\n      color: \"black\",\n      background: \"white\",\n      borderColor: \"black\",\n    },\n  },\n  box: {\n    minHeight: \"500px\",\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  boxik: {\n    color: \"black\",\n    background: \"white\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n  },\n  picker: {\n    fontSize: \"20px\",\n    marginBottom: \"5px\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst SessionLogsPopup = () => {\n  const [startDate, setStartDate] = React.useState(\n    new Date(new Date().getTime() - 24 * 60 * 60 * 1000)\n  );\n  const [endDate, setEndDate] = React.useState(new Date());\n  const sessionData = useSelector((store) => store.devices.sessionData);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const goBack = () => {\n    dispatch(showDevicesPopup());\n  };\n\n  const loadLogs = (date) => {\n    setStartDate(date);\n    if (sessionData !== undefined && date < endDate) {\n      dispatch(loadSessionLogs(sessionData.device_id, date, endDate));\n    }\n  };\n\n  const endDateSelected = (date) => {\n    setEndDate(date);\n    if (sessionData !== undefined && startDate < date) {\n      dispatch(loadSessionLogs(sessionData.device_id, startDate, date));\n    }\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <Button className={classes.backButton} onClick={goBack}>\n          GO BACK\n        </Button>\n        <h2 className={classes.header}>Session logs</h2>\n        <div>\n          Pick Start Date:\n          <DatePicker\n            className={classes.picker}\n            selected={startDate}\n            onChange={loadLogs}\n          />\n        </div>\n        <div>\n          Pick End Date:\n          <DatePicker\n            className={classes.picker}\n            selected={endDate}\n            onChange={endDateSelected}\n          />\n        </div>\n        {sessionData && (\n          <div>\n            <div>Device ID: {sessionData.device_id}</div>\n            <div>Start: {sessionData.period.start}</div>\n            <div>End: {sessionData.period.end}</div>\n          </div>\n        )}\n\n        {sessionData &&\n          sessionData.sessions.map((item) => (\n            <SessionLogsPopupItem\n              item={item}\n              key={sessionData.sessions.indexOf(item)}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\nexport default SessionLogsPopup;\nconst SessionLogsPopupItem = ({ item }) => {\n  return (\n    <div>\n      {item && (\n        <div>\n          <div>Session ID: {item.session_id}</div>\n          <div>User ID: {item.user_id}</div>\n        </div>\n      )}\n      {item &&\n        item.data.map((dataItem) => (\n          <SessionLogsPopupDataItem\n            dataItem={dataItem}\n            key={item.data.indexOf(dataItem)}\n          />\n        ))}\n    </div>\n  );\n};\nSessionLogsPopupItem.propTypes = {\n  item: PropTypes.object,\n};\nconst SessionLogsPopupDataItem = ({ dataItem }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.boxik}>\n      <div>Table ID: {dataItem.tableId}</div>\n      <div>Cells Row ID: {dataItem.cellsRowId}</div>\n      <div>Row Index: {dataItem.rowIndex}</div>\n      <div>Column Index: {dataItem.columnIndex}</div>\n      <div>Created at: {dataItem.created_at}</div>\n    </div>\n  );\n};\nSessionLogsPopupDataItem.propTypes = {\n  dataItem: PropTypes.object,\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TablesList from \"../tables_list/TablesList\";\nimport Table from \"../table/Table\";\nimport TableInfoPopup from \"../popup/TableInfoPopup\";\nimport ActionCellPopup from \"../popup/ActionCellPopup\";\nimport NoTypeCellPopup from \"../popup/NoTypeCellPopup\";\nimport InfoCellPopup from \"../popup/InfoCellPopup\";\nimport EmptyCellPopup from \"../popup/EmptyCellPopup\";\nimport ImageCellPopup from \"../popup/ImageCellPopup\";\nimport FormatCellsPopup from \"../popup/FormatCellsPopup\";\nimport AddToUserPopup from \"../popup/AddToUserPopup\";\nimport MapRaspberryPopup from \"../popup/MapRaspberryPopup\";\nimport DevicesPopup from \"../popup/DevicesPopup\";\nimport SessionLogsPopup from \"../popup/SessionLogsPopup\";\n\nconst Home = () => {\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const isCreateTablePopupOpen = useSelector(\n    (store) => store.popups.createTablePopupOpen\n  );\n  const isActionCellPopupOpen = useSelector(\n    (store) => store.popups.actionPopupOpen\n  );\n  const isEmptyCellPopupOpen = useSelector(\n    (store) => store.popups.emptyCellPopupOpen\n  );\n  const isInfoCellPopupOpen = useSelector(\n    (store) => store.popups.infoPopupOpen\n  );\n  const noTypeCellPopupOpen = useSelector(\n    (store) => store.popups.noTypePopupOpen\n  );\n  const imageCellPopupOpen = useSelector(\n    (store) => store.popups.imagePopupOpen\n  );\n  const formatCellsPopupOpen = useSelector(\n    (store) => store.popups.formatCellsPopupOpen\n  );\n  const addToUserPopupOpen = useSelector(\n    (store) => store.popups.addToUserPopupOpen\n  );\n  const raspberryPopupOpen = useSelector(\n    (store) => store.popups.raspberryPopupOpen\n  );\n  const devicesPopupOpen = useSelector(\n    (store) => store.popups.devicesPopupOpen\n  );\n  const sessionLogsPopupOpen = useSelector(\n    (store) => store.popups.sessionLogsPopupOpen\n  );\n\n  const user = useSelector((store) => store.user.user);\n\n  const history = useHistory();\n\n  const popupOpened = () => {\n    window.scrollTo(0, 0);\n    disableBodyScroll(document);\n  };\n\n  sessionLogsPopupOpen ||\n  devicesPopupOpen ||\n  isCreateTablePopupOpen ||\n  isActionCellPopupOpen ||\n  isInfoCellPopupOpen ||\n  imageCellPopupOpen ||\n  isEmptyCellPopupOpen ||\n  noTypeCellPopupOpen ||\n  formatCellsPopupOpen ||\n  addToUserPopupOpen ||\n  raspberryPopupOpen\n    ? popupOpened()\n    : enableBodyScroll(document);\n\n  useEffect(() => {\n    if (user === undefined || user.role !== \"admin\") {\n      history.push(\"/\");\n    }\n    window.scrollTo(0, 0);\n  }, [user, history]);\n\n  return (\n    <Container\n      style={{\n        padding: \"10px\",\n        width: \"100%\",\n        display: \"inline-flex\",\n        flexDirection: \"row\",\n        maxWidth: \"1400px\",\n      }}\n    >\n      <TablesList />\n      {selectedTable === undefined ? (\n        <h2 style={{ flex: 1, textAlign: \"center\" }}>Please select a table</h2>\n      ) : (\n        <Table table={selectedTable} />\n      )}\n      {isCreateTablePopupOpen && <TableInfoPopup />}\n      {isEmptyCellPopupOpen && <EmptyCellPopup />}\n      {isActionCellPopupOpen && <ActionCellPopup />}\n      {isInfoCellPopupOpen && <InfoCellPopup />}\n      {noTypeCellPopupOpen && <NoTypeCellPopup />}\n      {imageCellPopupOpen && <ImageCellPopup />}\n      {formatCellsPopupOpen && <FormatCellsPopup />}\n      {addToUserPopupOpen && <AddToUserPopup />}\n      {raspberryPopupOpen && <MapRaspberryPopup />}\n      {devicesPopupOpen && <DevicesPopup />}\n      {sessionLogsPopupOpen && <SessionLogsPopup />}\n    </Container>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { closeSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nconst AppSnackbar = () => {\n  const classes = useStyles();\n  const open = useSelector((store) => store.snackbar.open);\n  const message = useSelector((store) => store.snackbar.message);\n  const dispatch = useDispatch();\n\n  if (!open) {\n    return null;\n  }\n\n  const close = () => {\n    dispatch(closeSnackbar());\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      open={open}\n      autoHideDuration={5000}\n      onClose={close}\n      message={<span>{message}</span>}\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={close}\n        >\n          <CloseIcon />\n        </IconButton>,\n      ]}\n    />\n  );\n};\n\nexport default AppSnackbar;\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button, Card, TextField, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signIn } from \"../../state/actions/user\";\n\nconst useStyles = makeStyles({\n  title: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: \"bold\",\n  },\n  container: {\n    background: \"white\",\n    borderRadius: \"10px\",\n    maxWidth: \"500px\",\n    alignContent: \"center\",\n    padding: \"10px\",\n    display: \"flex\",\n    marginTop: \"30px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    margin: \"10px\",\n    minWidth: \"200px\",\n    background: \"green\",\n    fontWeight: \"bold\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SignIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const user = useSelector((store) => store.user.user);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user !== undefined) {\n      history.push(\"/home\");\n    }\n  }, [user, history]);\n\n  const handleSubmit = () => {\n    dispatch(signIn({ email, password }));\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <Card className={classes.container}>\n      <Typography className={classes.title}>Sign In</Typography>\n      <TextField\n        required\n        fullWidth\n        name=\"email\"\n        variant=\"outlined\"\n        placeholder=\"Email\"\n        value={email}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handleEmailChange}\n      />\n      <TextField\n        required\n        fullWidth\n        name=\"password\"\n        variant=\"outlined\"\n        placeholder=\"Password\"\n        value={password}\n        type={\"password\"}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handlePasswordChange}\n      />\n      <Button className={classes.button} onClick={handleSubmit}>\n        Submit\n      </Button>\n    </Card>\n  );\n};\nexport default SignIn;\n","import \"./App.css\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Home from \"./components/home/Home\";\nimport AppSnackbar from \"./components/popup/AppSnackbar\";\nimport SignIn from \"./components/sign-in/SignIn\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <CssBaseline />\n      <div\n        style={{\n          minHeight: \"100vh\",\n          width: \"100%\",\n          margin: \"0px\",\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/home\" component={Home} />\n          <Route path=\"/\" component={SignIn} />\n        </Switch>\n      </div>\n      <AppSnackbar />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nconst initialState = {\n  open: false,\n  message: \"\",\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SHOW_SNACKBAR: {\n      return { ...state, open: true, message: action.message };\n    }\n    case CLOSE_SNACKBAR: {\n      return { ...state, open: false, message: \"\" };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\n\nconst initialState = {\n  tables: [],\n  selectedTable: undefined,\n  tableJustCreated: false,\n  bigImage: undefined,\n  bigImageCell: undefined,\n  error: undefined,\n};\n\nexport default function tablesReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case GET_TABLES: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case REMOVE_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: undefined,\n        bigImageCell: undefined,\n        error: undefined,\n      };\n    }\n    case SET_TABLE_JUST_CREATED_FALSE: {\n      return {\n        ...state,\n        tableJustCreated: false,\n      };\n    }\n    case GET_TABLES_SUCCESS: {\n      return { ...state, tables: action.tables };\n    }\n    case GET_TABLES_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case ADD_TABLE: {\n      const newTables = state.tables;\n      newTables.push(action.table);\n      return {\n        ...state,\n        tableJustCreated: true,\n        selectedTable: action.table,\n        tables: newTables,\n      };\n    }\n    case SET_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: action.image,\n        bigImageCell: action.cell,\n      };\n    }\n    case SET_SELECTED_TABLE: {\n      return {\n        ...state,\n        selectedTable: action.table,\n        bigImage: undefined,\n        bigImageCell: undefined,\n      };\n    }\n    case DELETE_TABLE: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case DELETE_TABLE_SUCCESS: {\n      const newTables = state.tables;\n      state.tables.forEach((table) => {\n        if (table.id === action.id) {\n          newTables.remove(table);\n        }\n      });\n      return {\n        ...state,\n        selectedTable: undefined,\n        tables: newTables,\n      };\n    }\n    case DELETE_TABLE_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n} from \"../actionTypes/cell\";\nimport {\n  SHOW_RASP_POPUP,\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  SUBMIT_NO_TYPE_POPUP,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CUSTOM_CELLS_SUBMITED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n  SHOW_ADD_TO_USER_POPUP,\n  SHOW_DEVICES_POPUP,\n  SHOW_SESSION_LOGS_POPUP,\n  SHOW_CREATE_TABLE_POPUP,\n} from \"../actionTypes/popups\";\n\nconst initialState = {\n  createTablePopupOpen: false,\n  sessionLogsPopupOpen: false,\n  devicesPopupOpen: false,\n  raspberryPopupOpen: false,\n  actionPopupOpen: false,\n  infoPopupOpen: false,\n  noTypePopupOpen: false,\n  emptyCellPopupOpen: false,\n  imagePopupOpen: false,\n  formatCellsPopupOpen: false,\n  addToUserPopupOpen: false,\n  cell: undefined,\n  cellsRow: undefined,\n  cellFile: undefined,\n  cellNameFile: undefined,\n  cellImageFile: undefined,\n  cellToUpdate: undefined,\n  cellToUpdateCustomCells: undefined,\n  letsUpdate: false,\n  cellsRowsToDuplicate: undefined,\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SHOW_SESSION_LOGS_POPUP: {\n      return {\n        ...state,\n        sessionLogsPopupOpen: true,\n        devicesPopupOpen: false,\n      };\n    }\n    case SHOW_DEVICES_POPUP: {\n      return {\n        ...state,\n        sessionLogsPopupOpen: false,\n        devicesPopupOpen: true,\n      };\n    }\n    case SHOW_RASP_POPUP: {\n      return {\n        ...state,\n        raspberryPopupOpen: true,\n      };\n    }\n    case CANCEL_CUSTOM_CELLS: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case CUSTOM_CELLS_SUBMITED: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SHOW_ACTION_POPUP: {\n      return {\n        ...state,\n        actionPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case BEGIN_CUSTOM_SELECT: {\n      return {\n        ...state,\n        actionPopupOpen: false,\n        cellToUpdate: action.cell,\n        cellToUpdateCustomCells: [],\n      };\n    }\n    case CELL_TO_UPDATE_CUSTOM_CELL_SELECTED: {\n      const cells = state.cellToUpdateCustomCells;\n      if (cells.includes(action.cell)) {\n        const index = cells.indexOf(action.cell);\n        cells.splice(index, 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        cellToUpdateCustomCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SHOW_ADD_TO_USER_POPUP: {\n      return {\n        ...state,\n        addToUserPopupOpen: true,\n      };\n    }\n    case SUBMIT_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: false,\n        actionPopupOpen: action.isAction,\n        infoPopupOpen: !action.isAction,\n      };\n    }\n    case SHOW_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_EMPTY_CELL_POPUP: {\n      return {\n        ...state,\n        emptyCellPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_IMAGE_CELL_POPUP: {\n      if (action.cell !== undefined) {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n          cell: action.cell,\n          cellsRow: action.cellsRow,\n        };\n      } else {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n        };\n      }\n    }\n    case SHOW_INFO_POPUP: {\n      return {\n        ...state,\n        infoPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_FORMAT_CELLS_POPUP: {\n      return {\n        ...state,\n        formatCellsPopupOpen: true,\n      };\n    }\n    case SHOW_CREATE_TABLE_POPUP: {\n      return {\n        ...state,\n        createTablePopupOpen: true,\n        cellsRowsToDuplicate: action.cellsRows,\n      };\n    }\n    case CLOSE_POPUP: {\n      return {\n        ...state,\n        sessionLogsPopupOpen: false,\n        devicesPopupOpen: false,\n        raspberryPopupOpen: false,\n        infoPopupOpen: false,\n        actionPopupOpen: false,\n        noTypePopupOpen: false,\n        emptyCellPopupOpen: false,\n        imagePopupOpen: false,\n        formatCellsPopupOpen: false,\n        addToUserPopupOpen: false,\n        createTablePopupOpen: false,\n        cell: undefined,\n        cellsRow: undefined,\n        cellFile: undefined,\n        cellNameFile: undefined,\n        cellImageFile: undefined,\n        cellsRowsToDuplicate: undefined,\n      };\n    }\n    case GET_CELL_NAME_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellNameFile: action.file,\n      };\n    }\n    case GET_CELL_IMAGE_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellImageFile: action.file,\n      };\n    }\n    case GET_CELL_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellFile: action.file,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  CLEAR_CELLS_ROWS,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n  ADD_SELECTING_ALL_CELLS,\n  ADD_SELECTING_ROW_CELLS,\n} from \"../actionTypes/cellsRows\";\nimport { UPDATE_CELL_SUCCESS } from \"../actionTypes/cell\";\nconst initialState = {\n  cellsRows: [],\n  selectedCells: undefined,\n  error: undefined,\n  letsUpdate: false,\n  isSelecting: false,\n};\n\nexport default function cellsRowsReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case UPDATE_CELL_SUCCESS: {\n      let rowIndex;\n      let cellIndex;\n      state.cellsRows.forEach((cellsRow) => {\n        cellsRow.cells.forEach((cell) => {\n          if (\n            cell.columnIndex === action.cell.columnIndex &&\n            cell.rowIndex === action.cell.rowIndex\n          ) {\n            rowIndex = state.cellsRows.indexOf(cellsRow);\n            cellIndex = cellsRow.cells.indexOf(cell);\n          }\n        });\n      });\n      state.cellsRows[rowIndex].cells[cellIndex] = action.cell;\n      return { ...state, error: undefined };\n    }\n    case BEGIN_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: true,\n        selectedCells: [],\n      };\n    }\n    case ADD_SELECTING_ROW_CELLS: {\n      var cells = state.selectedCells;\n      state.cellsRows[action.rowIndex].cells.forEach((e) => {\n        if (!cells.includes(e)) {\n          cells.push(e);\n        } else {\n          cells.splice(cells.indexOf(e), 1);\n        }\n      });\n      return { ...state, selectedCells: cells, letsUpdate: !state.letsUpdate };\n    }\n    case ADD_SELECTING_ALL_CELLS: {\n      const cells = [];\n      state.cellsRows.forEach((e) => {\n        cells.push(...e.cells);\n      });\n      return { ...state, selectedCells: cells, letsUpdate: !state.letsUpdate };\n    }\n    case STOP_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: false,\n        selectedCells: undefined,\n      };\n    }\n    case ADD_SELECTING_CELL: {\n      const cells = state.selectedCells;\n      if (cells.includes(action.cell)) {\n        cells.splice(cells.indexOf(action.cell), 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        selectedCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case GET_CELLS_ROWS: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case GET_CELLS_ROWS_SUCCESS: {\n      action.data.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return { ...state, cellsRows: action.data };\n    }\n    case UPDATE_CELLS_ROWS: {\n      action.cellsRows.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return {\n        ...state,\n        cellsRows: action.cellsRows,\n        selectedCells: undefined,\n        isSelecting: false,\n      };\n    }\n    case GET_CELLS_ROWS_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case CLEAR_CELLS_ROWS: {\n      return {\n        ...state,\n        cellsRows: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  SIGN_IN,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAILED,\n  GET_USERS_SUCCESS,\n  ADD_TABLE_TO_USER,\n  ADD_TABLE_TO_USER_SUCCESS,\n  ADD_TABLE_TO_USER_FAILED,\n} from \"../actionTypes/user\";\n\nconst initialState = {\n  user: undefined,\n  users: [],\n  error: false,\n};\n\nexport default function userReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ADD_TABLE_TO_USER_FAILED:\n    case ADD_TABLE_TO_USER_SUCCESS:\n    case ADD_TABLE_TO_USER: {\n      return { ...state };\n    }\n    case SIGN_IN: {\n      return { ...state, error: false };\n    }\n    case SIGN_IN_SUCCESS: {\n      return { ...state, user: action.user };\n    }\n    case SIGN_IN_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case GET_USERS_SUCCESS: {\n      return { ...state, users: action.data };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  LOAD_DEVICES,\n  LOAD_DEVICES_SUCCESS,\n  LOAD_MAPPINGS,\n  LOAD_MAPPINGS_SUCCESS,\n  ADD_RASP_TO_USER,\n  ADD_RASP_TO_USER_SUCCESS,\n  DELETE_MAPPING,\n  DELETE_MAPPING_SUCCESS,\n  LOAD_SESSION_LOGS,\n  LOAD_SESSION_LOGS_SUCCESS,\n} from \"../actionTypes/devices\";\n\nconst initialState = {\n  devices: [],\n  mappings: [],\n  sessionData: undefined,\n};\n\nexport default function devicesReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case LOAD_SESSION_LOGS: {\n      return { ...state };\n    }\n    case LOAD_SESSION_LOGS_SUCCESS: {\n      return { ...state, sessionData: action.sessionData };\n    }\n    case ADD_RASP_TO_USER: {\n      return { ...state };\n    }\n    case ADD_RASP_TO_USER_SUCCESS: {\n      return { ...state };\n    }\n    case DELETE_MAPPING: {\n      return { ...state };\n    }\n    case DELETE_MAPPING_SUCCESS: {\n      return {\n        ...state,\n        mappings: state.mappings.filter(\n          (item) => item.id !== action.mapping.id\n        ),\n      };\n    }\n    case LOAD_MAPPINGS: {\n      return { ...state };\n    }\n    case LOAD_MAPPINGS_SUCCESS: {\n      return { ...state, mappings: action.mappings };\n    }\n    case LOAD_DEVICES: {\n      return { ...state };\n    }\n    case LOAD_DEVICES_SUCCESS: {\n      return { ...state, devices: action.devices };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport snackbar from \"./snackbar\";\nimport tables from \"./tables\";\nimport popups from \"./popups\";\nimport cellsRows from \"./cellsRows\";\nimport user from \"./user\";\nimport devices from \"./devices\";\n\nexport default combineReducers({\n  snackbar,\n  tables,\n  popups,\n  cellsRows,\n  user,\n  devices,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport reducers from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/* eslint-enable */\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\"],\n};\nconst pReducer = persistReducer(persistConfig, reducers);\n\nconst store = createStore(\n  pReducer,\n  compose(applyMiddleware(thunk), composeEnhancers())\n);\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./state/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}