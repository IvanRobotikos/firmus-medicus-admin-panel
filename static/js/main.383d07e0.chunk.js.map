{"version":3,"sources":["state/actionTypes/tables.js","firebase.js","common/CellFunctions.js","components/tables_list/TablesListItem.js","state/actions/tables.js","components/tables_list/TablesList.js","state/actionTypes/cellsRows.js","state/actions/cellsRows.js","state/actionTypes/popups.js","state/actions/popups.js","components/table/cells/EmptyCell.js","components/table/cells/Cell.js","components/table/CellsRow.js","state/actionTypes/cell.js","state/actions/cell.js","components/table/utils/SelectedCellsInfo.js","components/table/utils/BigImage.js","components/table/utils/RemoveBigImage.js","components/table/Table.js","components/popup/TableInfoPopup.js","components/popup/ActionCellPopup.js","components/popup/NoTypeCellPopup.js","state/actionTypes/snackbar.js","state/actions/snackbar.js","components/popup/InfoCellPopup.js","components/popup/EmptyCellPopup.js","components/popup/ImageCellPopup.js","components/home/Home.js","components/popup/AppSnackbar.js","state/actionTypes/user.js","components/sign-in/SignIn.js","state/actions/user.js","App.js","serviceWorker.js","state/reducers/snackbar.js","state/reducers/tables.js","state/reducers/popups.js","state/reducers/cellsRows.js","state/reducers/user.js","state/reducers/index.js","state/store.js","index.js"],"names":["GET_TABLES","GET_TABLES_SUCCESS","GET_TABLES_FAILED","ADD_TABLE","DELETE_TABLE","DELETE_TABLE_SUCCESS","DELETE_TABLE_FAILED","SET_SELECTED_TABLE","SET_BIG_IMAGE","SET_TABLE_JUST_CREATED_FALSE","REMOVE_BIG_IMAGE","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","auth","getEmptyTableCells","tableId","data","push","rowIndex","cells","getNoTypeCell","getEmptyCell","getFirstEmptyRow","i","getEmptyRow","columnIndex","type","color","topBorder","leftBorder","rightBorder","bottomBorder","useStyles","makeStyles","buttonNormal","fontSize","textTransform","borderRadius","borderColor","borderWidth","margin","whiteSpace","borderStyle","padding","background","buttonSelected","cursos","TablesListItem","item","selectedTable","useSelector","store","tables","useState","isSelected","setIsSelected","classes","dispatch","useDispatch","useEffect","id","Button","onClick","table","a","className","name","card","display","flexDirection","minHeight","maxWidth","flex","iconmenubutton","height","text","textAlign","TablesList","showTableNamePopup","ref","collection","get","then","snapshot","forEach","error","Card","map","indexOf","GET_CELLS_ROWS","GET_CELLS_ROWS_SUCCESS","GET_CELLS_ROWS_FAILED","CLEAR_CELLS_ROWS","getCellsRows","doc","cellsRow","e","SHOW_ACTION_POPUP","CLOSE_POPUP","SHOW_INFO_POPUP","SHOW_NO_TYPE_POPUP","SHOW_IMAGE_CELL_POPUP","SHOW_EMPTY_CELL_POPUP","SUBMIT_NO_TYPE_POPUP","BEGIN_CUSTOM_SELECT","CELL_TO_UPDATE_CUSTOM_CELL_SELECTED","CUSTOM_CELLS_SUBMITED","CANCEL_CUSTOM_CELLS","showImagePopup","cell","closePopup","width","EmptyCell","undefined","bigImagePath","getDownloadURL","image","catch","console","log","setBigImage","showEmptyCellPopup","props","borderLeftWidth","left","borderRightWidth","right","borderTopWidth","top","borderBottomWidth","bottom","borderTopColor","isCustomCell","borderRightColor","borderLeftColor","borderBottomColor","borderLeftStyle","borderRightStyle","borderTopStyle","borderBottomStyle","alignContent","justifyContent","verticalAlign","lineHeight","fontWeight","Cell","cellToUpdate","popups","cellToUpdateCustomCellSelected","showNoTypePopup","showInfoPopup","showActionPopup","sumAll","style","marginLeft","marginRight","src","alt","split","ix","row","CellsRow","cellToUpdateCustomCells","letsUpdate","sort","b","includes","UPDATE_CELL","UPDATE_CELL_SUCCESS","UPDATE_CELL_FAILED","GET_CELL_FILE_SUCCESS","GET_CELL_NAME_FILE_SUCCESS","GET_CELL_IMAGE_FILE_SUCCESS","updateCell","cellsRowId","newRow","element","update","container","marginBottom","marginTop","cont","border","submitButton","cancelButton","SelectedCellsInfo","customCells","convertCustomCells","join","length","BigImage","bigImage","bigImageCell","position","parseInt","bigImageTopMargin","bigImageHeight","bigImageLeftMargin","bigImageWidth","RemoveBigImage","description","cellContainer","deleteButton","Table","loading","setLoading","cellsRows","tableJustCreated","timeoutFinished","useCallback","setTimeout","CircularProgress","delete","deleteTable","popupbox","box","maxHeight","overflow","closeicon","content","cursor","button","TableInfoPopup","React","setName","setDescription","handleClose","TextField","required","fullWidth","variant","placeholder","value","onChange","event","target","multiline","rows","rowsMax","add","cellsRowValue","newCells","addTable","formControl","minWidth","header","noTypeButton","ActionCellPopup","setSumAll","setColor","setRows","actionType","setActionType","typeActionType","setTypeActionType","typeActionTypeName","setTypeActionTypeName","actionTypes","typeActionTypes","actionTypesNames","typeActionTypesNames","FormControlLabel","control","Checkbox","label","checked","labelPlacement","FormControl","InputLabel","Select","MenuItem","beginCustomSelect","makeEmptyButton","NoTypeCellPopup","isAction","setIsAction","submitNoTypePopup","SHOW_SNACKBAR","CLOSE_SNACKBAR","showSnackbar","message","quillContainer","editor","fileNameContainer","removeFileButton","borderInputcontainer","borderText","InfoCellPopup","typeForAction","setTypeForAction","file","setFile","nameFile","setNameFile","setTop","setBottom","setLeft","setRight","bluetoothContent","setBluetoothContent","cellFile","cellNameFile","filePath","nameFilePath","getMetadata","showError","msg","extensions","loadedFile","onError","theme","put","newCell","updateInfoCell","notypeButton","EmptyCellPopup","fileButton","ImageCellPopup","setWidth","setHeight","leftMargin","setLeftMargin","topMargin","setTopMargin","cellImageFile","updateImageCell","Home","isNamePopupOpen","setIsNamePopupOpen","isActionCellPopupOpen","actionPopupOpen","isEmptyCellPopupOpen","emptyCellPopupOpen","isInfoCellPopupOpen","infoPopupOpen","noTypeCellPopupOpen","noTypePopupOpen","imageCellPopupOpen","imagePopupOpen","user","history","useHistory","window","scrollTo","disableBodyScroll","document","enableBodyScroll","role","toggleNamePopup","Container","close","spacing","AppSnackbar","open","snackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","SIGN_IN","SIGN_IN_SUCCESS","SIGN_IN_FAILED","title","alignItems","SignIn","email","setEmail","password","setPassword","Typography","signInWithEmailAndPassword","uid","dbUser","signIn","App","CssBaseline","exact","path","component","Boolean","location","hostname","match","initialState","combineReducers","state","newTables","remove","index","splice","cellIndex","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","whitelist","pReducer","persistReducer","reducers","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.383d07e0.chunk.js","sourcesContent":["export const GET_TABLES = \"tables/GET_TABLES\";\nexport const GET_TABLES_SUCCESS = \"tables/GET_TABLES_SUCCESS\";\nexport const GET_TABLES_FAILED = \"tables/GET_TABLES_FAILED\";\nexport const ADD_TABLE = \"tables/ADD_TABLE\";\nexport const DELETE_TABLE = \"tables/DELETE_TABLE\";\nexport const DELETE_TABLE_SUCCESS = \"tables/DELETE_TABLE_SUCCESS\";\nexport const DELETE_TABLE_FAILED = \"tables/DELETE_TABLE_FAILED\";\nexport const SET_SELECTED_TABLE = \"tables/SET_SELECTED_TABLE\";\nexport const SET_BIG_IMAGE = \"tables/SET_BIG_IMAGE\";\nexport const SET_TABLE_JUST_CREATED_FALSE =\n  \"tables/SET_TABLE_JUST_CREATED_FALSE\";\nexport const REMOVE_BIG_IMAGE = \"tables/REMOVE_BIG_IMAGE\";\n","import firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBN83KPofzkMJ8I61kt8Fn8our5BSWfNjw\",\n  authDomain: \"firmus-medicus-a254b.firebaseapp.com\",\n  projectId: \"firmus-medicus-a254b\",\n  storageBucket: \"firmus-medicus-a254b.appspot.com\",\n  messagingSenderId: \"906887380621\",\n  appId: \"1:906887380621:web:d9ab0a949265376084ecc4\",\n  measurementId: \"G-506ZEGQVF1\",\n};\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const auth = firebase.auth();\n","export function getEmptyTableCells(tableId) {\n  const data = [];\n  data.push(getFirstEmptyRow(tableId));\n  for (let i = 1; i < 28; i++) {\n    data.push(getEmptyRow(i, tableId));\n  }\n  return data;\n}\nfunction getFirstEmptyRow(tableId) {\n  return {\n    tableId,\n    rowIndex: 0,\n    cells: [\n      getNoTypeCell(0, 0),\n      getNoTypeCell(0, 1),\n      getNoTypeCell(0, 2),\n      getNoTypeCell(0, 3),\n      getEmptyCell(4),\n      getEmptyCell(5),\n      getEmptyCell(6),\n      getNoTypeCell(0, 7),\n      getNoTypeCell(0, 8),\n      getNoTypeCell(0, 9),\n      getNoTypeCell(0, 10),\n    ],\n  };\n}\nfunction getEmptyRow(rowIndex, tableId) {\n  return {\n    tableId,\n    rowIndex,\n    cells: [\n      getNoTypeCell(rowIndex, 0),\n      getNoTypeCell(rowIndex, 1),\n      getNoTypeCell(rowIndex, 2),\n      getNoTypeCell(rowIndex, 3),\n      getNoTypeCell(rowIndex, 4),\n      getNoTypeCell(rowIndex, 5),\n      getNoTypeCell(rowIndex, 6),\n      getNoTypeCell(rowIndex, 7),\n      getNoTypeCell(rowIndex, 8),\n      getNoTypeCell(rowIndex, 9),\n      getNoTypeCell(rowIndex, 10),\n    ],\n  };\n}\nfunction getNoTypeCell(rowIndex, columnIndex) {\n  return {\n    type: \"notype\",\n    rowIndex,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"1\",\n    leftBorder: \"1\",\n    rightBorder: \"1\",\n    bottomBorder: \"1\",\n  };\n}\nfunction getEmptyCell(columnIndex) {\n  return {\n    type: \"empty\",\n    rowIndex: 0,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"1\",\n    leftBorder: \"1\",\n    rightBorder: \"1\",\n    bottomBorder: \"1\",\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { setSelectedTable } from \"../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  buttonNormal: {\n    color: \"black\",\n    fontSize: \"1em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    whiteSpace: \"wrap\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  buttonSelected: {\n    color: \"white\",\n    background: \"black\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n      cursos: \"auto\",\n    },\n  },\n});\n\nconst TablesListItem = ({ item }) => {\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const [isSelected, setIsSelected] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsSelected(selectedTable && selectedTable.id === item.id);\n  }, [setIsSelected, selectedTable, item]);\n\n  const selectTable = () => {\n    dispatch(setSelectedTable(item));\n  };\n\n  return (\n    <Button\n      onClick={isSelected ? null : selectTable}\n      className={isSelected ? classes.buttonSelected : classes.buttonNormal}\n    >\n      {item.name}\n    </Button>\n  );\n};\nTablesListItem.propTypes = {\n  item: PropTypes.object,\n};\nexport default TablesListItem;\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\nimport { db, storage } from \"../../firebase\";\nimport { getEmptyTableCells } from \"../../common/CellFunctions\";\n\nexport function removeBigImage() {\n  return async (dispatch) => {\n    dispatch({ type: REMOVE_BIG_IMAGE });\n  };\n}\n\nexport function getTables() {\n  return async (dispatch) => {\n    dispatch({ type: GET_TABLES });\n\n    try {\n      const ref = db.collection(\"tables\");\n      await ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((table) => {\n          data.push({ ...table.data(), id: table.id });\n        });\n        dispatch({ type: GET_TABLES_SUCCESS, tables: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_TABLES_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setTableJustCreatedFalse() {\n  return async (dispatch) => {\n    dispatch({\n      type: SET_TABLE_JUST_CREATED_FALSE,\n    });\n  };\n}\n\nexport function addTable(name, description) {\n  return async (dispatch) => {\n    const ref = db.collection(\"tables\");\n    await ref.add({ name, description }).then((table) => {\n      const cellsRows = getEmptyTableCells(table.id);\n      cellsRows.forEach((cellsRow) => {\n        ref\n          .doc(table.id)\n          .collection(\"cellsRows\")\n          .add({\n            tableId: cellsRow.tableId,\n            rowIndex: cellsRow.rowIndex,\n          })\n          .then((cellsRowValue) => {\n            const newCells = [];\n            cellsRow.cells.forEach((cell) =>\n              newCells.push({\n                ...cell,\n                tableId: table.id,\n                cellsRowId: cellsRowValue.id,\n              })\n            );\n            ref\n              .doc(table.id)\n              .collection(\"cellsRows\")\n              .doc(cellsRowValue.id)\n              .update({ cells: newCells });\n          });\n      });\n\n      dispatch({\n        type: ADD_TABLE,\n        table: { id: table.id, name, description },\n      });\n    });\n  };\n}\n\nexport function deleteTable(tableId, cellsRows) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_TABLE });\n    try {\n      var ref = db.collection(\"tables\").doc(tableId);\n      cellsRows.forEach((row) => {\n        ref.collection(\"cellsRows\").doc(row.id).delete();\n      });\n      ref.delete();\n      dispatch({ type: DELETE_TABLE_SUCCESS, tableId });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: DELETE_TABLE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setBigImage(cell) {\n  return async (dispatch) => {\n    storage\n      .ref(cell.bigImagePath)\n      .getDownloadURL()\n      .then((image) => {\n        dispatch({ type: SET_BIG_IMAGE, image, cell });\n      })\n      .catch(() => {\n        console.log(\"error\");\n      });\n  };\n}\n\nexport function setSelectedTable(table) {\n  return async (dispatch) => {\n    dispatch({ type: SET_SELECTED_TABLE, table });\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { Card, Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport TablesListItem from \"./TablesListItem\";\nimport { useEffect } from \"react\";\nimport { getTables } from \"../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    maxWidth: \"150px\",\n    flex: 1,\n  },\n  iconmenubutton: {\n    height: \"35px\",\n    color: \"black\",\n    fontSize: \"2em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"#FFFFFF\",\n    borderWidth: \"1px\",\n    margin: \"0px auto 5px auto\",\n    borderStyle: \"solid\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  text: {\n    textAlign: \"center\",\n    margin: \"5px\",\n  },\n});\n\nconst TablesList = ({ showTableNamePopup }) => {\n  const classes = useStyles();\n  const tables = useSelector((store) => store.tables.tables);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTables());\n  }, [dispatch]);\n\n  return (\n    <Card className={classes.card}>\n      <h3 className={classes.text}>Tables</h3>\n      <Button className={classes.iconmenubutton} onClick={showTableNamePopup}>\n        <AddIcon />\n      </Button>\n      {tables.map((item) => (\n        <TablesListItem item={item} key={tables.indexOf(item)} />\n      ))}\n    </Card>\n  );\n};\nTablesList.propTypes = {\n  showTableNamePopup: PropTypes.func,\n};\nexport default TablesList;\n","export const GET_CELLS_ROWS = \"cellsRows/GET_CELLS_ROWS\";\nexport const GET_CELLS_ROWS_SUCCESS = \"cellsRows/GET_CELLS_ROWS_SUCCESS\";\nexport const GET_CELLS_ROWS_FAILED = \"cellsRows/GET_CELLS_ROWS_FAILED\";\nexport const CLEAR_CELLS_ROWS = \"cellsRows/CLEAR_CELLS_ROWS\";\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n} from \"../actionTypes/cellsRows\";\nimport { db } from \"../../firebase\";\n\nexport function getCellsRows(tableId) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELLS_ROWS });\n\n    try {\n      const ref = db.collection(\"tables\").doc(tableId).collection(\"cellsRows\");\n      ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((cellsRow) => {\n          data.push({ ...cellsRow.data(), id: cellsRow.id });\n        });\n        dispatch({ type: GET_CELLS_ROWS_SUCCESS, data: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELLS_ROWS_FAILED,\n        error,\n      });\n    }\n  };\n}\n","export const SHOW_ACTION_POPUP = \"popups/SHOW_ACTION_POPUP\";\nexport const CLOSE_POPUP = \"popups/CLOSE_ACTION_POPUP\";\nexport const SHOW_INFO_POPUP = \"popups/SHOW_INFO_POPUP\";\nexport const SHOW_NO_TYPE_POPUP = \"popups/SHOW_NO_TYPE_POPUP\";\nexport const SHOW_IMAGE_CELL_POPUP = \"popups/SHOW_IMAGE_CELL_POPUP\";\nexport const SHOW_EMPTY_CELL_POPUP = \"popups/SHOW_EMPTY_CELL_POPUP\";\nexport const SUBMIT_NO_TYPE_POPUP = \"popups/SUBMIT_NO_TYPE_POPUP\";\nexport const BEGIN_CUSTOM_SELECT = \"popups/BEGIN_CUSTOM_SELECT\";\nexport const CELL_TO_UPDATE_CUSTOM_CELL_SELECTED =\n  \"popups/CELL_TO_UPDATE_CUSTOM_CELL_SELECTED\";\nexport const CUSTOM_CELLS_SUBMITED = \"popups/CUSTOM_CELLS_SUBMITED\";\nexport const CANCEL_CUSTOM_CELLS = \"popups/CANCEL_CUSTOM_CELLS\";\n","import {\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SUBMIT_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n} from \"../actionTypes/popups\";\n\nexport function beginCustomSelect(cell) {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_CUSTOM_SELECT, cell });\n  };\n}\n\nexport function cancelCustomCells() {\n  return async (dispatch) => {\n    dispatch({ type: CANCEL_CUSTOM_CELLS });\n  };\n}\n\nexport function cellToUpdateCustomCellSelected(cell) {\n  return async (dispatch) => {\n    dispatch({ type: CELL_TO_UPDATE_CUSTOM_CELL_SELECTED, cell });\n  };\n}\n\nexport function showImagePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_IMAGE_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showActionPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_ACTION_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showEmptyCellPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_EMPTY_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function submitNoTypePopup(isAction) {\n  return async (dispatch) => {\n    dispatch({ type: SUBMIT_NO_TYPE_POPUP, isAction });\n  };\n}\n\nexport function showNoTypePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_NO_TYPE_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showInfoPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_INFO_POPUP, cell, cellsRow });\n  };\n}\n\nexport function closePopup() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {\n  showEmptyCellPopup,\n  showImagePopup,\n} from \"../../../state/actions/popups\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { setBigImage } from \"../../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  cell: {\n    height: \"50px\",\n    width: \"100px\",\n    display: \"table-cell\",\n  },\n});\n\nconst EmptyCell = ({ cell, cellsRow }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell && cell.bigImagePath !== undefined) {\n      dispatch(setBigImage(cell));\n    }\n  }, [cell, dispatch]);\n\n  const action = () => {\n    if (cell.type === \"empty\") {\n      dispatch(showEmptyCellPopup(cell, cellsRow));\n    } else {\n      dispatch(showImagePopup(cell, cellsRow));\n    }\n  };\n\n  return <div className={classes.cell} onClick={action}></div>;\n};\nEmptyCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n};\nexport default EmptyCell;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  showActionPopup,\n  showInfoPopup,\n  showNoTypePopup,\n  cellToUpdateCustomCellSelected,\n} from \"../../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  cell: {\n    background: (props) => props.color,\n    borderLeftWidth: (props) => props.left + \"px\",\n    borderRightWidth: (props) => props.right + \"px\",\n    borderTopWidth: (props) => props.top + \"px\",\n    borderBottomWidth: (props) => props.bottom + \"px\",\n    borderTopColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderRightColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderLeftColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderBottomColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    height: \"50px\",\n    width: \"100px\",\n    borderLeftStyle: \"solid\",\n    borderRightStyle: \"solid\",\n    borderTopStyle: \"solid\",\n    borderBottomStyle: \"solid\",\n    alignContent: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    display: \"table-cell\",\n    verticalAlign: \"middle\",\n  },\n  text: {\n    fontSize: \"10px\",\n    margin: \"0px\",\n    lineHeight: \"1.1\",\n    fontWeight: \"bold\",\n  },\n});\n\nconst Cell = ({ cell, cellsRow, isCustomCell }) => {\n  const classes = useStyles({\n    left: cell.leftBorder,\n    right: cell.rightBorder,\n    top: cell.topBorder,\n    bottom: cell.bottomBorder,\n    color: cell.color,\n    isCustomCell,\n  });\n  const cellToUpdate = useSelector((store) => store.popups.cellToUpdate);\n  const dispatch = useDispatch();\n\n  const action = () => {\n    if (cellToUpdate !== undefined) {\n      if (\n        !(\n          cellToUpdate.cell.columnIndex === cell.columnIndex &&\n          cellToUpdate.cell.rowIndex === cell.rowIndex\n        ) &&\n        cell.type === \"info\"\n      ) {\n        dispatch(cellToUpdateCustomCellSelected(cell));\n      }\n    } else if (cell.type === \"notype\") {\n      dispatch(showNoTypePopup(cell, cellsRow));\n    } else if (cell.type === \"info\") {\n      dispatch(showInfoPopup(cell, cellsRow));\n    } else if (cell.type === \"action\") {\n      dispatch(showActionPopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.sumAll && (\n        <img\n          style={{\n            width: \"25px\",\n            height: \"25px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n          src={\"/dao.png\"}\n          alt=\"all\"\n        />\n      )}\n      {cell.name &&\n        !cell.sumAll &&\n        cell.name.split(\"<br />\").map((text, ix) => (\n          <p className={classes.text} key={ix}>\n            {text}\n          </p>\n        ))}\n    </div>\n  );\n};\nCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n  isCustomCell: PropTypes.bool,\n};\nexport default Cell;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nimport EmptyCell from \"./cells/EmptyCell\";\nimport Cell from \"./cells/Cell\";\n\nconst useStyles = makeStyles({\n  row: {\n    display: \"table-row\",\n  },\n});\n\nconst CellsRow = ({ cellsRow }) => {\n  const classes = useStyles();\n  const cellToUpdateCustomCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  return (\n    <div className={classes.row}>\n      {letsUpdate && <div></div>}\n      {cellsRow &&\n        cellsRow.cells &&\n        cellsRow.cells\n          .sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1))\n          .map((cell) =>\n            cell.type === \"empty\" || cell.type === \"image\" ? (\n              <EmptyCell\n                cell={cell}\n                cellsRow={cellsRow}\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            ) : (\n              <Cell\n                cell={cell}\n                cellsRow={cellsRow}\n                isCustomCell={\n                  cellToUpdateCustomCells &&\n                  cellToUpdateCustomCells.includes(cell)\n                }\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            )\n          )}\n    </div>\n  );\n};\nCellsRow.propTypes = {\n  cellsRow: PropTypes.object,\n};\nexport default CellsRow;\n","export const UPDATE_CELL = \"cell/UPDATE_CELL\";\nexport const UPDATE_CELL_SUCCESS = \"cell/UPDATE_CELL_SUCCESS\";\nexport const UPDATE_CELL_FAILED = \"cell/UPDATE_CELL_FAILED\";\nexport const GET_CELL_FILE = \"cell/GET_CELL_FILE\";\nexport const GET_CELL_FILE_SUCCESS = \"cell/GET_CELL_FILE_SUCCESS\";\nexport const GET_CELL_FILE_FAILED = \"cell/GET_CELL_FILE_FAILED\";\nexport const GET_CELL_NAME_FILE = \"cell/GET_CELL_NAME_FILE\";\nexport const GET_CELL_NAME_FILE_SUCCESS = \"cell/GET_CELL_NAME_FILE_SUCCESS\";\nexport const GET_CELL_NAME_FILE_FAILED = \"cell/GET_CELL_NAME_FILE_FAILED\";\nexport const GET_CELL_IMAGE_FILE = \"cell/GET_CELL_IMAGE_FILE\";\nexport const GET_CELL_IMAGE_FILE_SUCCESS = \"cell/GET_CELL_IMAGE_FILE_SUCCESS\";\nexport const GET_CELL_IMAGE_FILE_FAILED = \"cell/GET_CELL_IMAGE_FILE_FAILED\";","import { db, storage } from \"../../firebase\";\nimport {\n  UPDATE_CELL,\n  UPDATE_CELL_SUCCESS,\n  UPDATE_CELL_FAILED,\n  GET_CELL_FILE,\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_FILE_FAILED,\n  GET_CELL_NAME_FILE,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_FAILED,\n  GET_CELL_IMAGE_FILE,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_FAILED,\n} from \"../actionTypes/cell\";\nimport { CLOSE_POPUP, CUSTOM_CELLS_SUBMITED } from \"../actionTypes/popups\";\n\nexport function updateCell(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== cell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(cell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell,\n      });\n      dispatch({ type: CUSTOM_CELLS_SUBMITED });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function updateImageCell(cell, file, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let bigImagePath =\n      \"/\" +\n      cell.tableId +\n      \"/\" +\n      cell.cellsRowId +\n      \"/\" +\n      cell.columnIndex +\n      \"/\" +\n      file.name;\n    await storage.ref(bigImagePath).put(file);\n    const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, bigImagePath };\n      console.log(newCell);\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        e,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function getCellImageFile(bigImagePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_IMAGE_FILE });\n    try {\n      storage\n        .ref(bigImagePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_IMAGE_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_IMAGE_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellNameFile(nameFilePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_NAME_FILE });\n    try {\n      storage\n        .ref(nameFilePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_NAME_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_NAME_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellFile(filePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_FILE });\n    try {\n      storage\n        .ref(filePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function updateInfoCell(cell, file, nameFile, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let filePath = \"\";\n      let nameFilePath = \"\";\n      if (file !== undefined) {\n        filePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          file.name;\n        await storage.ref(filePath).put(file);\n      } else if (cell.filePath && cell.filePath !== \"\") {\n        filePath = cell.filePath;\n      }\n      if (nameFile !== undefined) {\n        nameFilePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          nameFile.name;\n        await storage.ref(nameFilePath).put(nameFile);\n      } else if (cell.nameFilePath && cell.nameFilePath !== \"\") {\n        nameFilePath = cell.nameFilePath;\n      }\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, filePath, nameFilePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cancelCustomCells } from \"../../../state/actions/popups\";\nimport { updateCell } from \"../../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  container: {\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    background: \"white\",\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsInfo = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const customCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const cell = useSelector((store) => store.popups.cellToUpdate);\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const submitCustomCellsF = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell.cell,\n          customCells: convertCustomCells(customCells),\n        },\n        cellsRow\n      )\n    );\n  };\n\n  const convertCustomCells = (cells) => {\n    const data = [];\n    cells.forEach((element) => {\n      data.push({\n        columnIndex: element.columnIndex,\n        rowIndex: element.rowIndex,\n      });\n    });\n    return data;\n  };\n\n  const cancelCustomCellsF = () => {\n    dispatch(cancelCustomCells());\n  };\n\n  const convertCustomCellsName = (text) => {\n    return text.split(\"<br />\").join(\" \");\n  };\n\n  return customCells !== undefined ? (\n    <div className={classes.container}>\n      {letsUpdate && <div></div>}\n      <h2>Select cells</h2>\n      <div className={classes.cont}>\n        {customCells.map((cell, ix) => (\n          <p key={ix} className={classes.text}>\n            {cell.name === null ? \"\" : convertCustomCellsName(cell.name)}\n          </p>\n        ))}\n        {customCells.length === 0 ? (\n          <p className={classes.text}>No cells are selected</p>\n        ) : (\n          <p />\n        )}\n      </div>\n      <Button className={classes.cancelButton} onClick={cancelCustomCellsF}>\n        Cancel\n      </Button>\n      <Button className={classes.submitButton} onClick={submitCustomCellsF}>\n        Submit custom cells\n      </Button>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\nexport default SelectedCellsInfo;\n","import { useSelector } from \"react-redux\";\n\nconst BigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const cell = useSelector((store) => store.tables.bigImageCell);\n\n  return image !== undefined ? (\n    <img\n      style={{\n        position: \"absolute\",\n        top: `${\n          cell.rowIndex * 50 +\n          140 +\n          56 +\n          parseInt(cell.bigImageTopMargin) +\n          25 -\n          cell.bigImageHeight / 2\n        }px`,\n        left: `${\n          cell.columnIndex * 100 +\n          180 +\n          parseInt(cell.bigImageLeftMargin) +\n          50 -\n          cell.bigImageWidth / 2\n        }px`,\n      }}\n      src={image}\n      height={cell.bigImageHeight}\n      width={cell.bigImageWidth}\n      alt=\"big\"\n    />\n  ) : (\n    <div></div>\n  );\n};\nexport default BigImage;\n","import { Button } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeBigImage } from \"../../../state/actions/tables\";\n\nconst RemoveBigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const dispatch = useDispatch();\n\n  const removeBigImageFromTable = () => {\n    dispatch(removeBigImage());\n  };\n\n  return image !== undefined ? (\n    <Button\n      style={{\n        color: \"white\",\n        background: \"red\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\",\n      }}\n      onClick={removeBigImageFromTable}\n    >\n      REMOVE BIG IMAGE\n    </Button>\n  ) : (\n    <div></div>\n  );\n};\nexport default RemoveBigImage;\n","import { Button, Card, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCellsRows } from \"../../state/actions/cellsRows\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport CellsRow from \"./CellsRow\";\nimport {\n  deleteTable,\n  setTableJustCreatedFalse,\n} from \"../../state/actions/tables\";\nimport SelectedCellsInfo from \"./utils/SelectedCellsInfo\";\nimport BigImage from \"./utils/BigImage\";\nimport RemoveBigImage from \"./utils/RemoveBigImage\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst Table = ({ table }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n  const tableJustCreated = useSelector(\n    (store) => store.tables.tableJustCreated\n  );\n\n  const dispatch = useDispatch();\n\n  const timeoutFinished = useCallback(() => {\n    dispatch(getCellsRows(table.id));\n    dispatch(setTableJustCreatedFalse());\n  }, [dispatch, table]);\n\n  useEffect(() => {\n    if (!tableJustCreated) {\n      if (!loading) {\n        dispatch(getCellsRows(table.id));\n      }\n      setLoading(false);\n    } else {\n      setLoading(true);\n      setTimeout(timeoutFinished, 3000);\n    }\n  }, [dispatch, table, tableJustCreated, loading, timeoutFinished]);\n\n  const handleDelete = () => {\n    dispatch(deleteTable(table.id, cellsRows));\n  };\n\n  return (\n    <Card className={classes.card}>\n      <h2 className={classes.name}>{table.name}</h2>\n      {table.description.split(\"<br />\").map((text, ix) => (\n        <p className={classes.description} key={ix}>\n          {text}\n        </p>\n      ))}\n      <RemoveBigImage />\n      <SelectedCellsInfo />\n      {loading && <CircularProgress />}\n      {!loading && (\n        <div>\n          <div className={classes.cellContainer}>\n            <BigImage />\n            {cellsRows.map((cellsRow) => (\n              <CellsRow cellsRow={cellsRow} key={cellsRows.indexOf(cellsRow)} />\n            ))}\n          </div>\n          <div>\n            <Button className={classes.deleteButton} onClick={handleDelete}>\n              Delete\n            </Button>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\nTable.propTypes = {\n  table: PropTypes.object,\n};\nexport default Table;\n","import React from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\n\nimport { addTable } from \"../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst TableInfoPopup = (props) => {\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(addTable(name, description.split(\"\\n\").join(\"<br />\")));\n    props.handleClose();\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={props.handleClose}>\n          x\n        </span>\n        <h2>Create table</h2>\n        <TextField\n          required\n          fullWidth\n          name=\"name\"\n          variant=\"outlined\"\n          placeholder=\"Name\"\n          value={name}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleNameChange}\n        />\n        <TextField\n          required\n          fullWidth\n          name=\"description\"\n          variant=\"outlined\"\n          multiline={true}\n          rows={4}\n          rowsMax={4}\n          placeholder=\"Description\"\n          value={description}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleDescriptionChange}\n        />\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default TableInfoPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useEffect } from \"react\";\n\nimport { beginCustomSelect, closePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst ActionCellPopup = () => {\n  const [sumAll, setSumAll] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [rows, setRows] = React.useState(\"\");\n  const [actionType, setActionType] = React.useState(\"\");\n  const [typeActionType, setTypeActionType] = React.useState(\"\");\n  const [typeActionTypeName, setTypeActionTypeName] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell.sumAll) {\n      setSumAll(cell.sumAll);\n    } else {\n      setName(\n        cell.name === undefined ? \"\" : cell.name.split(\"<br />\").join(\"\\n\")\n      );\n      setActionType(cell.actionType);\n      setTypeActionType(cell.typeActionType);\n      setTypeActionTypeName(cell.typeActionTypeName);\n      setColor(cell.color);\n      setRows(cell.rows);\n    }\n  }, [cell]);\n\n  const actionTypes = [\"selectrows\", \"selecttype\", \"custom\"];\n  const typeActionTypes = [\"selecttypeall\", \"selecttyperows\"];\n  const actionTypesNames = [\"Select Rows\", \"Select Type\", \"Custom\"];\n  const typeActionTypesNames = [\"Select All Cells of Type\", \"Select Type Rows\"];\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleTypeNameChange = (event) => {\n    setTypeActionTypeName(event.target.value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (actionType === \"custom\") {\n      dispatch(\n        beginCustomSelect({\n          cell: {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n          },\n        })\n      );\n    } else {\n      dispatch(\n        updateCell(\n          {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n          },\n          cellsRow\n        )\n      );\n      handleClose();\n    }\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          color: \"white\",\n          actionType: \"\",\n          typeActionType: \"\",\n          typeActionTypeName: \"\",\n          rows: \"\",\n          sumAll: false,\n          type: \"notype\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleRowsChange = (event) => {\n    setRows(event.target.value);\n  };\n\n  const handleActionTypeChange = (event) => {\n    setActionType(event.target.value);\n  };\n\n  const handleTypeActionTypeChange = (event) => {\n    setTypeActionType(event.target.value);\n  };\n\n  const handleSumAll = () => {\n    setSumAll(!sumAll);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Action</h2>\n        <div>\n          <FormControlLabel\n            value={sumAll}\n            control={<Checkbox color=\"default\" onClick={handleSumAll} />}\n            label=\"Sum all?\"\n            checked={sumAll}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!sumAll && (\n          <div>\n            <TextField\n              fullWidth\n              name=\"name\"\n              variant=\"outlined\"\n              placeholder=\"Name\"\n              value={name}\n              multiline={true}\n              rows={3}\n              rowsMax={3}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleNameChange}\n            />\n            <TextField\n              fullWidth\n              name=\"color\"\n              variant=\"outlined\"\n              placeholder=\"Cell color\"\n              value={color}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleColorChange}\n            />\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"label\">Action Type</InputLabel>\n              <Select\n                id=\"select\"\n                value={actionType || \"\"}\n                onChange={handleActionTypeChange}\n              >\n                {actionTypes.map((item, ix) => (\n                  <MenuItem key={item} value={item}>\n                    {actionTypesNames[ix]}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            {actionType === actionTypes[1] && (\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"label\">Action Type</InputLabel>\n                <Select\n                  id=\"select\"\n                  value={typeActionType || \"\"}\n                  onChange={handleTypeActionTypeChange}\n                >\n                  {typeActionTypes.map((item, ix) => (\n                    <MenuItem key={item} value={item}>\n                      {typeActionTypesNames[ix]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n            {actionType === actionTypes[1] && (\n              <TextField\n                fullWidth\n                name=\"rows\"\n                variant=\"outlined\"\n                placeholder=\"Enter type name\"\n                value={typeActionTypeName || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleTypeNameChange}\n              />\n            )}\n            {(actionType === actionTypes[0] ||\n              (actionType === actionTypes[1] &&\n                typeActionType === typeActionTypes[1])) && (\n              <TextField\n                fullWidth\n                name=\"rows\"\n                variant=\"outlined\"\n                placeholder=\"Enter row indexes separated with Whitespaces ( Begining with 0 )\"\n                value={rows || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleRowsChange}\n              />\n            )}\n          </div>\n        )}\n        {cell.type !== \"notype\" && (\n          <Button className={classes.noTypeButton} onClick={handleNoTypeSubmit}>\n            MAKE NO TYPE\n          </Button>\n        )}\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Checkbox, FormControlLabel, makeStyles } from \"@material-ui/core\";\n\nimport { closePopup, submitNoTypePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst NoTypeCellPopup = () => {\n  const [isAction, setIsAction] = React.useState(false);\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleIsAction = () => {\n    setIsAction(!isAction);\n  };\n\n  const handleSubmit = () => {\n    dispatch(submitNoTypePopup(isAction));\n  };\n\n  const handleMakeEmptySubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"empty\" }, cellsRow));\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Select cell type</h2>\n        <div>\n          <FormControlLabel\n            value={isAction}\n            control={<Checkbox color=\"default\" onClick={handleIsAction} />}\n            label=\"Is it an action cell?\"\n            checked={isAction}\n            labelPlacement=\"start\"\n          />\n        </div>\n        <Button\n          className={classes.makeEmptyButton}\n          onClick={handleMakeEmptySubmit}\n        >\n          Make Empty\n        </Button>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit Type Cell\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default NoTypeCellPopup;\n","export const SHOW_SNACKBAR = \"snackbar/SHOW_SNACKBAR\";\nexport const CLOSE_SNACKBAR = \"snackbar/CLOSE_SNACKBAR\";\n","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nexport function showSnackbar(message) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_SNACKBAR, message });\n  };\n}\n\nexport function closeSnackbar() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_SNACKBAR });\n  };\n}\n","import React from \"react\";\nimport { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport {\n  getCellFile,\n  getCellNameFile,\n  updateInfoCell,\n  updateCell,\n} from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  borderInputcontainer: {\n    marginTop: \"50px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    marginBottom: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst InfoCellPopup = () => {\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [typeForAction, setTypeForAction] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [nameFile, setNameFile] = React.useState(undefined);\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [bluetoothContent, setBluetoothContent] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellFile);\n  const cellNameFile = useSelector((store) => store.popups.cellNameFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setName(\n        cell.name === undefined ? \"\" : cell.name.split(\"<br />\").join(\"\\n\")\n      );\n      setColor(cell.color);\n      setDescription(cell.description === undefined ? \"\" : cell.description);\n      setTop(cell.topBorder);\n      setBottom(cell.bottomBorder);\n      setLeft(cell.leftBorder);\n      setRight(cell.rightBorder);\n      setBluetoothContent(cell.bluetoothContent);\n      if (cell.nameFilePath !== undefined && cell.nameFilePath !== \"\") {\n        dispatch(getCellNameFile(cell.nameFilePath));\n      }\n      if (cell.filePath !== undefined && cell.filePath !== \"\") {\n        dispatch(getCellFile(cell.filePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleSubmit = () => {\n    dispatch(\n      updateInfoCell(\n        {\n          ...cell,\n          name: name.split(\"\\n\").join(\"<br />\"),\n          description,\n          color,\n          typeForAction,\n          topBorder: top,\n          bottomBorder: bottom,\n          leftBorder: left,\n          rightBorder: right,\n          type: \"info\",\n          bluetoothContent,\n        },\n        file,\n        nameFile,\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleDescriptionChange = (value) => {\n    setDescription(value);\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const nameFileLoaded = (loadedFile) => {\n    setNameFile(loadedFile);\n  };\n\n  const removeNameFile = () => {\n    setNameFile(undefined);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const handleTypeForAction = (event) => {\n    setTypeForAction(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBluetoothContentChange = (event) => {\n    setBluetoothContent(event.target.value);\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          description: \"\",\n          color: \"white\",\n          typeForAction: \"\",\n          topBorder: 1,\n          bottomBorder: 1,\n          leftBorder: 1,\n          rightBorder: 1,\n          type: \"notype\",\n          file: \"\",\n          nameFile: \"\",\n          bluetoothContent: \"\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Information</h2>\n        <TextField\n          required\n          fullWidth\n          name=\"name\"\n          variant=\"outlined\"\n          placeholder=\"Name\"\n          value={name}\n          multiline={true}\n          rows={3}\n          rowsMax={3}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleNameChange}\n        />\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={nameFileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.button}>Click to upload NAME image</Button>\n        </FilePicker>\n        {(nameFile || cellNameFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:\n            <strong>\n              {nameFile === undefined ? cellNameFile.name : nameFile.name}\n            </strong>\n            <button\n              className={classes.removeFileButton}\n              onClick={removeNameFile}\n            >\n              Remove\n            </button>\n          </div>\n        )}\n        <TextField\n          required\n          fullWidth\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <TextField\n          required\n          fullWidth\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Type for action\"\n          value={typeForAction}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleTypeForAction}\n        />\n        <FilePicker\n          extensions={[\"pdf\", \"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.button}>Click to upload file</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded file:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter description:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <div className={classes.borderInputcontainer}>\n          <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n          <TextField\n            required\n            name=\"top\"\n            variant=\"outlined\"\n            placeholder=\"Top\"\n            value={top}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleTopChange}\n          />\n          <TextField\n            required\n            name=\"right\"\n            variant=\"outlined\"\n            placeholder=\"Right\"\n            value={right}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleRightChange}\n          />\n          <TextField\n            required\n            name=\"bottom\"\n            variant=\"outlined\"\n            placeholder=\"Bottom\"\n            value={bottom}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleBottomChange}\n          />\n          <TextField\n            required\n            name=\"left\"\n            variant=\"outlined\"\n            placeholder=\"Left\"\n            value={left}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleLeftChange}\n          />\n          <TextField\n            required\n            fullWidth\n            name=\"bluetoothContent\"\n            variant=\"outlined\"\n            multiline={true}\n            rows={4}\n            rowsMax={4}\n            placeholder=\"Bluetooth content\"\n            value={bluetoothContent}\n            style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n            onChange={handleBluetoothContentChange}\n          />\n        </div>\n        <div>\n          {cell.type !== \"notype\" && (\n            <Button\n              className={classes.noTypeButton}\n              onClick={handleNoTypeSubmit}\n            >\n              MAKE NO TYPE\n            </Button>\n          )}\n          <Button className={classes.submitButton} onClick={handleSubmit}>\n            Submit\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default InfoCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { closePopup, showImagePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  notypeButton: {\n    border: \"1px solid black\",\n    background: \"blue\",\n    marginRight: \"20px\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst EmptyCellPopup = () => {\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"notype\" }, cellsRow));\n  };\n\n  const handleImageSubmit = () => {\n    dispatch(showImagePopup());\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <Button className={classes.notypeButton} onClick={handleSubmit}>\n          MAKE CELL NOTYPE\n        </Button>\n        <Button className={classes.button} onClick={handleImageSubmit}>\n          ADD IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default EmptyCellPopup;\n","import { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { updateImageCell, getCellImageFile } from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  fileButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst ImageCellPopup = () => {\n  const [width, setWidth] = React.useState(\"\");\n  const [height, setHeight] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [leftMargin, setLeftMargin] = React.useState(\"\");\n  const [topMargin, setTopMargin] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellImageFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setHeight(cell.bigImageHeight === undefined ? \"\" : cell.bigImageHeight);\n      setWidth(cell.bigImageWidth === undefined ? \"\" : cell.bigImageWidth);\n      setLeftMargin(\n        cell.bigImageLeftMargin === undefined ? \"\" : cell.bigImageLeftMargin\n      );\n      setTopMargin(\n        cell.bigImageTopMargin === undefined ? \"\" : cell.bigImageTopMargin\n      );\n      if (cell && cell.bigImagePath !== undefined && cell.bigImagePath !== \"\") {\n        dispatch(getCellImageFile(cell.bigImagePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleHeightChange = (event) => {\n    setHeight(event.target.value);\n  };\n\n  const handleTopMarginChange = (event) => {\n    setTopMargin(event.target.value);\n  };\n\n  const handleLeftMarginChange = (event) => {\n    setLeftMargin(event.target.value);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const handleSubmit = () => {\n    dispatch(\n      updateImageCell(\n        {\n          ...cell,\n          type: \"image\",\n          bigImageWidth: width,\n          bigImageHeight: height,\n          bigImageTopMargin: topMargin === \"\" ? 0 : topMargin,\n          bigImageLeftMargin: leftMargin === \"\" ? 0 : leftMargin,\n        },\n        file,\n        cellsRow\n      )\n    );\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.fileButton}>Click to upload image</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <h3>Single cell width = 100 and height = 50</h3>\n        <TextField\n          required\n          fullWidth\n          name=\"width\"\n          variant=\"outlined\"\n          placeholder=\"Enter width\"\n          value={width}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleWidthChange}\n        />\n        <TextField\n          required\n          fullWidth\n          name=\"height\"\n          variant=\"outlined\"\n          placeholder=\"Enter height\"\n          value={height}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleHeightChange}\n        />\n        <div style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>\n          <TextField\n            required\n            name=\"topMargin\"\n            variant=\"outlined\"\n            placeholder=\"Top margin\"\n            value={topMargin}\n            style={{\n              marginRight: \"10px\",\n              maxWidth: \"140px\",\n            }}\n            onChange={handleTopMarginChange}\n          />\n          <TextField\n            required\n            name=\"leftMargin\"\n            variant=\"outlined\"\n            placeholder=\"Left margin\"\n            value={leftMargin}\n            style={{\n              maxWidth: \"140px\",\n            }}\n            onChange={handleLeftMarginChange}\n          />\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          SUBMIT\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default ImageCellPopup;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TablesList from \"../tables_list/TablesList\";\nimport Table from \"../table/Table\";\nimport TableInfoPopup from \"../popup/TableInfoPopup\";\nimport ActionCellPopup from \"../popup/ActionCellPopup\";\nimport NoTypeCellPopup from \"../popup/NoTypeCellPopup\";\nimport InfoCellPopup from \"../popup/InfoCellPopup\";\nimport EmptyCellPopup from \"../popup/EmptyCellPopup\";\nimport ImageCellPopup from \"../popup/ImageCellPopup\";\n\nconst Home = () => {\n  const [isNamePopupOpen, setIsNamePopupOpen] = useState(false);\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const isActionCellPopupOpen = useSelector(\n    (store) => store.popups.actionPopupOpen\n  );\n  const isEmptyCellPopupOpen = useSelector(\n    (store) => store.popups.emptyCellPopupOpen\n  );\n  const isInfoCellPopupOpen = useSelector(\n    (store) => store.popups.infoPopupOpen\n  );\n  const noTypeCellPopupOpen = useSelector(\n    (store) => store.popups.noTypePopupOpen\n  );\n  const imageCellPopupOpen = useSelector(\n    (store) => store.popups.imagePopupOpen\n  );\n\n  const user = useSelector((store) => store.user.user);\n\n  const history = useHistory();\n\n  const popupOpened = () => {\n    window.scrollTo(0, 0);\n    disableBodyScroll(document);\n  };\n\n  isNamePopupOpen ||\n  isActionCellPopupOpen ||\n  isInfoCellPopupOpen ||\n  imageCellPopupOpen ||\n  isEmptyCellPopupOpen ||\n  noTypeCellPopupOpen\n    ? popupOpened()\n    : enableBodyScroll(document);\n\n  useEffect(() => {\n    if (user === undefined || user.role !== \"admin\") {\n      history.push(\"/\");\n    }\n    window.scrollTo(0, 0);\n  }, [user, history]);\n\n  const toggleNamePopup = () => {\n    setIsNamePopupOpen(!isNamePopupOpen);\n  };\n\n  return (\n    <Container\n      style={{\n        padding: \"10px\",\n        width: \"100%\",\n        display: \"inline-flex\",\n        flexDirection: \"row\",\n      }}\n    >\n      <TablesList showTableNamePopup={toggleNamePopup} />\n      {selectedTable === undefined ? (\n        <h2 style={{ flex: 1, textAlign: \"center\" }}>Please select a table</h2>\n      ) : (\n        <Table table={selectedTable} />\n      )}\n      {isNamePopupOpen && <TableInfoPopup handleClose={toggleNamePopup} />}\n      {isEmptyCellPopupOpen && <EmptyCellPopup />}\n      {isActionCellPopupOpen && <ActionCellPopup />}\n      {isInfoCellPopupOpen && <InfoCellPopup />}\n      {noTypeCellPopupOpen && <NoTypeCellPopup />}\n      {imageCellPopupOpen && <ImageCellPopup />}\n    </Container>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { closeSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nconst AppSnackbar = () => {\n  const classes = useStyles();\n  const open = useSelector((store) => store.snackbar.open);\n  const message = useSelector((store) => store.snackbar.message);\n  const dispatch = useDispatch();\n\n  if (!open) {\n    return null;\n  }\n\n  const close = () => {\n    dispatch(closeSnackbar());\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      open={open}\n      autoHideDuration={5000}\n      onClose={close}\n      message={<span>{message}</span>}\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={close}\n        >\n          <CloseIcon />\n        </IconButton>,\n      ]}\n    />\n  );\n};\n\nexport default AppSnackbar;\n","export const SIGN_IN = \"user/SIGN_IN\";\nexport const SIGN_IN_SUCCESS = \"user/SIGN_IN_SUCCESS\";\nexport const SIGN_IN_FAILED = \"user/SIGN_IN_FAILED\";\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button, Card, TextField, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signIn } from \"../../state/actions/user\";\n\nconst useStyles = makeStyles({\n  title: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: \"bold\",\n  },\n  container: {\n    background: \"white\",\n    borderRadius: \"10px\",\n    maxWidth: \"500px\",\n    alignContent: \"center\",\n    padding: \"10px\",\n    display: \"flex\",\n    marginTop: \"30px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    margin: \"10px\",\n    minWidth: \"200px\",\n    background: \"green\",\n    fontWeight: \"bold\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SignIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const user = useSelector((store) => store.user.user);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user !== undefined) {\n      history.push(\"/home\");\n    }\n  }, [user, history]);\n\n  const handleSubmit = () => {\n    dispatch(signIn({ email, password }));\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <Card className={classes.container}>\n      <Typography className={classes.title}>Sign In</Typography>\n      <TextField\n        required\n        fullWidth\n        name=\"email\"\n        variant=\"outlined\"\n        placeholder=\"Email\"\n        value={email}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handleEmailChange}\n      />\n      <TextField\n        required\n        fullWidth\n        name=\"password\"\n        variant=\"outlined\"\n        placeholder=\"Password\"\n        value={password}\n        type={\"password\"}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handlePasswordChange}\n      />\n      <Button className={classes.button} onClick={handleSubmit}>\n        Submit\n      </Button>\n    </Card>\n  );\n};\nexport default SignIn;\n","import { SIGN_IN, SIGN_IN_SUCCESS, SIGN_IN_FAILED } from \"../actionTypes/user\";\nimport { auth, db } from \"../../firebase\";\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    dispatch({ type: SIGN_IN });\n    try {\n      auth\n        .signInWithEmailAndPassword(user.email, user.password)\n        .then((value) => {\n          db.collection(\"users\")\n            .doc(value.user.uid)\n            .get()\n            .then((snapshot) => {\n              const dbUser = snapshot.data();\n              if (dbUser.role === \"admin\") {\n                dispatch({ type: SIGN_IN_SUCCESS, user: dbUser });\n              } else {\n                dispatch({ type: SIGN_IN_FAILED });\n              }\n            });\n        });\n    } catch (e) {\n      dispatch({ type: SIGN_IN_FAILED });\n    }\n  };\n}\n","import \"./App.css\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Home from \"./components/home/Home\";\nimport AppSnackbar from \"./components/popup/AppSnackbar\";\nimport SignIn from \"./components/sign-in/SignIn\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <CssBaseline />\n      <div\n        style={{\n          minHeight: \"100vh\",\n          width: \"100%\",\n          margin: \"0px\",\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/home\" component={Home} />\n          <Route path=\"/\" component={SignIn} />\n        </Switch>\n      </div>\n      <AppSnackbar />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nconst initialState = {\n  open: false,\n  message: \"\",\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SHOW_SNACKBAR: {\n      return { ...state, open: true, message: action.message };\n    }\n    case CLOSE_SNACKBAR: {\n      return { ...state, open: false, message: \"\" };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\n\nconst initialState = {\n  tables: [],\n  selectedTable: undefined,\n  tableJustCreated: false,\n  bigImage: undefined,\n  bigImageCell: undefined,\n  error: undefined,\n};\n\nexport default function tablesReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case GET_TABLES: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case REMOVE_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: undefined,\n        bigImageCell: undefined,\n        error: undefined,\n      };\n    }\n    case SET_TABLE_JUST_CREATED_FALSE: {\n      return {\n        ...state,\n        tableJustCreated: false,\n      };\n    }\n    case GET_TABLES_SUCCESS: {\n      return { ...state, tables: action.tables };\n    }\n    case GET_TABLES_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case ADD_TABLE: {\n      const newTables = state.tables;\n      newTables.push(action.table);\n      return {\n        ...state,\n        tableJustCreated: true,\n        selectedTable: action.table,\n        tables: newTables,\n      };\n    }\n    case SET_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: action.image,\n        bigImageCell: action.cell,\n      };\n    }\n    case SET_SELECTED_TABLE: {\n      return {\n        ...state,\n        selectedTable: action.table,\n        bigImage: undefined,\n        bigImageCell: undefined,\n      };\n    }\n    case DELETE_TABLE: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case DELETE_TABLE_SUCCESS: {\n      const newTables = state.tables;\n      state.tables.forEach((table) => {\n        if (table.id === action.id) {\n          newTables.remove(table);\n        }\n      });\n      return {\n        ...state,\n        selectedTable: undefined,\n        tables: newTables,\n      };\n    }\n    case DELETE_TABLE_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n} from \"../actionTypes/cell\";\nimport {\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  SUBMIT_NO_TYPE_POPUP,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CUSTOM_CELLS_SUBMITED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n} from \"../actionTypes/popups\";\n\nconst initialState = {\n  actionPopupOpen: false,\n  infoPopupOpen: false,\n  noTypePopupOpen: false,\n  emptyCellPopupOpen: false,\n  imagePopupOpen: false,\n  cell: undefined,\n  cellsRow: undefined,\n  cellFile: undefined,\n  cellNameFile: undefined,\n  cellImageFile: undefined,\n  cellToUpdate: undefined,\n  cellToUpdateCustomCells: undefined,\n  letsUpdate: false,\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case CANCEL_CUSTOM_CELLS: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case CUSTOM_CELLS_SUBMITED: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SHOW_ACTION_POPUP: {\n      return {\n        ...state,\n        actionPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case BEGIN_CUSTOM_SELECT: {\n      return {\n        ...state,\n        actionPopupOpen: false,\n        cellToUpdate: action.cell,\n        cellToUpdateCustomCells: [],\n      };\n    }\n    case CELL_TO_UPDATE_CUSTOM_CELL_SELECTED: {\n      const cells = state.cellToUpdateCustomCells;\n      if (cells.includes(action.cell)) {\n        const index = cells.indexOf(action.cell);\n        cells.splice(index, 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        cellToUpdateCustomCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SUBMIT_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: false,\n        actionPopupOpen: action.isAction,\n        infoPopupOpen: !action.isAction,\n      };\n    }\n    case SHOW_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_EMPTY_CELL_POPUP: {\n      return {\n        ...state,\n        emptyCellPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_IMAGE_CELL_POPUP: {\n      if (action.cell !== undefined) {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n          cell: action.cell,\n          cellsRow: action.cellsRow,\n        };\n      } else {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n        };\n      }\n    }\n    case SHOW_INFO_POPUP: {\n      return {\n        ...state,\n        infoPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case CLOSE_POPUP: {\n      return {\n        ...state,\n        infoPopupOpen: false,\n        actionPopupOpen: false,\n        noTypePopupOpen: false,\n        emptyCellPopupOpen: false,\n        imagePopupOpen: false,\n        cell: undefined,\n        cellsRow: undefined,\n        cellFile: undefined,\n        cellNameFile: undefined,\n        cellImageFile: undefined,\n      };\n    }\n    case GET_CELL_NAME_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellNameFile: action.file,\n      };\n    }\n    case GET_CELL_IMAGE_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellImageFile: action.file,\n      };\n    }\n    case GET_CELL_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellFile: action.file,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  CLEAR_CELLS_ROWS,\n} from \"../actionTypes/cellsRows\";\nimport { UPDATE_CELL_SUCCESS } from \"../actionTypes/cell\";\nconst initialState = {\n  cellsRows: [],\n  error: undefined,\n};\n\nexport default function cellsRowsReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case UPDATE_CELL_SUCCESS: {\n      let rowIndex;\n      let cellIndex;\n      state.cellsRows.forEach((cellsRow) => {\n        cellsRow.cells.forEach((cell) => {\n          if (\n            cell.columnIndex === action.cell.columnIndex &&\n            cell.rowIndex === action.cell.rowIndex\n          ) {\n            rowIndex = state.cellsRows.indexOf(cellsRow);\n            cellIndex = cellsRow.cells.indexOf(cell);\n          }\n        });\n      });\n      state.cellsRows[rowIndex].cells[cellIndex] = action.cell;\n      return { ...state, error: undefined };\n    }\n    case GET_CELLS_ROWS: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case GET_CELLS_ROWS_SUCCESS: {\n      action.data.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return { ...state, cellsRows: action.data };\n    }\n    case GET_CELLS_ROWS_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case CLEAR_CELLS_ROWS: {\n      return {\n        ...state,\n        cellsRows: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { SIGN_IN, SIGN_IN_SUCCESS, SIGN_IN_FAILED } from \"../actionTypes/user\";\n\nconst initialState = {\n  user: undefined,\n  error: false,\n};\n\nexport default function userReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SIGN_IN: {\n      return { ...state, error: false };\n    }\n    case SIGN_IN_SUCCESS: {\n      return { ...state, user: action.user };\n    }\n    case SIGN_IN_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport snackbar from \"./snackbar\";\nimport tables from \"./tables\";\nimport popups from \"./popups\";\nimport cellsRows from \"./cellsRows\";\nimport user from \"./user\";\n\nexport default combineReducers({\n  snackbar,\n  tables,\n  popups,\n  cellsRows,\n  user,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport reducers from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/* eslint-enable */\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\"],\n};\nconst pReducer = persistReducer(persistConfig, reducers);\n\nconst store = createStore(\n  pReducer,\n  compose(applyMiddleware(thunk), composeEnhancers())\n);\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./state/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}