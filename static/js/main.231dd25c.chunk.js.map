{"version":3,"sources":["state/actionTypes/tables.js","firebase.js","common/CellFunctions.js","state/actionTypes/cellsRows.js","state/actions/cellsRows.js","state/actionTypes/popups.js","state/actions/popups.js","components/tables_list/TablesListItem.js","state/actions/tables.js","state/actionTypes/user.js","components/tables_list/TablesList.js","state/actions/user.js","components/table/cells/EmptyCell.js","components/table/cells/Cell.js","components/table/CellsRow.js","state/actionTypes/cell.js","state/actions/cell.js","components/table/utils/SelectedCellsInfo.js","components/table/utils/BigImage.js","components/table/utils/RemoveBigImage.js","components/table/utils/SelectedCellsFormat.js","components/table/Table.js","components/popup/TableInfoPopup.js","components/popup/ActionCellPopup.js","components/popup/NoTypeCellPopup.js","state/actionTypes/snackbar.js","state/actions/snackbar.js","components/popup/InfoCellPopup.js","components/popup/EmptyCellPopup.js","components/popup/ImageCellPopup.js","components/popup/FormatCellsPopup.js","components/popup/AddToUserPopup.js","state/actionTypes/devices.js","components/popup/MapRaspberryPopup.js","state/actions/devices.js","components/popup/DevicesPopup.js","components/home/Home.js","components/popup/AppSnackbar.js","components/sign-in/SignIn.js","App.js","serviceWorker.js","state/reducers/snackbar.js","state/reducers/tables.js","state/reducers/popups.js","state/reducers/cellsRows.js","state/reducers/user.js","state/reducers/devices.js","state/reducers/index.js","state/store.js","index.js"],"names":["GET_TABLES","GET_TABLES_SUCCESS","GET_TABLES_FAILED","ADD_TABLE","DELETE_TABLE","DELETE_TABLE_SUCCESS","DELETE_TABLE_FAILED","SET_SELECTED_TABLE","SET_BIG_IMAGE","SET_TABLE_JUST_CREATED_FALSE","REMOVE_BIG_IMAGE","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","auth","getEmptyTableCells","tableId","data","push","rowIndex","cells","getNoTypeCell","getEmptyCell","getFirstEmptyRow","i","getEmptyRow","columnIndex","type","color","topBorder","leftBorder","rightBorder","bottomBorder","GET_CELLS_ROWS","GET_CELLS_ROWS_SUCCESS","GET_CELLS_ROWS_FAILED","CLEAR_CELLS_ROWS","ADD_SELECTING_CELL","BEGIN_FORMAT_SELECTING","STOP_FORMAT_SELECTING","UPDATE_CELLS_ROWS","getCellsRows","dispatch","a","collection","doc","get","then","snapshot","forEach","cellsRow","id","e","error","boxUpdate","cellInfo","cellsRows","sort","b","smallestRow","bigestRow","length","smallestColumn","bigestColumn","rowsToUpdate","cellsToUpdate","rowsForRequest","cell","newCell","width","index","getFormattedRow","includes","row","sendUpdateRowRequest","simpleUpdate","bottom","top","left","right","update","mirrorCell","cellIndex","indexOf","cancelIsSelecting","SHOW_RASP_POPUP","SHOW_DEVICES_POPUP","SHOW_ACTION_POPUP","CLOSE_POPUP","SHOW_INFO_POPUP","SHOW_NO_TYPE_POPUP","SHOW_IMAGE_CELL_POPUP","SHOW_EMPTY_CELL_POPUP","SUBMIT_NO_TYPE_POPUP","BEGIN_CUSTOM_SELECT","CELL_TO_UPDATE_CUSTOM_CELL_SELECTED","CUSTOM_CELLS_SUBMITED","CANCEL_CUSTOM_CELLS","SHOW_FORMAT_CELLS_POPUP","SHOW_ADD_TO_USER_POPUP","cancelCustomCells","showImagePopup","closePopup","useStyles","makeStyles","buttonNormal","fontSize","textTransform","borderRadius","borderColor","borderWidth","margin","whiteSpace","borderStyle","padding","background","buttonSelected","cursos","TablesListItem","item","selectedTable","useSelector","store","tables","useState","isSelected","setIsSelected","classes","useDispatch","useEffect","Button","onClick","table","className","name","SIGN_IN","SIGN_IN_SUCCESS","SIGN_IN_FAILED","GET_USERS_SUCCESS","ADD_TABLE_TO_USER","ADD_TABLE_TO_USER_SUCCESS","ADD_TABLE_TO_USER_FAILED","card","display","flexDirection","minHeight","maxWidth","flex","raspberrybutton","height","iconmenubutton","text","textAlign","TablesList","showTableNamePopup","didGetUsers","setDidGetUsers","ref","snap","Card","map","verticalAlign","EmptyCell","undefined","bigImagePath","getDownloadURL","image","catch","console","log","setBigImage","showEmptyCellPopup","props","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","borderTopColor","isCustomCell","borderRightColor","borderLeftColor","borderBottomColor","borderLeftStyle","borderRightStyle","borderTopStyle","borderBottomStyle","alignContent","justifyContent","lineHeight","fontWeight","Cell","cellToUpdate","popups","isSelecting","addSelectingCell","cellToUpdateCustomCellSelected","showNoTypePopup","showInfoPopup","showActionPopup","sumAll","style","marginLeft","marginRight","src","alt","dangerouslySetInnerHTML","__html","replaceAll","CellsRow","cellToUpdateCustomCells","selectedCells","cellsRowLetsUpdate","letsUpdate","UPDATE_CELL","UPDATE_CELL_SUCCESS","UPDATE_CELL_FAILED","GET_CELL_FILE_SUCCESS","GET_CELL_NAME_FILE_SUCCESS","GET_CELL_IMAGE_FILE_SUCCESS","updateCell","cellsRowId","newRow","element","container","marginBottom","marginTop","cont","border","submitButton","cancelButton","SelectedCellsInfo","customCells","convertCustomCells","ix","split","join","BigImage","bigImage","bigImageCell","position","parseInt","bigImageTopMargin","bigImageHeight","bigImageLeftMargin","bigImageWidth","RemoveBigImage","description","cellContainer","deleteButton","formatButton","SelectedCellsFormat","addToUserButton","Table","loading","setLoading","tableJustCreated","timeoutFinished","useCallback","setTimeout","CircularProgress","delete","deleteTable","popupbox","quillContainer","editor","box","maxHeight","overflow","closeicon","content","cursor","button","TableInfoPopup","React","setName","setDescription","handleClose","TextField","required","fullWidth","label","variant","placeholder","value","onChange","event","target","theme","add","cellsRowValue","newCells","addTable","formControl","minWidth","header","noTypeButton","ActionCellPopup","setSumAll","setColor","rows","setRows","actionType","setActionType","typeActionType","setTypeActionType","typeActionTypeName","setTypeActionTypeName","setFontSize","actionTypes","typeActionTypes","actionTypesNames","typeActionTypesNames","FormControlLabel","control","Checkbox","checked","labelPlacement","FormControl","InputLabel","Select","MenuItem","beginCustomSelect","makeEmptyButton","NoTypeCellPopup","isAction","setIsAction","submitNoTypePopup","SHOW_SNACKBAR","CLOSE_SNACKBAR","showSnackbar","message","fileNameContainer","removeFileButton","borderInputcontainer","borderText","InfoCellPopup","typeForAction","setTypeForAction","file","setFile","nameFile","setNameFile","setTop","setBottom","setLeft","setRight","baseTen","setBaseTen","baseThree","setBaseThree","baseHundred","setBaseHundred","baseFour","setBaseFour","databaseID","setDatabaseID","cellFile","cellNameFile","filePath","nameFilePath","getMetadata","showError","msg","extensions","loadedFile","onError","databaseId","put","updateInfoCell","notypeButton","EmptyCellPopup","fileButton","ImageCellPopup","setWidth","setHeight","leftMargin","setLeftMargin","topMargin","setTopMargin","cellImageFile","updateImageCell","FormatCellsPopup","isBoxBorder","setIsBoxBorder","submitSelectingCells","AddToUserPopup","selectedUser","setSelectedUser","users","user","email","snapshots","tableOrder","size","LOAD_DEVICES","LOAD_DEVICES_SUCCESS","LOAD_DEVICES_FAILED","LOAD_MAPPINGS","LOAD_MAPPINGS_SUCCESS","LOAD_MAPPINGS_FAILED","DELETE_MAPPING","DELETE_MAPPING_SUCCESS","DELETE_MAPPING_FAILED","ADD_RASP_TO_USER","ADD_RASP_TO_USER_SUCCESS","ADD_RASP_TO_USER_FAILED","boxik","columns","MapRaspberryPopup","didGet","setDidGet","shouldUpdate","setShouldUpdate","oldMappings","setOldMappings","mappings","devices","raspberryID","setRaspberryID","req","Request","method","headers","fetch","response","ok","json","handleDelete","mapping","body","JSON","stringify","sessionId","session_id","find","userId","onDelete","rasp","raspberryId","MappingsListItem","DevicesPopup","mappingsUrl","devicesReq","devicesResponse","DevicePopupItem","device_id","device_host_name","device_ip_address","last_connection_time","updated_at","Home","isNamePopupOpen","setIsNamePopupOpen","isActionCellPopupOpen","actionPopupOpen","isEmptyCellPopupOpen","emptyCellPopupOpen","isInfoCellPopupOpen","infoPopupOpen","noTypeCellPopupOpen","noTypePopupOpen","imageCellPopupOpen","imagePopupOpen","formatCellsPopupOpen","addToUserPopupOpen","raspberryPopupOpen","devicesPopupOpen","history","useHistory","window","scrollTo","disableBodyScroll","document","enableBodyScroll","role","toggleNamePopup","Container","close","spacing","AppSnackbar","open","snackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","title","alignItems","SignIn","setEmail","password","setPassword","Typography","signInWithEmailAndPassword","uid","dbUser","signIn","App","CssBaseline","exact","path","component","Boolean","location","hostname","match","initialState","combineReducers","state","newTables","remove","splice","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","whitelist","pReducer","persistReducer","reducers","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.231dd25c.chunk.js","sourcesContent":["export const GET_TABLES = \"tables/GET_TABLES\";\nexport const GET_TABLES_SUCCESS = \"tables/GET_TABLES_SUCCESS\";\nexport const GET_TABLES_FAILED = \"tables/GET_TABLES_FAILED\";\nexport const ADD_TABLE = \"tables/ADD_TABLE\";\nexport const DELETE_TABLE = \"tables/DELETE_TABLE\";\nexport const DELETE_TABLE_SUCCESS = \"tables/DELETE_TABLE_SUCCESS\";\nexport const DELETE_TABLE_FAILED = \"tables/DELETE_TABLE_FAILED\";\nexport const SET_SELECTED_TABLE = \"tables/SET_SELECTED_TABLE\";\nexport const SET_BIG_IMAGE = \"tables/SET_BIG_IMAGE\";\nexport const SET_TABLE_JUST_CREATED_FALSE =\n  \"tables/SET_TABLE_JUST_CREATED_FALSE\";\nexport const REMOVE_BIG_IMAGE = \"tables/REMOVE_BIG_IMAGE\";\n","import firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBN83KPofzkMJ8I61kt8Fn8our5BSWfNjw\",\n  authDomain: \"firmus-medicus-a254b.firebaseapp.com\",\n  projectId: \"firmus-medicus-a254b\",\n  storageBucket: \"firmus-medicus-a254b.appspot.com\",\n  messagingSenderId: \"906887380621\",\n  appId: \"1:906887380621:web:d9ab0a949265376084ecc4\",\n  measurementId: \"G-506ZEGQVF1\",\n};\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const auth = firebase.auth();\n","export function getEmptyTableCells(tableId) {\n  const data = [];\n  data.push(getFirstEmptyRow(tableId));\n  for (let i = 1; i < 28; i++) {\n    data.push(getEmptyRow(i, tableId));\n  }\n  return data;\n}\nfunction getFirstEmptyRow(tableId) {\n  return {\n    tableId,\n    rowIndex: 0,\n    cells: [\n      getNoTypeCell(0, 0),\n      getNoTypeCell(0, 1),\n      getNoTypeCell(0, 2),\n      getNoTypeCell(0, 3),\n      getEmptyCell(4),\n      getEmptyCell(5),\n      getEmptyCell(6),\n      getNoTypeCell(0, 7),\n      getNoTypeCell(0, 8),\n      getNoTypeCell(0, 9),\n      getNoTypeCell(0, 10),\n    ],\n  };\n}\nfunction getEmptyRow(rowIndex, tableId) {\n  return {\n    tableId,\n    rowIndex,\n    cells: [\n      getNoTypeCell(rowIndex, 0),\n      getNoTypeCell(rowIndex, 1),\n      getNoTypeCell(rowIndex, 2),\n      getNoTypeCell(rowIndex, 3),\n      getNoTypeCell(rowIndex, 4),\n      getNoTypeCell(rowIndex, 5),\n      getNoTypeCell(rowIndex, 6),\n      getNoTypeCell(rowIndex, 7),\n      getNoTypeCell(rowIndex, 8),\n      getNoTypeCell(rowIndex, 9),\n      getNoTypeCell(rowIndex, 10),\n    ],\n  };\n}\nfunction getNoTypeCell(rowIndex, columnIndex) {\n  return {\n    type: \"notype\",\n    rowIndex,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"1\",\n    leftBorder: \"1\",\n    rightBorder: \"1\",\n    bottomBorder: \"1\",\n  };\n}\nfunction getEmptyCell(columnIndex) {\n  return {\n    type: \"empty\",\n    rowIndex: 0,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"1\",\n    leftBorder: \"1\",\n    rightBorder: \"1\",\n    bottomBorder: \"1\",\n  };\n}\n","export const GET_CELLS_ROWS = \"cellsRows/GET_CELLS_ROWS\";\nexport const GET_CELLS_ROWS_SUCCESS = \"cellsRows/GET_CELLS_ROWS_SUCCESS\";\nexport const GET_CELLS_ROWS_FAILED = \"cellsRows/GET_CELLS_ROWS_FAILED\";\nexport const CLEAR_CELLS_ROWS = \"cellsRows/CLEAR_CELLS_ROWS\";\nexport const ADD_SELECTING_CELL = \"cellsRows/ADD_SELECTING_CELL\";\nexport const BEGIN_FORMAT_SELECTING = \"cellsRows/BEGIN_FORMAT_SELECTING\";\nexport const STOP_FORMAT_SELECTING = \"cellsRows/STOP_FORMAT_SELECTING\";\nexport const SUBMIT_FORMAT_SELECTING = \"cellsRows/SUBMIT_FORMAT_SELECTING\";\nexport const UPDATE_CELLS_ROWS = \"cellsRows/UPDATE_CELLS_ROWS\";\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n} from \"../actionTypes/cellsRows\";\nimport { db } from \"../../firebase\";\n\nexport function getCellsRows(tableId) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELLS_ROWS });\n\n    try {\n      const ref = db.collection(\"tables\").doc(tableId).collection(\"cellsRows\");\n      ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((cellsRow) => {\n          data.push({ ...cellsRow.data(), id: cellsRow.id });\n        });\n        dispatch({ type: GET_CELLS_ROWS_SUCCESS, data: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELLS_ROWS_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function submitSelectingCells(cellInfo, cells, cellsRows) {\n  return async (dispatch) => {\n    if (cellInfo.isBoxBorder) {\n      boxUpdate(dispatch, cellInfo, cells, cellsRows);\n    } else {\n      simpleUpdate(dispatch, cellInfo, cells, cellsRows);\n    }\n  };\n}\n\nconst boxUpdate = (dispatch, cellInfo, cells, cellsRows) => {\n  cells.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n  const smallestRow = cells[0].rowIndex;\n  const bigestRow =\n    cells.length > 1 ? cells[cells.length - 1].rowIndex : smallestRow;\n  cells.sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1));\n  const smallestColumn = cells[0].columnIndex;\n  const bigestColumn =\n    cells.length > 1 ? cells[cells.length - 1].columnIndex : smallestColumn;\n\n  const rowsToUpdate = [...cellsRows];\n  const cellsToUpdate = [];\n  const rowsForRequest = [];\n  cells.forEach((cell) => {\n    const newCell = {\n      ...cell,\n      color: cellInfo.color !== \"\" ? cellInfo.color : cell.color,\n      bottomBorder:\n        cell.rowIndex === bigestRow ? cellInfo.width : cell.bottomBorder,\n      topBorder:\n        cell.rowIndex === smallestRow ? cellInfo.width : cell.topBorder,\n      leftBorder:\n        cell.columnIndex === smallestColumn ? cellInfo.width : cell.leftBorder,\n      rightBorder:\n        cell.columnIndex === bigestColumn ? cellInfo.width : cell.rightBorder,\n    };\n    cellsToUpdate.push(newCell);\n  });\n  cellsToUpdate.forEach((cell, index) => {\n    rowsToUpdate[cell.rowIndex] = getFormattedRow(\n      cell,\n      cells[index],\n      rowsToUpdate[cell.rowIndex]\n    );\n    if (!rowsForRequest.includes(cell.rowIndex)) {\n      rowsForRequest.push(cell.rowIndex);\n    }\n  });\n  rowsToUpdate.forEach((row) => {\n    if (rowsForRequest.includes(row.rowIndex)) {\n      sendUpdateRowRequest(row);\n    }\n  });\n  dispatch({ type: UPDATE_CELLS_ROWS, cellsRows: rowsToUpdate });\n};\n\nconst simpleUpdate = (dispatch, cellInfo, cells, cellsRows) => {\n  const rowsToUpdate = [...cellsRows];\n  const cellsToUpdate = [];\n  const rowsForRequest = [];\n  cells.forEach((cell) => {\n    const newCell = {\n      ...cell,\n      color: cellInfo.color !== \"\" ? cellInfo.color : cell.color,\n      bottomBorder:\n        cellInfo.bottom !== \"\" ? cellInfo.bottom : cell.bottomBorder,\n      topBorder: cellInfo.top !== \"\" ? cellInfo.top : cell.topBorder,\n      leftBorder: cellInfo.left !== \"\" ? cellInfo.left : cell.leftBorder,\n      rightBorder: cellInfo.right !== \"\" ? cellInfo.right : cell.rightBorder,\n    };\n    cellsToUpdate.push(newCell);\n  });\n  cellsToUpdate.forEach((cell, index) => {\n    rowsToUpdate[cell.rowIndex] = getFormattedRow(\n      cell,\n      cells[index],\n      rowsToUpdate[cell.rowIndex]\n    );\n    if (!rowsForRequest.includes(cell.rowIndex)) {\n      rowsForRequest.push(cell.rowIndex);\n    }\n  });\n  rowsToUpdate.forEach((row) => {\n    if (rowsForRequest.includes(row.rowIndex)) {\n      sendUpdateRowRequest(row);\n    }\n  });\n  dispatch({ type: UPDATE_CELLS_ROWS, cellsRows: rowsToUpdate });\n};\n\nconst sendUpdateRowRequest = (row) => {\n  db.collection(\"tables\")\n    .doc(row.tableId)\n    .collection(\"cellsRows\")\n    .doc(row.id)\n    .update({ cells: row.cells });\n};\n\nconst getFormattedRow = (cell, mirrorCell, row) => {\n  const cellIndex = row.cells.indexOf(mirrorCell);\n  row.cells[cellIndex] = cell;\n  return row;\n};\n\nexport function addSelectingCell(cell) {\n  return async (dispatch) => {\n    dispatch({ type: ADD_SELECTING_CELL, cell });\n  };\n}\n\nexport function setIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_FORMAT_SELECTING });\n  };\n}\n\nexport function cancelIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: STOP_FORMAT_SELECTING });\n  };\n}\n","export const SHOW_RASP_POPUP = \"popups/SHOW_RASP_POPUP\";\nexport const SHOW_DEVICES_POPUP = \"popups/SHOW_DEVICES_POPUP\";\nexport const SHOW_ACTION_POPUP = \"popups/SHOW_ACTION_POPUP\";\nexport const CLOSE_POPUP = \"popups/CLOSE_ACTION_POPUP\";\nexport const SHOW_INFO_POPUP = \"popups/SHOW_INFO_POPUP\";\nexport const SHOW_NO_TYPE_POPUP = \"popups/SHOW_NO_TYPE_POPUP\";\nexport const SHOW_IMAGE_CELL_POPUP = \"popups/SHOW_IMAGE_CELL_POPUP\";\nexport const SHOW_EMPTY_CELL_POPUP = \"popups/SHOW_EMPTY_CELL_POPUP\";\nexport const SUBMIT_NO_TYPE_POPUP = \"popups/SUBMIT_NO_TYPE_POPUP\";\nexport const BEGIN_CUSTOM_SELECT = \"popups/BEGIN_CUSTOM_SELECT\";\nexport const CELL_TO_UPDATE_CUSTOM_CELL_SELECTED =\n  \"popups/CELL_TO_UPDATE_CUSTOM_CELL_SELECTED\";\nexport const CUSTOM_CELLS_SUBMITED = \"popups/CUSTOM_CELLS_SUBMITED\";\nexport const CANCEL_CUSTOM_CELLS = \"popups/CANCEL_CUSTOM_CELLS\";\nexport const SHOW_FORMAT_CELLS_POPUP = \"popups/SHOW_FORMAT_CELLS_POPUP\";\nexport const SHOW_ADD_TO_USER_POPUP = \"popups/SHOW_ADD_TO_USER_POPUP\";\n","import {\n  SHOW_RASP_POPUP,\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SUBMIT_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n  SHOW_ADD_TO_USER_POPUP,\n  SHOW_DEVICES_POPUP,\n} from \"../actionTypes/popups\";\n\nexport function beginCustomSelect(cell) {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_CUSTOM_SELECT, cell });\n  };\n}\n\nexport function cancelCustomCells() {\n  return async (dispatch) => {\n    dispatch({ type: CANCEL_CUSTOM_CELLS });\n  };\n}\n\nexport function cellToUpdateCustomCellSelected(cell) {\n  return async (dispatch) => {\n    dispatch({ type: CELL_TO_UPDATE_CUSTOM_CELL_SELECTED, cell });\n  };\n}\n\nexport function showFormatCellsPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_FORMAT_CELLS_POPUP });\n  };\n}\n\nexport function showImagePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_IMAGE_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showActionPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_ACTION_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showEmptyCellPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_EMPTY_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function submitNoTypePopup(isAction) {\n  return async (dispatch) => {\n    dispatch({ type: SUBMIT_NO_TYPE_POPUP, isAction });\n  };\n}\n\nexport function showNoTypePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_NO_TYPE_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showInfoPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_INFO_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showAddToUserPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_ADD_TO_USER_POPUP });\n  };\n}\n\nexport function showRaspPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_RASP_POPUP });\n  };\n}\n\nexport function showDevicesPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_DEVICES_POPUP });\n  };\n}\n\nexport function closePopup() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { setSelectedTable } from \"../../state/actions/tables\";\nimport { cancelIsSelecting } from \"../../state/actions/cellsRows\";\nimport { cancelCustomCells } from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  buttonNormal: {\n    color: \"black\",\n    fontSize: \"1em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    whiteSpace: \"wrap\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  buttonSelected: {\n    color: \"white\",\n    background: \"black\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n      cursos: \"auto\",\n    },\n  },\n});\n\nconst TablesListItem = ({ item }) => {\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const [isSelected, setIsSelected] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsSelected(selectedTable && selectedTable.id === item.id);\n  }, [setIsSelected, selectedTable, item]);\n\n  const selectTable = () => {\n    dispatch(setSelectedTable(item));\n    dispatch(cancelIsSelecting());\n    dispatch(cancelCustomCells());\n  };\n\n  return (\n    <Button\n      onClick={isSelected ? null : selectTable}\n      className={isSelected ? classes.buttonSelected : classes.buttonNormal}\n    >\n      {item.name}\n    </Button>\n  );\n};\nTablesListItem.propTypes = {\n  item: PropTypes.object,\n};\nexport default TablesListItem;\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\nimport { db, storage } from \"../../firebase\";\nimport { getEmptyTableCells } from \"../../common/CellFunctions\";\n\nexport function removeBigImage() {\n  return async (dispatch) => {\n    dispatch({ type: REMOVE_BIG_IMAGE });\n  };\n}\n\nexport function getTables() {\n  return async (dispatch) => {\n    dispatch({ type: GET_TABLES });\n\n    try {\n      const ref = db.collection(\"tables\");\n      await ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((table) => {\n          data.push({ ...table.data(), id: table.id });\n        });\n        dispatch({ type: GET_TABLES_SUCCESS, tables: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_TABLES_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setTableJustCreatedFalse() {\n  return async (dispatch) => {\n    dispatch({\n      type: SET_TABLE_JUST_CREATED_FALSE,\n    });\n  };\n}\n\nexport function addTable(name, description) {\n  return async (dispatch) => {\n    const ref = db.collection(\"tables\");\n    await ref.add({ name, description }).then((table) => {\n      const cellsRows = getEmptyTableCells(table.id);\n      cellsRows.forEach((cellsRow) => {\n        ref\n          .doc(table.id)\n          .collection(\"cellsRows\")\n          .add({\n            tableId: cellsRow.tableId,\n            rowIndex: cellsRow.rowIndex,\n          })\n          .then((cellsRowValue) => {\n            const newCells = [];\n            cellsRow.cells.forEach((cell) =>\n              newCells.push({\n                ...cell,\n                tableId: table.id,\n                cellsRowId: cellsRowValue.id,\n              })\n            );\n            ref\n              .doc(table.id)\n              .collection(\"cellsRows\")\n              .doc(cellsRowValue.id)\n              .update({ cells: newCells });\n          });\n      });\n\n      dispatch({\n        type: ADD_TABLE,\n        table: { id: table.id, name, description },\n      });\n    });\n  };\n}\n\nexport function deleteTable(tableId, cellsRows) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_TABLE });\n    try {\n      var ref = db.collection(\"tables\").doc(tableId);\n      cellsRows.forEach((row) => {\n        ref.collection(\"cellsRows\").doc(row.id).delete();\n      });\n      ref.delete();\n      dispatch({ type: DELETE_TABLE_SUCCESS, tableId });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: DELETE_TABLE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setBigImage(cell) {\n  return async (dispatch) => {\n    storage\n      .ref(cell.bigImagePath)\n      .getDownloadURL()\n      .then((image) => {\n        dispatch({ type: SET_BIG_IMAGE, image, cell });\n      })\n      .catch(() => {\n        console.log(\"error\");\n      });\n  };\n}\n\nexport function setSelectedTable(table) {\n  return async (dispatch) => {\n    dispatch({ type: SET_SELECTED_TABLE, table });\n  };\n}\n","export const SIGN_IN = \"user/SIGN_IN\";\nexport const SIGN_IN_SUCCESS = \"user/SIGN_IN_SUCCESS\";\nexport const SIGN_IN_FAILED = \"user/SIGN_IN_FAILED\";\nexport const GET_USERS = \"user/GET_USERS\";\nexport const GET_USERS_SUCCESS = \"user/GET_USERS_SUCCESS\";\nexport const GET_USERS_FAILED = \"user/GET_USERS_FAILED\";\nexport const ADD_TABLE_TO_USER = \"user/ADD_TABLE_TO_USER\";\nexport const ADD_TABLE_TO_USER_SUCCESS = \"user/ADD_TABLE_TO_USER_SUCCESS\";\nexport const ADD_TABLE_TO_USER_FAILED = \"user/ADD_TABLE_TO_USER_FAILED\";\n","import { makeStyles } from \"@material-ui/core\";\nimport { Card, Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport TablesListItem from \"./TablesListItem\";\nimport { useEffect, useState } from \"react\";\nimport { getTables } from \"../../state/actions/tables\";\nimport { getUsers } from \"../../state/actions/user\";\nimport { showRaspPopup, showDevicesPopup } from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    maxWidth: \"150px\",\n    flex: 1,\n  },\n  raspberrybutton: {\n    height: \"35px\",\n    color: \"white\",\n    background: \"black\",\n    fontSize: \"1em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"#FFFFFF\",\n    borderWidth: \"1px\",\n    margin: \"0px auto 5px auto\",\n    borderStyle: \"solid\",\n    \"&:hover\": {\n      color: \"black\",\n      background: \"white\",\n      borderColor: \"black\",\n    },\n  },\n  iconmenubutton: {\n    height: \"35px\",\n    color: \"black\",\n    fontSize: \"2em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"#FFFFFF\",\n    borderWidth: \"1px\",\n    margin: \"0px auto 5px auto\",\n    borderStyle: \"solid\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  text: {\n    textAlign: \"center\",\n    margin: \"5px\",\n  },\n});\n\nconst TablesList = ({ showTableNamePopup }) => {\n  const [didGetUsers, setDidGetUsers] = useState(false);\n  const classes = useStyles();\n  const tables = useSelector((store) => store.tables.tables);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTables());\n    if (!didGetUsers) {\n      dispatch(getUsers());\n      setDidGetUsers(true);\n    }\n  }, [dispatch, didGetUsers]);\n\n  const toggleRaspPopup = () => {\n    dispatch(showRaspPopup());\n  };\n\n  const toggleDevicesPopup = () => {\n    dispatch(showDevicesPopup());\n  };\n\n  return (\n    <Card className={classes.card}>\n      <Button className={classes.raspberrybutton} onClick={toggleDevicesPopup}>\n        SHOW DEVICES\n      </Button>\n      <Button className={classes.raspberrybutton} onClick={toggleRaspPopup}>\n        MAP RASPBERRY\n      </Button>\n      <h3 className={classes.text}>Tables</h3>\n      <Button className={classes.iconmenubutton} onClick={showTableNamePopup}>\n        <AddIcon />\n      </Button>\n      {tables.map((item) => (\n        <TablesListItem item={item} key={tables.indexOf(item)} />\n      ))}\n    </Card>\n  );\n};\nTablesList.propTypes = {\n  showTableNamePopup: PropTypes.func,\n};\nexport default TablesList;\n","import {\n  SIGN_IN,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAILED,\n  GET_USERS,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAILED,\n  ADD_TABLE_TO_USER,\n  ADD_TABLE_TO_USER_SUCCESS,\n  ADD_TABLE_TO_USER_FAILED,\n} from \"../actionTypes/user\";\nimport { auth, db } from \"../../firebase\";\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    dispatch({ type: SIGN_IN });\n    try {\n      auth\n        .signInWithEmailAndPassword(user.email, user.password)\n        .then((value) => {\n          db.collection(\"users\")\n            .doc(value.user.uid)\n            .get()\n            .then((snapshot) => {\n              const dbUser = snapshot.data();\n              if (dbUser.role === \"admin\") {\n                dispatch({ type: SIGN_IN_SUCCESS, user: dbUser });\n              } else {\n                dispatch({ type: SIGN_IN_FAILED });\n              }\n            });\n        });\n    } catch (e) {\n      dispatch({ type: SIGN_IN_FAILED });\n    }\n  };\n}\n\nexport function getUsers() {\n  return async (dispatch) => {\n    dispatch({ type: GET_USERS });\n    try {\n      db.collection(\"users\")\n        .get()\n        .then((snapshot) => {\n          const data = [];\n          snapshot.forEach((snap) => {\n            data.push({ ...snap.data(), id: snap.id });\n          });\n          dispatch({ type: GET_USERS_SUCCESS, data });\n        });\n    } catch (e) {\n      dispatch({ type: GET_USERS_FAILED });\n    }\n  };\n}\n\nexport function addTableToUser(user, table) {\n  return async (dispatch) => {\n    dispatch({ type: ADD_TABLE_TO_USER });\n    try {\n      const ref = db.collection(\"users\").doc(user.id).collection(\"tables\");\n      ref.get().then((snapshots) => {\n        ref.add({ tableId: table.id, tableOrder: snapshots.size });\n        dispatch({ type: ADD_TABLE_TO_USER_SUCCESS });\n      });\n    } catch (e) {\n      dispatch({ type: ADD_TABLE_TO_USER_FAILED });\n    }\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {\n  showEmptyCellPopup,\n  showImagePopup,\n} from \"../../../state/actions/popups\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { setBigImage } from \"../../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  cell: {\n    height: \"50px\",\n    width: \"100px\",\n    display: \"table-cell\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n  },\n});\n\nconst EmptyCell = ({ cell, cellsRow }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell && cell.bigImagePath !== undefined) {\n      dispatch(setBigImage(cell));\n    }\n  }, [cell, dispatch]);\n\n  const action = () => {\n    if (cell.type === \"empty\") {\n      dispatch(showEmptyCellPopup(cell, cellsRow));\n    } else {\n      dispatch(showImagePopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.type === \"empty\" ? \"\" : \"image\"}\n    </div>\n  );\n};\nEmptyCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n};\nexport default EmptyCell;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  showActionPopup,\n  showInfoPopup,\n  showNoTypePopup,\n  cellToUpdateCustomCellSelected,\n} from \"../../../state/actions/popups\";\nimport { addSelectingCell } from \"../../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  cell: {\n    background: (props) => props.color,\n    borderLeftWidth: (props) => props.left + \"px\",\n    borderRightWidth: (props) => props.right + \"px\",\n    borderTopWidth: (props) => props.top + \"px\",\n    borderBottomWidth: (props) => props.bottom + \"px\",\n    borderTopColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderRightColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderLeftColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderBottomColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    height: \"50px\",\n    width: \"100px\",\n    borderLeftStyle: \"solid\",\n    borderRightStyle: \"solid\",\n    borderTopStyle: \"solid\",\n    borderBottomStyle: \"solid\",\n    alignContent: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    display: \"table-cell\",\n    verticalAlign: \"middle\",\n  },\n  text: {\n    fontSize: \"10px\",\n    margin: \"0px\",\n    lineHeight: \"1.1\",\n    fontWeight: \"bold\",\n  },\n});\n\nconst Cell = ({ cell, cellsRow, isCustomCell }) => {\n  const classes = useStyles({\n    left: cell.leftBorder,\n    right: cell.rightBorder,\n    top: cell.topBorder,\n    bottom: cell.bottomBorder,\n    color: cell.color,\n    isCustomCell,\n  });\n  const cellToUpdate = useSelector((store) => store.popups.cellToUpdate);\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const action = () => {\n    if (isSelecting) {\n      dispatch(addSelectingCell(cell));\n    } else if (cellToUpdate !== undefined) {\n      if (\n        !(\n          cellToUpdate.cell.columnIndex === cell.columnIndex &&\n          cellToUpdate.cell.rowIndex === cell.rowIndex\n        ) &&\n        cell.type === \"info\"\n      ) {\n        dispatch(cellToUpdateCustomCellSelected(cell));\n      }\n    } else if (cell.type === \"notype\") {\n      dispatch(showNoTypePopup(cell, cellsRow));\n    } else if (cell.type === \"info\") {\n      dispatch(showInfoPopup(cell, cellsRow));\n    } else if (cell.type === \"action\") {\n      dispatch(showActionPopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.sumAll && (\n        <img\n          style={{\n            width: \"25px\",\n            height: \"25px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n          src={\"/dao.png\"}\n          alt=\"all\"\n        />\n      )}\n      {cell.name && !cell.sumAll && (\n        <div\n          dangerouslySetInnerHTML={{\n            __html: cell.name\n              .replaceAll(\"<p>\", \"<span>\")\n              .replaceAll(\"</p>\", \"</span><br/>\"),\n          }}\n        ></div>\n      )}\n    </div>\n  );\n};\nCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n  isCustomCell: PropTypes.bool,\n};\nexport default Cell;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nimport EmptyCell from \"./cells/EmptyCell\";\nimport Cell from \"./cells/Cell\";\n\nconst useStyles = makeStyles({\n  row: {\n    display: \"table-row\",\n  },\n});\n\nconst CellsRow = ({ cellsRow }) => {\n  const classes = useStyles();\n  const cellToUpdateCustomCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRowLetsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  return (\n    <div className={classes.row}>\n      {letsUpdate && cellsRowLetsUpdate && <div></div>}\n      {cellsRow &&\n        cellsRow.cells &&\n        cellsRow.cells\n          .sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1))\n          .map((cell) =>\n            cell.type === \"empty\" || cell.type === \"image\" ? (\n              <EmptyCell\n                cell={cell}\n                cellsRow={cellsRow}\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            ) : (\n              <Cell\n                cell={cell}\n                cellsRow={cellsRow}\n                isCustomCell={\n                  (cellToUpdateCustomCells &&\n                    cellToUpdateCustomCells.includes(cell)) ||\n                  (selectedCells && selectedCells.includes(cell))\n                }\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            )\n          )}\n    </div>\n  );\n};\nCellsRow.propTypes = {\n  cellsRow: PropTypes.object,\n};\nexport default CellsRow;\n","export const UPDATE_CELL = \"cell/UPDATE_CELL\";\nexport const UPDATE_CELL_SUCCESS = \"cell/UPDATE_CELL_SUCCESS\";\nexport const UPDATE_CELL_FAILED = \"cell/UPDATE_CELL_FAILED\";\nexport const GET_CELL_FILE = \"cell/GET_CELL_FILE\";\nexport const GET_CELL_FILE_SUCCESS = \"cell/GET_CELL_FILE_SUCCESS\";\nexport const GET_CELL_FILE_FAILED = \"cell/GET_CELL_FILE_FAILED\";\nexport const GET_CELL_NAME_FILE = \"cell/GET_CELL_NAME_FILE\";\nexport const GET_CELL_NAME_FILE_SUCCESS = \"cell/GET_CELL_NAME_FILE_SUCCESS\";\nexport const GET_CELL_NAME_FILE_FAILED = \"cell/GET_CELL_NAME_FILE_FAILED\";\nexport const GET_CELL_IMAGE_FILE = \"cell/GET_CELL_IMAGE_FILE\";\nexport const GET_CELL_IMAGE_FILE_SUCCESS = \"cell/GET_CELL_IMAGE_FILE_SUCCESS\";\nexport const GET_CELL_IMAGE_FILE_FAILED = \"cell/GET_CELL_IMAGE_FILE_FAILED\";","import { db, storage } from \"../../firebase\";\nimport {\n  UPDATE_CELL,\n  UPDATE_CELL_SUCCESS,\n  UPDATE_CELL_FAILED,\n  GET_CELL_FILE,\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_FILE_FAILED,\n  GET_CELL_NAME_FILE,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_FAILED,\n  GET_CELL_IMAGE_FILE,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_FAILED,\n} from \"../actionTypes/cell\";\nimport { CLOSE_POPUP, CUSTOM_CELLS_SUBMITED } from \"../actionTypes/popups\";\n\nexport function updateCell(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== cell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(cell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell,\n      });\n      dispatch({ type: CUSTOM_CELLS_SUBMITED });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function updateImageCell(cell, file, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let bigImagePath =\n        \"/\" +\n        cell.tableId +\n        \"/\" +\n        cell.cellsRowId +\n        \"/\" +\n        cell.columnIndex +\n        \"/\" +\n        file.name;\n      await storage.ref(bigImagePath).put(file);\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, bigImagePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        e,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function getCellImageFile(bigImagePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_IMAGE_FILE });\n    try {\n      storage\n        .ref(bigImagePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_IMAGE_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_IMAGE_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellNameFile(nameFilePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_NAME_FILE });\n    try {\n      storage\n        .ref(nameFilePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_NAME_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_NAME_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellFile(filePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_FILE });\n    try {\n      storage\n        .ref(filePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function updateInfoCell(cell, file, nameFile, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let filePath = \"\";\n      let nameFilePath = \"\";\n      if (file !== undefined) {\n        filePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          file.name;\n        await storage.ref(filePath).put(file);\n      } else if (cell.filePath && cell.filePath !== \"\") {\n        filePath = cell.filePath;\n      }\n      if (nameFile !== undefined) {\n        nameFilePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          nameFile.name;\n        await storage.ref(nameFilePath).put(nameFile);\n      } else if (cell.nameFilePath && cell.nameFilePath !== \"\") {\n        nameFilePath = cell.nameFilePath;\n      }\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, filePath, nameFilePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      console.log(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      console.log(error);\n      console.log(e);\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cancelCustomCells } from \"../../../state/actions/popups\";\nimport { updateCell } from \"../../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  container: {\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    background: \"white\",\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsInfo = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const customCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const cell = useSelector((store) => store.popups.cellToUpdate);\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const submitCustomCellsF = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell.cell,\n          customCells: convertCustomCells(customCells),\n        },\n        cellsRow\n      )\n    );\n  };\n\n  const convertCustomCells = (cells) => {\n    const data = [];\n    cells.forEach((element) => {\n      data.push({\n        columnIndex: element.columnIndex,\n        rowIndex: element.rowIndex,\n      });\n    });\n    return data;\n  };\n\n  const cancelCustomCellsF = () => {\n    dispatch(cancelCustomCells());\n  };\n\n  const convertCustomCellsName = (text) => {\n    return text.split(\"<br />\").join(\" \");\n  };\n\n  return customCells !== undefined ? (\n    <div className={classes.container}>\n      {letsUpdate && <div></div>}\n      <h2>Select cells</h2>\n      <div className={classes.cont}>\n        {customCells.map((cell, ix) => (\n          <p key={ix} className={classes.text}>\n            {cell.name === null ? \"\" : convertCustomCellsName(cell.name)}\n          </p>\n        ))}\n        {customCells.length === 0 ? (\n          <p className={classes.text}>No cells are selected</p>\n        ) : (\n          <p />\n        )}\n      </div>\n      <Button className={classes.cancelButton} onClick={cancelCustomCellsF}>\n        Cancel\n      </Button>\n      <Button className={classes.submitButton} onClick={submitCustomCellsF}>\n        Submit custom cells\n      </Button>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\nexport default SelectedCellsInfo;\n","import { useSelector } from \"react-redux\";\n\nconst BigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const cell = useSelector((store) => store.tables.bigImageCell);\n\n  return image !== undefined ? (\n    <img\n      style={{\n        position: \"absolute\",\n        top: `${\n          cell.rowIndex * 50 +\n          140 +\n          64 +\n          56 +\n          parseInt(cell.bigImageTopMargin) +\n          25 -\n          cell.bigImageHeight / 2\n        }px`,\n        left: `${\n          cell.columnIndex * 100 +\n          180 +\n          parseInt(cell.bigImageLeftMargin) +\n          50 -\n          cell.bigImageWidth / 2\n        }px`,\n      }}\n      src={image}\n      height={cell.bigImageHeight}\n      width={cell.bigImageWidth}\n      alt=\"big\"\n    />\n  ) : (\n    <div></div>\n  );\n};\nexport default BigImage;\n","import { Button } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeBigImage } from \"../../../state/actions/tables\";\n\nconst RemoveBigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const dispatch = useDispatch();\n\n  const removeBigImageFromTable = () => {\n    dispatch(removeBigImage());\n  };\n\n  return image !== undefined ? (\n    <Button\n      style={{\n        color: \"white\",\n        background: \"red\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\",\n      }}\n      onClick={removeBigImageFromTable}\n    >\n      TEMPORARILY REMOVE BIG IMAGE ( UNTIL REFRESH )\n    </Button>\n  ) : (\n    <div></div>\n  );\n};\nexport default RemoveBigImage;\n","import { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cancelIsSelecting } from \"../../../state/actions/cellsRows\";\nimport { showFormatCellsPopup } from \"../../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"20px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsFormat = () => {\n  const classes = useStyles();\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const letsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n  const dispatch = useDispatch();\n\n  const convertCellsName = (text) => {\n    return text ? text.split(\"<br />\").join(\" \") : \"\";\n  };\n\n  const handleFormat = () => {\n    dispatch(showFormatCellsPopup());\n  };\n\n  const handleCancel = () => {\n    dispatch(cancelIsSelecting());\n  };\n\n  return (\n    <div>\n      <Button className={classes.formatButton} onClick={handleFormat}>\n        Format Cells\n      </Button>\n      <Button className={classes.cancelButton} onClick={handleCancel}>\n        CANCEL\n      </Button>\n      <h2>Select cells</h2>\n      {letsUpdate && <div></div>}\n      <div className={classes.cont}>\n        {selectedCells &&\n          selectedCells.map((cell, ix) => (\n            <p key={ix} className={classes.text}>\n              {cell.name === null ? \"\" : convertCellsName(cell.name)}\n            </p>\n          ))}\n      </div>\n      {!selectedCells || selectedCells.length === 0 ? (\n        <p>No cells are selected</p>\n      ) : (\n        <span />\n      )}\n    </div>\n  );\n};\nexport default SelectedCellsFormat;\n","import { Button, Card, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCellsRows, setIsSelecting } from \"../../state/actions/cellsRows\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport CellsRow from \"./CellsRow\";\nimport {\n  deleteTable,\n  setTableJustCreatedFalse,\n} from \"../../state/actions/tables\";\nimport SelectedCellsInfo from \"./utils/SelectedCellsInfo\";\nimport BigImage from \"./utils/BigImage\";\nimport RemoveBigImage from \"./utils/RemoveBigImage\";\nimport SelectedCellsFormat from \"./utils/SelectedCellsFormat\";\nimport { showAddToUserPopup } from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    height: \"20px\",\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  addToUserButton: {\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst Table = ({ table }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n  const tableJustCreated = useSelector(\n    (store) => store.tables.tableJustCreated\n  );\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const timeoutFinished = useCallback(() => {\n    dispatch(getCellsRows(table.id));\n    dispatch(setTableJustCreatedFalse());\n  }, [dispatch, table]);\n\n  useEffect(() => {\n    if (!tableJustCreated) {\n      if (!loading) {\n        dispatch(getCellsRows(table.id));\n      }\n      setLoading(false);\n    } else {\n      setLoading(true);\n      setTimeout(timeoutFinished, 3000);\n    }\n  }, [dispatch, table, tableJustCreated, loading, timeoutFinished]);\n\n  const handleDelete = () => {\n    dispatch(deleteTable(table.id, cellsRows));\n  };\n\n  const handleAddToUser = () => {\n    dispatch(showAddToUserPopup());\n  };\n\n  const handleSelect = () => {\n    dispatch(setIsSelecting());\n  };\n\n  return (\n    <Card className={classes.card}>\n      <h2 className={classes.name}>{table.name}</h2>\n      <div\n        dangerouslySetInnerHTML={{\n          __html: table.description\n            .replaceAll(\"<p\", \"<span\")\n            .replaceAll(\"</p>\", \"</span><br/>\"),\n        }}\n      ></div>\n      <RemoveBigImage />\n      <SelectedCellsInfo />\n      {loading && <CircularProgress />}\n      {!loading && (\n        <div>\n          {!isSelecting && (\n            <Button className={classes.formatButton} onClick={handleSelect}>\n              Select Cells\n            </Button>\n          )}\n          {isSelecting && <SelectedCellsFormat />}\n          <div className={classes.cellContainer}>\n            <BigImage />\n            {cellsRows.map((cellsRow) => (\n              <CellsRow cellsRow={cellsRow} key={cellsRows.indexOf(cellsRow)} />\n            ))}\n          </div>\n          <div>\n            <Button\n              className={classes.addToUserButton}\n              onClick={handleAddToUser}\n            >\n              ADD TABLE TO USER\n            </Button>\n            <Button className={classes.deleteButton} onClick={handleDelete}>\n              Delete\n            </Button>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\nTable.propTypes = {\n  table: PropTypes.object,\n};\nexport default Table;\n","import React from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport ReactQuill from \"react-quill\";\n\nimport { addTable } from \"../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    marginTop: \"60px\",\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst TableInfoPopup = (props) => {\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(addTable(name, description));\n    props.handleClose();\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleDescriptionChange = (value) => {\n    setDescription(value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={props.handleClose}>\n          x\n        </span>\n        <h2>Create table</h2>\n        <TextField\n          required\n          fullWidth\n          label=\"Name\"\n          name=\"name\"\n          variant=\"outlined\"\n          placeholder=\"Name\"\n          value={name}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleNameChange}\n        />\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter description:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default TableInfoPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useEffect } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nimport { beginCustomSelect, closePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n});\n\nconst ActionCellPopup = () => {\n  const [sumAll, setSumAll] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [rows, setRows] = React.useState(\"\");\n  const [actionType, setActionType] = React.useState(\"\");\n  const [typeActionType, setTypeActionType] = React.useState(\"\");\n  const [typeActionTypeName, setTypeActionTypeName] = React.useState(\"\");\n  const [fontSize, setFontSize] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell.sumAll) {\n      setSumAll(cell.sumAll);\n    } else {\n      setName(cell.name === undefined ? \"\" : cell.name);\n      setFontSize(cell.fontSize);\n      setActionType(cell.actionType);\n      setTypeActionType(cell.typeActionType);\n      setTypeActionTypeName(cell.typeActionTypeName);\n      setColor(cell.color);\n      setRows(cell.rows);\n    }\n  }, [cell]);\n\n  const actionTypes = [\"selectrows\", \"selecttype\", \"custom\"];\n  const typeActionTypes = [\"selecttypeall\", \"selecttyperows\"];\n  const actionTypesNames = [\"Select Rows\", \"Select Type\", \"Custom\"];\n  const typeActionTypesNames = [\"Select All Cells of Type\", \"Select Type Rows\"];\n\n  const handleNameChange = (value) => {\n    setName(value);\n  };\n\n  const handleTypeNameChange = (event) => {\n    setTypeActionTypeName(event.target.value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (actionType === \"custom\") {\n      dispatch(\n        beginCustomSelect({\n          cell: {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            fontSize: fontSize === undefined ? \"\" : fontSize,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n          },\n        })\n      );\n    } else {\n      dispatch(\n        updateCell(\n          {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            fontSize: fontSize === undefined ? \"\" : fontSize,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n          },\n          cellsRow\n        )\n      );\n      handleClose();\n    }\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          color: \"white\",\n          actionType: \"\",\n          typeActionType: \"\",\n          typeActionTypeName: \"\",\n          fontSize: \"\",\n          rows: \"\",\n          sumAll: false,\n          type: \"notype\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleRowsChange = (event) => {\n    setRows(event.target.value);\n  };\n\n  const handleActionTypeChange = (event) => {\n    setActionType(event.target.value);\n  };\n\n  const handleTypeActionTypeChange = (event) => {\n    setTypeActionType(event.target.value);\n  };\n\n  const handleSumAll = () => {\n    setSumAll(!sumAll);\n  };\n\n  const handleFontSize = (event) => {\n    setFontSize(event.target.value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Action</h2>\n        <div>\n          <FormControlLabel\n            value={sumAll}\n            control={<Checkbox color=\"default\" onClick={handleSumAll} />}\n            label=\"Sum all?\"\n            checked={sumAll}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!sumAll && (\n          <div>\n            <div className={classes.quillContainer}>\n              <p className={classes.text}>Enter name:</p>\n              <ReactQuill\n                theme=\"snow\"\n                className={classes.editor}\n                value={name}\n                onChange={handleNameChange}\n              />\n            </div>\n            <h4 style={{ marginTop: \"60px\" }}>\n              Hint: Standard mobile font is 12. 3 Rows can pass into cell.\n            </h4>\n            <TextField\n              fullWidth\n              label=\"Font size\"\n              name=\"font_size\"\n              variant=\"outlined\"\n              placeholder=\"Font size\"\n              value={fontSize}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleFontSize}\n            />\n            <h3>Format cell</h3>\n            <TextField\n              fullWidth\n              label=\"Color\"\n              name=\"color\"\n              variant=\"outlined\"\n              placeholder=\"Cell color\"\n              value={color}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleColorChange}\n            />\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"label\">Action Type</InputLabel>\n              <Select\n                id=\"select\"\n                value={actionType || \"\"}\n                onChange={handleActionTypeChange}\n              >\n                {actionTypes.map((item, ix) => (\n                  <MenuItem key={item} value={item}>\n                    {actionTypesNames[ix]}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            {actionType === actionTypes[1] && (\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"label\">Action Type</InputLabel>\n                <Select\n                  id=\"select\"\n                  value={typeActionType || \"\"}\n                  onChange={handleTypeActionTypeChange}\n                >\n                  {typeActionTypes.map((item, ix) => (\n                    <MenuItem key={item} value={item}>\n                      {typeActionTypesNames[ix]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n            {actionType === actionTypes[1] && (\n              <TextField\n                fullWidth\n                label=\"Type name\"\n                name=\"Type name\"\n                variant=\"outlined\"\n                placeholder=\"Enter type name\"\n                value={typeActionTypeName || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleTypeNameChange}\n              />\n            )}\n            {(actionType === actionTypes[0] ||\n              (actionType === actionTypes[1] &&\n                typeActionType === typeActionTypes[1])) && (\n              <TextField\n                fullWidth\n                label=\"Rows\"\n                name=\"rows\"\n                variant=\"outlined\"\n                placeholder=\"Enter row indexes separated with Whitespaces ( Begining with 0 )\"\n                value={rows || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleRowsChange}\n              />\n            )}\n          </div>\n        )}\n        {cell.type !== \"notype\" && (\n          <Button className={classes.noTypeButton} onClick={handleNoTypeSubmit}>\n            MAKE NO TYPE\n          </Button>\n        )}\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Checkbox, FormControlLabel, makeStyles } from \"@material-ui/core\";\n\nimport { closePopup, submitNoTypePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst NoTypeCellPopup = () => {\n  const [isAction, setIsAction] = React.useState(false);\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleIsAction = () => {\n    setIsAction(!isAction);\n  };\n\n  const handleSubmit = () => {\n    dispatch(submitNoTypePopup(isAction));\n  };\n\n  const handleMakeEmptySubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"empty\" }, cellsRow));\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Select cell type</h2>\n        <div>\n          <FormControlLabel\n            value={isAction}\n            control={<Checkbox color=\"default\" onClick={handleIsAction} />}\n            label=\"Is it an action cell?\"\n            checked={isAction}\n            labelPlacement=\"start\"\n          />\n        </div>\n        <Button\n          className={classes.makeEmptyButton}\n          onClick={handleMakeEmptySubmit}\n        >\n          Make Empty\n        </Button>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit Type Cell\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default NoTypeCellPopup;\n","export const SHOW_SNACKBAR = \"snackbar/SHOW_SNACKBAR\";\nexport const CLOSE_SNACKBAR = \"snackbar/CLOSE_SNACKBAR\";\n","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nexport function showSnackbar(message) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_SNACKBAR, message });\n  };\n}\n\nexport function closeSnackbar() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_SNACKBAR });\n  };\n}\n","import React from \"react\";\nimport { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport {\n  getCellFile,\n  getCellNameFile,\n  updateInfoCell,\n  updateCell,\n} from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  borderInputcontainer: {\n    marginTop: \"50px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    marginBottom: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst InfoCellPopup = () => {\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [typeForAction, setTypeForAction] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [nameFile, setNameFile] = React.useState(undefined);\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [baseTen, setBaseTen] = React.useState(\"\");\n  const [baseThree, setBaseThree] = React.useState(\"\");\n  const [baseHundred, setBaseHundred] = React.useState(\"\");\n  const [baseFour, setBaseFour] = React.useState(\"\");\n  const [databaseID, setDatabaseID] = React.useState(\"\");\n  const [fontSize, setFontSize] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellFile);\n  const cellNameFile = useSelector((store) => store.popups.cellNameFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setName(cell.name === undefined ? \"\" : cell.name);\n      setColor(cell.color);\n      setFontSize(cell.fontSize);\n      setDescription(cell.description === undefined ? \"\" : cell.description);\n      setTop(cell.topBorder);\n      setBottom(cell.bottomBorder);\n      setLeft(cell.leftBorder);\n      setRight(cell.rightBorder);\n      setBaseTen(cell.baseTen);\n      setBaseFour(cell.baseFour);\n      setBaseHundred(cell.baseHundred);\n      setBaseThree(cell.baseThree);\n      setDatabaseID(cell.databaseID);\n      if (cell.nameFilePath !== undefined && cell.nameFilePath !== \"\") {\n        dispatch(getCellNameFile(cell.nameFilePath));\n      }\n      if (cell.filePath !== undefined && cell.filePath !== \"\") {\n        dispatch(getCellFile(cell.filePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleSubmit = () => {\n    dispatch(\n      updateInfoCell(\n        {\n          ...cell,\n          name: name,\n          description: description === undefined ? \"\" : description,\n          color,\n          fontSize: fontSize === undefined ? null : fontSize,\n          typeForAction: typeForAction === undefined ? \"\" : typeForAction,\n          topBorder: top,\n          bottomBorder: bottom,\n          leftBorder: left,\n          rightBorder: right,\n          type: \"info\",\n          baseTen: baseTen === undefined ? \"\" : baseTen,\n          baseFour: baseFour === undefined ? \"\" : baseFour,\n          baseHundred: baseHundred === undefined ? \"\" : baseHundred,\n          baseThree: baseThree === undefined ? \"\" : baseThree,\n          databaseID: databaseID === undefined ? \"\" : databaseID,\n        },\n        file,\n        nameFile,\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleNameChange = (value) => {\n    setName(value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleDescriptionChange = (value) => {\n    setDescription(value);\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const nameFileLoaded = (loadedFile) => {\n    setNameFile(loadedFile);\n  };\n\n  const removeNameFile = () => {\n    setNameFile(undefined);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const handleTypeForAction = (event) => {\n    setTypeForAction(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBaseTenChange = (event) => {\n    setBaseTen(event.target.value);\n  };\n\n  const handleBaseFourChange = (event) => {\n    setBaseFour(event.target.value);\n  };\n\n  const handleBaseThreeChange = (event) => {\n    setBaseThree(event.target.value);\n  };\n\n  const handleBaseHundredChange = (event) => {\n    setBaseHundred(event.target.value);\n  };\n\n  const handleDatabaseIDChange = (event) => {\n    setDatabaseID(event.target.value);\n  };\n\n  const handleFontSize = (event) => {\n    setFontSize(event.target.value);\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          description: \"\",\n          color: \"white\",\n          typeForAction: \"\",\n          topBorder: 1,\n          bottomBorder: 1,\n          leftBorder: 1,\n          rightBorder: 1,\n          type: \"notype\",\n          file: \"\",\n          nameFile: \"\",\n          fontSize: \"\",\n          baseTen: \"\",\n          baseHundred: \"\",\n          baseThree: \"\",\n          baseFour: \"\",\n          databaseId: \"\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Information</h2>\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter name:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={name}\n            onChange={handleNameChange}\n          />\n        </div>\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={nameFileLoaded}\n          onError={showError}\n        >\n          <Button style={{ marginTop: \"60px\" }} className={classes.button}>\n            Click to upload NAME image\n          </Button>\n        </FilePicker>\n        {(nameFile || cellNameFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:\n            <strong>\n              {nameFile === undefined ? cellNameFile.name : nameFile.name}\n            </strong>\n            <button\n              className={classes.removeFileButton}\n              onClick={removeNameFile}\n            >\n              Remove\n            </button>\n          </div>\n        )}\n        <h4>Hint: Standard mobile font is 12. 3 Rows can pass into cell.</h4>\n        <TextField\n          fullWidth\n          label=\"Font size\"\n          name=\"font_size\"\n          variant=\"outlined\"\n          placeholder=\"Font size\"\n          value={fontSize}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleFontSize}\n        />\n        <h3>Format cell</h3>\n        <TextField\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Type for action\"\n          name=\"type_for_action\"\n          variant=\"outlined\"\n          placeholder=\"Type for action\"\n          value={typeForAction}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleTypeForAction}\n        />\n        <FilePicker\n          extensions={[\"pdf\", \"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.button}>Click to upload file</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded file:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter description:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <div className={classes.borderInputcontainer}>\n          <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n          <TextField\n            name=\"top\"\n            variant=\"outlined\"\n            label=\"Top\"\n            placeholder=\"Top\"\n            value={top}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleTopChange}\n          />\n          <TextField\n            label=\"Right\"\n            name=\"right\"\n            variant=\"outlined\"\n            placeholder=\"Right\"\n            value={right}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleRightChange}\n          />\n          <TextField\n            label=\"Bottom\"\n            name=\"bottom\"\n            variant=\"outlined\"\n            placeholder=\"Bottom\"\n            value={bottom}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleBottomChange}\n          />\n          <TextField\n            label=\"Left\"\n            name=\"left\"\n            variant=\"outlined\"\n            placeholder=\"Left\"\n            value={left}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleLeftChange}\n          />\n        </div>\n        <h2>Bluetooth</h2>\n        <TextField\n          fullWidth\n          label=\"Base 10\"\n          name=\"base10\"\n          variant=\"outlined\"\n          placeholder=\"Base 10\"\n          value={baseTen}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseTenChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 44\"\n          name=\"base44\"\n          variant=\"outlined\"\n          placeholder=\"Base 44\"\n          value={baseFour}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseFourChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 100\"\n          name=\"base100\"\n          variant=\"outlined\"\n          placeholder=\"Base 100\"\n          value={baseHundred}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseHundredChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 336\"\n          name=\"base336\"\n          variant=\"outlined\"\n          placeholder=\"Base 336\"\n          value={baseThree}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseThreeChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Database ID\"\n          name=\"databaseID\"\n          variant=\"outlined\"\n          placeholder=\"Database ID\"\n          value={databaseID}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleDatabaseIDChange}\n        />\n        <div>\n          {cell.type !== \"notype\" && (\n            <Button\n              className={classes.noTypeButton}\n              onClick={handleNoTypeSubmit}\n            >\n              MAKE NO TYPE\n            </Button>\n          )}\n          <Button className={classes.submitButton} onClick={handleSubmit}>\n            Submit\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default InfoCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { closePopup, showImagePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  notypeButton: {\n    border: \"1px solid black\",\n    background: \"blue\",\n    marginRight: \"20px\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst EmptyCellPopup = () => {\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"notype\" }, cellsRow));\n  };\n\n  const handleImageSubmit = () => {\n    dispatch(showImagePopup());\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <Button className={classes.notypeButton} onClick={handleSubmit}>\n          MAKE CELL NOTYPE\n        </Button>\n        <Button className={classes.button} onClick={handleImageSubmit}>\n          ADD IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default EmptyCellPopup;\n","import { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { updateImageCell, getCellImageFile } from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  fileButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst ImageCellPopup = () => {\n  const [width, setWidth] = React.useState(\"\");\n  const [height, setHeight] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [leftMargin, setLeftMargin] = React.useState(\"\");\n  const [topMargin, setTopMargin] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellImageFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setHeight(cell.bigImageHeight === undefined ? \"\" : cell.bigImageHeight);\n      setWidth(cell.bigImageWidth === undefined ? \"\" : cell.bigImageWidth);\n      setLeftMargin(\n        cell.bigImageLeftMargin === undefined ? \"\" : cell.bigImageLeftMargin\n      );\n      setTopMargin(\n        cell.bigImageTopMargin === undefined ? \"\" : cell.bigImageTopMargin\n      );\n      if (cell && cell.bigImagePath !== undefined && cell.bigImagePath !== \"\") {\n        dispatch(getCellImageFile(cell.bigImagePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleHeightChange = (event) => {\n    setHeight(event.target.value);\n  };\n\n  const handleTopMarginChange = (event) => {\n    setTopMargin(event.target.value);\n  };\n\n  const handleLeftMarginChange = (event) => {\n    setLeftMargin(event.target.value);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const handleSubmit = () => {\n    dispatch(\n      updateImageCell(\n        {\n          ...cell,\n          type: \"image\",\n          bigImageWidth: width,\n          bigImageHeight: height,\n          bigImageTopMargin: topMargin === \"\" ? 0 : topMargin,\n          bigImageLeftMargin: leftMargin === \"\" ? 0 : leftMargin,\n        },\n        file,\n        cellsRow\n      )\n    );\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.fileButton}>Click to upload image</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <h3>Single cell width = 100 and height = 50</h3>\n        <TextField\n          fullWidth\n          label=\"Width\"\n          name=\"width\"\n          variant=\"outlined\"\n          placeholder=\"Enter width\"\n          value={width}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleWidthChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Height\"\n          name=\"height\"\n          variant=\"outlined\"\n          placeholder=\"Enter height\"\n          value={height}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleHeightChange}\n        />\n        <div style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>\n          <TextField\n            label=\"Top margin\"\n            name=\"topMargin\"\n            variant=\"outlined\"\n            placeholder=\"Top margin\"\n            value={topMargin}\n            style={{\n              marginRight: \"10px\",\n              maxWidth: \"140px\",\n            }}\n            onChange={handleTopMarginChange}\n          />\n          <TextField\n            label=\"Left margin\"\n            name=\"leftMargin\"\n            variant=\"outlined\"\n            placeholder=\"Left margin\"\n            value={leftMargin}\n            style={{\n              maxWidth: \"140px\",\n            }}\n            onChange={handleLeftMarginChange}\n          />\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          SUBMIT\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default ImageCellPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { submitSelectingCells } from \"../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  borderInputcontainer: {\n    marginTop: \"10px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst FormatCellsPopup = () => {\n  const [color, setColor] = React.useState(\"\");\n  const [width, setWidth] = React.useState(\"\");\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [isBoxBorder, setIsBoxBorder] = React.useState(false);\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(\n      submitSelectingCells(\n        { color, top, bottom, left, right, isBoxBorder, width },\n        selectedCells,\n        cellsRows\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBoxBorder = () => {\n    setIsBoxBorder(!isBoxBorder);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Format Cells</h2>\n        <TextField\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <div>\n          <FormControlLabel\n            value={isBoxBorder}\n            control={<Checkbox color=\"default\" onClick={handleBoxBorder} />}\n            label=\"Is box border?\"\n            checked={isBoxBorder}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!isBoxBorder && (\n          <div className={classes.borderInputcontainer}>\n            <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n            <TextField\n              name=\"top\"\n              variant=\"outlined\"\n              label=\"Top\"\n              placeholder=\"Top\"\n              value={top}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleTopChange}\n            />\n            <TextField\n              label=\"Right\"\n              name=\"right\"\n              variant=\"outlined\"\n              placeholder=\"Right\"\n              value={right}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleRightChange}\n            />\n            <TextField\n              label=\"Bottom\"\n              name=\"bottom\"\n              variant=\"outlined\"\n              placeholder=\"Bottom\"\n              value={bottom}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleBottomChange}\n            />\n            <TextField\n              label=\"Left\"\n              name=\"left\"\n              variant=\"outlined\"\n              placeholder=\"Left\"\n              value={left}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleLeftChange}\n            />\n          </div>\n        )}\n        {isBoxBorder && (\n          <div>\n            <TextField\n              label=\"Border width\"\n              name=\"width\"\n              variant=\"outlined\"\n              placeholder=\"Border width\"\n              value={width}\n              style={{\n                margin: \"10px\",\n              }}\n              onChange={handleWidthChange}\n            />\n          </div>\n        )}\n        <Button className={classes.submitButton} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default FormatCellsPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport {\n  makeStyles,\n  FormControl,\n  Select,\n  InputLabel,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { addTableToUser } from \"../../state/actions/user\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst AddToUserPopup = () => {\n  const [selectedUser, setSelectedUser] = React.useState(undefined);\n  const users = useSelector((store) => store.user.users);\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(addTableToUser(selectedUser, selectedTable));\n    handleClose();\n  };\n\n  const handleChange = (event) => {\n    setSelectedUser(event.target.value);\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Select user</h2>\n        <div>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"label\">User</InputLabel>\n            <Select\n              id=\"demo-simple-select-helper\"\n              value={selectedUser || \"\"}\n              label=\"User\"\n              onChange={handleChange}\n            >\n              {users.map((user, ix) => (\n                <MenuItem key={ix} value={user}>\n                  <em>{user.email}</em>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default AddToUserPopup;\n","export const LOAD_DEVICES = \"devices/LOAD_DEVICES\";\nexport const LOAD_DEVICES_SUCCESS = \"devices/LOAD_DEVICES_SUCCESS\";\nexport const LOAD_DEVICES_FAILED = \"devices/LOAD_DEVICES_FAILED\";\nexport const LOAD_MAPPINGS = \"devices/LOAD_MAPPINGS\";\nexport const LOAD_MAPPINGS_SUCCESS = \"devices/LOAD_MAPPINGS_SUCCESS\";\nexport const LOAD_MAPPINGS_FAILED = \"devices/LOAD_MAPPINGS_FAILED\";\nexport const DELETE_MAPPING = \"devices/DELETE_MAPPING\";\nexport const DELETE_MAPPING_SUCCESS = \"devices/DELETE_MAPPING_SUCCESS\";\nexport const DELETE_MAPPING_FAILED = \"devices/DELETE_MAPPING_FAILED\";\nexport const ADD_RASP_TO_USER = \"devices/ADD_RASP_TO_USER\";\nexport const ADD_RASP_TO_USER_SUCCESS = \"devices/ADD_RASP_TO_USER_SUCCESS\";\nexport const ADD_RASP_TO_USER_FAILED = \"devices/ADD_RASP_TO_USER_FAILED\";\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {\n  makeStyles,\n  FormControl,\n  Select,\n  InputLabel,\n  TextField,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { closePopup } from \"../../state/actions/popups\";\nimport { addRaspberryToUser, deleteMapping } from \"../../state/actions/devices\";\nimport { loadMappings } from \"../../state/actions/devices\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  boxik: {\n    display: \"flex\",\n    color: \"black\",\n    background: \"white\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n  },\n  columns: {\n    display: \"flex\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    fontWeight: \"bold\",\n    marginLeft: \"auto\",\n    fontSize: \"30px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst MapRaspberryPopup = () => {\n  const [didGet, setDidGet] = React.useState(false);\n  const [shouldUpdate, setShouldUpdate] = React.useState(false);\n  const [selectedUser, setSelectedUser] = React.useState(undefined);\n  const [oldMappings, setOldMappings] = React.useState([]);\n  const users = useSelector((store) => store.user.users);\n  const mappings = useSelector((store) => store.devices.mappings);\n\n  const [raspberryID, setRaspberryID] = React.useState(\"\");\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (!didGet) {\n      setDidGet(true);\n      dispatch(loadMappings());\n    }\n    if (mappings.length !== oldMappings.length) {\n      setShouldUpdate(!shouldUpdate);\n      setOldMappings(mappings);\n    }\n  }, [dispatch, didGet, mappings.length, oldMappings.length, shouldUpdate]);\n\n  const handleSubmit = () => {\n    if (raspberryID !== \"\") {\n      dispatch(addRaspberryToUser(selectedUser, raspberryID));\n    }\n    handleClose();\n  };\n\n  const handleRaspberryIDChange = (event) => {\n    setRaspberryID(event.target.value);\n  };\n\n  const handleChange = (event) => {\n    setSelectedUser(event.target.value);\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleDelete = (item) => {\n    dispatch(deleteMapping(item));\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Map User to Raspberry</h2>\n        {shouldUpdate && <span></span>}\n        {mappings &&\n          mappings.map((item) => (\n            <MappingsListItem\n              item={item}\n              user={users.find((e) => e.id === item.userId)}\n              key={mappings.indexOf(item)}\n              onDelete={handleDelete}\n            />\n          ))}\n        <div>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"label\">User</InputLabel>\n            <Select\n              id=\"demo-simple-select-helper\"\n              value={selectedUser || \"\"}\n              label=\"User\"\n              onChange={handleChange}\n            >\n              {users.map((user, ix) => (\n                <MenuItem key={ix} value={user}>\n                  <em>{user.email}</em>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <TextField\n          fullWidth\n          label=\"Raspberry ID\"\n          name=\"raspberryID\"\n          variant=\"outlined\"\n          placeholder=\"Raspberry ID\"\n          value={raspberryID}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleRaspberryIDChange}\n        />\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default MapRaspberryPopup;\n\nconst MappingsListItem = ({ item, user, onDelete }) => {\n  const classes = useStyles();\n\n  const deleteMapping = () => {\n    onDelete(item);\n  };\n\n  return (\n    <div className={classes.boxik}>\n      <div>\n        {user && (\n          <span className={classes.columns}>User Email: {user.email}</span>\n        )}\n        <span className={classes.columns}>User ID: {item.userId}</span>\n        <span className={classes.columns}>\n          Raspberry ID: {item.raspberryId}\n        </span>\n        <span className={classes.columns}>Session ID: {item.session_id}</span>\n      </div>\n      <Button className={classes.deleteButton} onClick={deleteMapping}>\n        X\n      </Button>\n    </div>\n  );\n};\nMappingsListItem.propTypes = {\n  item: PropTypes.object,\n  user: PropTypes.object,\n  onDelete: PropTypes.func,\n};\n","import {\n  DELETE_MAPPING,\n  DELETE_MAPPING_FAILED,\n  DELETE_MAPPING_SUCCESS,\n  LOAD_DEVICES,\n  LOAD_DEVICES_FAILED,\n  LOAD_DEVICES_SUCCESS,\n  LOAD_MAPPINGS,\n  LOAD_MAPPINGS_FAILED,\n  LOAD_MAPPINGS_SUCCESS,\n  ADD_RASP_TO_USER,\n  ADD_RASP_TO_USER_SUCCESS,\n  ADD_RASP_TO_USER_FAILED,\n} from \"../actionTypes/devices\";\n\nexport function deleteMapping(mapping) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_MAPPING });\n    const url =\n      \"https://fm.ki.lt/api/v1/dataexchange/mappings?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010\";\n    try {\n      const req = new Request(url, {\n        method: \"DELETE\",\n        body: JSON.stringify({ sessionId: mapping.session_id }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const response = await fetch(req).then();\n      if (response.ok) {\n        dispatch({ type: DELETE_MAPPING_SUCCESS, mapping });\n      } else {\n        dispatch({ type: DELETE_MAPPING_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: DELETE_MAPPING_FAILED });\n    }\n  };\n}\n\nexport function loadMappings() {\n  return async (dispatch) => {\n    dispatch({ type: LOAD_MAPPINGS });\n    const url =\n      \"https://fm.ki.lt/api/v1/dataexchange/mappings?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010\";\n    try {\n      const req = new Request(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const response = await fetch(req).then();\n      if (response.ok) {\n        const data = await response.json();\n        dispatch({ type: LOAD_MAPPINGS_SUCCESS, mappings: data.mappings });\n      } else {\n        dispatch({ type: LOAD_MAPPINGS_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: LOAD_MAPPINGS_FAILED });\n    }\n  };\n}\n\nexport function loadDevices() {\n  return async (dispatch) => {\n    dispatch({ type: LOAD_DEVICES });\n    const devicesUrl =\n      \"https://fm.ki.lt/api/v1/dataexchange/device?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010\";\n    const mappingsUrl =\n      \"https://fm.ki.lt/api/v1/dataexchange/mappings?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010\";\n    try {\n      const devicesReq = new Request(devicesUrl, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const devicesResponse = await fetch(devicesReq).then();\n      if (devicesResponse.ok) {\n        const devices = await devicesResponse.json();\n        const mappingsReq = new Request(mappingsUrl, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        //dispatch({ type: LOAD_DEVICES_SUCCESS, devices: data.devices });\n      } else {\n        dispatch({ type: LOAD_DEVICES_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: LOAD_DEVICES_FAILED });\n    }\n  };\n}\n\nexport function addRaspberryToUser(user, rasp) {\n  return async (dispatch) => {\n    const url =\n      \"https://fm.ki.lt/api/v1/dataexchange/mappings?api_token=6c3ec4bbb801163e98fec95acf555193fea410ea21270ab5fd3c58f8c264fba1d1df794fb2ee97a24ab5d7de424e3010\";\n    dispatch({ type: ADD_RASP_TO_USER });\n    try {\n      const data = {\n        userId: user.id,\n        raspberryId: rasp,\n      };\n      const req = new Request(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const response = await fetch(req);\n      if (response.ok) {\n        dispatch({ type: ADD_RASP_TO_USER_SUCCESS });\n      } else {\n        dispatch({ type: ADD_RASP_TO_USER_FAILED });\n      }\n    } catch (e) {\n      dispatch({ type: ADD_RASP_TO_USER_FAILED });\n    }\n  };\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { loadDevices } from \"../../state/actions/devices\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  boxik: {\n    color: \"black\",\n    background: \"white\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst DevicesPopup = () => {\n  const devices = useSelector((store) => store.devices.devices);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDevices());\n  }, [dispatch]);\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Connected devices</h2>\n        {devices &&\n          devices.map((item) => (\n            <DevicePopupItem item={item} key={devices.indexOf(item)} />\n          ))}\n      </div>\n    </div>\n  );\n};\nexport default DevicesPopup;\nconst DevicePopupItem = ({ item }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.boxik}>\n      <div>ID: {item.device_id}</div>\n      <div>Host name: {item.device_host_name}</div>\n      <div>IP address: {item.device_ip_address}</div>\n      <div>Last connection time: {item.last_connection_time}</div>\n      <div>Update at: {item.updated_at}</div>\n    </div>\n  );\n};\nDevicePopupItem.propTypes = {\n  item: PropTypes.object,\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TablesList from \"../tables_list/TablesList\";\nimport Table from \"../table/Table\";\nimport TableInfoPopup from \"../popup/TableInfoPopup\";\nimport ActionCellPopup from \"../popup/ActionCellPopup\";\nimport NoTypeCellPopup from \"../popup/NoTypeCellPopup\";\nimport InfoCellPopup from \"../popup/InfoCellPopup\";\nimport EmptyCellPopup from \"../popup/EmptyCellPopup\";\nimport ImageCellPopup from \"../popup/ImageCellPopup\";\nimport FormatCellsPopup from \"../popup/FormatCellsPopup\";\nimport AddToUserPopup from \"../popup/AddToUserPopup\";\nimport MapRaspberryPopup from \"../popup/MapRaspberryPopup\";\nimport DevicesPopup from \"../popup/DevicesPopup\";\n\nconst Home = () => {\n  const [isNamePopupOpen, setIsNamePopupOpen] = useState(false);\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const isActionCellPopupOpen = useSelector(\n    (store) => store.popups.actionPopupOpen\n  );\n  const isEmptyCellPopupOpen = useSelector(\n    (store) => store.popups.emptyCellPopupOpen\n  );\n  const isInfoCellPopupOpen = useSelector(\n    (store) => store.popups.infoPopupOpen\n  );\n  const noTypeCellPopupOpen = useSelector(\n    (store) => store.popups.noTypePopupOpen\n  );\n  const imageCellPopupOpen = useSelector(\n    (store) => store.popups.imagePopupOpen\n  );\n  const formatCellsPopupOpen = useSelector(\n    (store) => store.popups.formatCellsPopupOpen\n  );\n  const addToUserPopupOpen = useSelector(\n    (store) => store.popups.addToUserPopupOpen\n  );\n  const raspberryPopupOpen = useSelector(\n    (store) => store.popups.raspberryPopupOpen\n  );\n  const devicesPopupOpen = useSelector(\n    (store) => store.popups.devicesPopupOpen\n  );\n\n  const user = useSelector((store) => store.user.user);\n\n  const history = useHistory();\n\n  const popupOpened = () => {\n    window.scrollTo(0, 0);\n    disableBodyScroll(document);\n  };\n\n  devicesPopupOpen ||\n  isNamePopupOpen ||\n  isActionCellPopupOpen ||\n  isInfoCellPopupOpen ||\n  imageCellPopupOpen ||\n  isEmptyCellPopupOpen ||\n  noTypeCellPopupOpen ||\n  formatCellsPopupOpen ||\n  addToUserPopupOpen ||\n  raspberryPopupOpen\n    ? popupOpened()\n    : enableBodyScroll(document);\n\n  useEffect(() => {\n    if (user === undefined || user.role !== \"admin\") {\n      history.push(\"/\");\n    }\n    window.scrollTo(0, 0);\n  }, [user, history]);\n\n  const toggleNamePopup = () => {\n    setIsNamePopupOpen(!isNamePopupOpen);\n  };\n\n  return (\n    <Container\n      style={{\n        padding: \"10px\",\n        width: \"100%\",\n        display: \"inline-flex\",\n        flexDirection: \"row\",\n      }}\n    >\n      <TablesList showTableNamePopup={toggleNamePopup} />\n      {selectedTable === undefined ? (\n        <h2 style={{ flex: 1, textAlign: \"center\" }}>Please select a table</h2>\n      ) : (\n        <Table table={selectedTable} />\n      )}\n      {isNamePopupOpen && <TableInfoPopup handleClose={toggleNamePopup} />}\n      {isEmptyCellPopupOpen && <EmptyCellPopup />}\n      {isActionCellPopupOpen && <ActionCellPopup />}\n      {isInfoCellPopupOpen && <InfoCellPopup />}\n      {noTypeCellPopupOpen && <NoTypeCellPopup />}\n      {imageCellPopupOpen && <ImageCellPopup />}\n      {formatCellsPopupOpen && <FormatCellsPopup />}\n      {addToUserPopupOpen && <AddToUserPopup />}\n      {raspberryPopupOpen && <MapRaspberryPopup />}\n      {devicesPopupOpen && <DevicesPopup />}\n    </Container>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { closeSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nconst AppSnackbar = () => {\n  const classes = useStyles();\n  const open = useSelector((store) => store.snackbar.open);\n  const message = useSelector((store) => store.snackbar.message);\n  const dispatch = useDispatch();\n\n  if (!open) {\n    return null;\n  }\n\n  const close = () => {\n    dispatch(closeSnackbar());\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      open={open}\n      autoHideDuration={5000}\n      onClose={close}\n      message={<span>{message}</span>}\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={close}\n        >\n          <CloseIcon />\n        </IconButton>,\n      ]}\n    />\n  );\n};\n\nexport default AppSnackbar;\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button, Card, TextField, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signIn } from \"../../state/actions/user\";\n\nconst useStyles = makeStyles({\n  title: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: \"bold\",\n  },\n  container: {\n    background: \"white\",\n    borderRadius: \"10px\",\n    maxWidth: \"500px\",\n    alignContent: \"center\",\n    padding: \"10px\",\n    display: \"flex\",\n    marginTop: \"30px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    margin: \"10px\",\n    minWidth: \"200px\",\n    background: \"green\",\n    fontWeight: \"bold\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SignIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const user = useSelector((store) => store.user.user);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user !== undefined) {\n      history.push(\"/home\");\n    }\n  }, [user, history]);\n\n  const handleSubmit = () => {\n    dispatch(signIn({ email, password }));\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <Card className={classes.container}>\n      <Typography className={classes.title}>Sign In</Typography>\n      <TextField\n        required\n        fullWidth\n        name=\"email\"\n        variant=\"outlined\"\n        placeholder=\"Email\"\n        value={email}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handleEmailChange}\n      />\n      <TextField\n        required\n        fullWidth\n        name=\"password\"\n        variant=\"outlined\"\n        placeholder=\"Password\"\n        value={password}\n        type={\"password\"}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handlePasswordChange}\n      />\n      <Button className={classes.button} onClick={handleSubmit}>\n        Submit\n      </Button>\n    </Card>\n  );\n};\nexport default SignIn;\n","import \"./App.css\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Home from \"./components/home/Home\";\nimport AppSnackbar from \"./components/popup/AppSnackbar\";\nimport SignIn from \"./components/sign-in/SignIn\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <CssBaseline />\n      <div\n        style={{\n          minHeight: \"100vh\",\n          width: \"100%\",\n          margin: \"0px\",\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/home\" component={Home} />\n          <Route path=\"/\" component={SignIn} />\n        </Switch>\n      </div>\n      <AppSnackbar />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nconst initialState = {\n  open: false,\n  message: \"\",\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SHOW_SNACKBAR: {\n      return { ...state, open: true, message: action.message };\n    }\n    case CLOSE_SNACKBAR: {\n      return { ...state, open: false, message: \"\" };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\n\nconst initialState = {\n  tables: [],\n  selectedTable: undefined,\n  tableJustCreated: false,\n  bigImage: undefined,\n  bigImageCell: undefined,\n  error: undefined,\n};\n\nexport default function tablesReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case GET_TABLES: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case REMOVE_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: undefined,\n        bigImageCell: undefined,\n        error: undefined,\n      };\n    }\n    case SET_TABLE_JUST_CREATED_FALSE: {\n      return {\n        ...state,\n        tableJustCreated: false,\n      };\n    }\n    case GET_TABLES_SUCCESS: {\n      return { ...state, tables: action.tables };\n    }\n    case GET_TABLES_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case ADD_TABLE: {\n      const newTables = state.tables;\n      newTables.push(action.table);\n      return {\n        ...state,\n        tableJustCreated: true,\n        selectedTable: action.table,\n        tables: newTables,\n      };\n    }\n    case SET_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: action.image,\n        bigImageCell: action.cell,\n      };\n    }\n    case SET_SELECTED_TABLE: {\n      return {\n        ...state,\n        selectedTable: action.table,\n        bigImage: undefined,\n        bigImageCell: undefined,\n      };\n    }\n    case DELETE_TABLE: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case DELETE_TABLE_SUCCESS: {\n      const newTables = state.tables;\n      state.tables.forEach((table) => {\n        if (table.id === action.id) {\n          newTables.remove(table);\n        }\n      });\n      return {\n        ...state,\n        selectedTable: undefined,\n        tables: newTables,\n      };\n    }\n    case DELETE_TABLE_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n} from \"../actionTypes/cell\";\nimport {\n  SHOW_RASP_POPUP,\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  SUBMIT_NO_TYPE_POPUP,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CUSTOM_CELLS_SUBMITED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n  SHOW_ADD_TO_USER_POPUP,\n  SHOW_DEVICES_POPUP,\n} from \"../actionTypes/popups\";\n\nconst initialState = {\n  devicesPopupOpen: false,\n  raspberryPopupOpen: false,\n  actionPopupOpen: false,\n  infoPopupOpen: false,\n  noTypePopupOpen: false,\n  emptyCellPopupOpen: false,\n  imagePopupOpen: false,\n  formatCellsPopupOpen: false,\n  addToUserPopupOpen: false,\n  cell: undefined,\n  cellsRow: undefined,\n  cellFile: undefined,\n  cellNameFile: undefined,\n  cellImageFile: undefined,\n  cellToUpdate: undefined,\n  cellToUpdateCustomCells: undefined,\n  letsUpdate: false,\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SHOW_DEVICES_POPUP: {\n      return {\n        ...state,\n        devicesPopupOpen: true,\n      };\n    }\n    case SHOW_RASP_POPUP: {\n      return {\n        ...state,\n        raspberryPopupOpen: true,\n      };\n    }\n    case CANCEL_CUSTOM_CELLS: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case CUSTOM_CELLS_SUBMITED: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SHOW_ACTION_POPUP: {\n      return {\n        ...state,\n        actionPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case BEGIN_CUSTOM_SELECT: {\n      return {\n        ...state,\n        actionPopupOpen: false,\n        cellToUpdate: action.cell,\n        cellToUpdateCustomCells: [],\n      };\n    }\n    case CELL_TO_UPDATE_CUSTOM_CELL_SELECTED: {\n      const cells = state.cellToUpdateCustomCells;\n      if (cells.includes(action.cell)) {\n        const index = cells.indexOf(action.cell);\n        cells.splice(index, 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        cellToUpdateCustomCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SHOW_ADD_TO_USER_POPUP: {\n      return {\n        ...state,\n        addToUserPopupOpen: true,\n      };\n    }\n    case SUBMIT_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: false,\n        actionPopupOpen: action.isAction,\n        infoPopupOpen: !action.isAction,\n      };\n    }\n    case SHOW_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_EMPTY_CELL_POPUP: {\n      return {\n        ...state,\n        emptyCellPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_IMAGE_CELL_POPUP: {\n      if (action.cell !== undefined) {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n          cell: action.cell,\n          cellsRow: action.cellsRow,\n        };\n      } else {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n        };\n      }\n    }\n    case SHOW_INFO_POPUP: {\n      return {\n        ...state,\n        infoPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_FORMAT_CELLS_POPUP: {\n      return {\n        ...state,\n        formatCellsPopupOpen: true,\n      };\n    }\n    case CLOSE_POPUP: {\n      return {\n        ...state,\n        devicesPopupOpen: false,\n        raspberryPopupOpen: false,\n        infoPopupOpen: false,\n        actionPopupOpen: false,\n        noTypePopupOpen: false,\n        emptyCellPopupOpen: false,\n        imagePopupOpen: false,\n        formatCellsPopupOpen: false,\n        addToUserPopupOpen: false,\n        cell: undefined,\n        cellsRow: undefined,\n        cellFile: undefined,\n        cellNameFile: undefined,\n        cellImageFile: undefined,\n      };\n    }\n    case GET_CELL_NAME_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellNameFile: action.file,\n      };\n    }\n    case GET_CELL_IMAGE_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellImageFile: action.file,\n      };\n    }\n    case GET_CELL_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellFile: action.file,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  CLEAR_CELLS_ROWS,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n} from \"../actionTypes/cellsRows\";\nimport { UPDATE_CELL_SUCCESS } from \"../actionTypes/cell\";\nconst initialState = {\n  cellsRows: [],\n  selectedCells: undefined,\n  error: undefined,\n  letsUpdate: false,\n  isSelecting: false,\n};\n\nexport default function cellsRowsReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case UPDATE_CELL_SUCCESS: {\n      let rowIndex;\n      let cellIndex;\n      state.cellsRows.forEach((cellsRow) => {\n        cellsRow.cells.forEach((cell) => {\n          if (\n            cell.columnIndex === action.cell.columnIndex &&\n            cell.rowIndex === action.cell.rowIndex\n          ) {\n            rowIndex = state.cellsRows.indexOf(cellsRow);\n            cellIndex = cellsRow.cells.indexOf(cell);\n          }\n        });\n      });\n      state.cellsRows[rowIndex].cells[cellIndex] = action.cell;\n      return { ...state, error: undefined };\n    }\n    case BEGIN_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: true,\n        selectedCells: [],\n      };\n    }\n    case STOP_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: false,\n        selectedCells: undefined,\n      };\n    }\n    case ADD_SELECTING_CELL: {\n      var cells = state.selectedCells;\n      if (cells.includes(action.cell)) {\n        cells.splice(cells.indexOf(action.cell), 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        selectedCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case GET_CELLS_ROWS: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case GET_CELLS_ROWS_SUCCESS: {\n      action.data.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return { ...state, cellsRows: action.data };\n    }\n    case UPDATE_CELLS_ROWS: {\n      action.cellsRows.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return {\n        ...state,\n        cellsRows: action.cellsRows,\n        selectedCells: undefined,\n        isSelecting: false,\n      };\n    }\n    case GET_CELLS_ROWS_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case CLEAR_CELLS_ROWS: {\n      return {\n        ...state,\n        cellsRows: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  SIGN_IN,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAILED,\n  GET_USERS_SUCCESS,\n  ADD_TABLE_TO_USER,\n  ADD_TABLE_TO_USER_SUCCESS,\n  ADD_TABLE_TO_USER_FAILED,\n} from \"../actionTypes/user\";\n\nconst initialState = {\n  user: undefined,\n  users: [],\n  error: false,\n};\n\nexport default function userReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ADD_TABLE_TO_USER_FAILED:\n    case ADD_TABLE_TO_USER_SUCCESS:\n    case ADD_TABLE_TO_USER: {\n      return { ...state };\n    }\n    case SIGN_IN: {\n      return { ...state, error: false };\n    }\n    case SIGN_IN_SUCCESS: {\n      return { ...state, user: action.user };\n    }\n    case SIGN_IN_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case GET_USERS_SUCCESS: {\n      return { ...state, users: action.data };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  LOAD_DEVICES,\n  LOAD_DEVICES_SUCCESS,\n  LOAD_MAPPINGS,\n  LOAD_MAPPINGS_SUCCESS,\n  ADD_RASP_TO_USER,\n  ADD_RASP_TO_USER_SUCCESS,\n  DELETE_MAPPING,\n  DELETE_MAPPING_SUCCESS,\n} from \"../actionTypes/devices\";\n\nconst initialState = {\n  devices: [],\n  mappings: [],\n};\n\nexport default function devicesReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ADD_RASP_TO_USER: {\n      return { ...state };\n    }\n    case ADD_RASP_TO_USER_SUCCESS: {\n      return { ...state };\n    }\n    case DELETE_MAPPING: {\n      return { ...state };\n    }\n    case DELETE_MAPPING_SUCCESS: {\n      return {\n        ...state,\n        mappings: state.mappings.filter(\n          (item) => item.id !== action.mapping.id\n        ),\n      };\n    }\n    case LOAD_MAPPINGS: {\n      return { ...state };\n    }\n    case LOAD_MAPPINGS_SUCCESS: {\n      return { ...state, mappings: action.mappings };\n    }\n    case LOAD_DEVICES: {\n      return { ...state };\n    }\n    case LOAD_DEVICES_SUCCESS: {\n      return { ...state, devices: action.devices };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport snackbar from \"./snackbar\";\nimport tables from \"./tables\";\nimport popups from \"./popups\";\nimport cellsRows from \"./cellsRows\";\nimport user from \"./user\";\nimport devices from \"./devices\";\n\nexport default combineReducers({\n  snackbar,\n  tables,\n  popups,\n  cellsRows,\n  user,\n  devices,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport reducers from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/* eslint-enable */\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\"],\n};\nconst pReducer = persistReducer(persistConfig, reducers);\n\nconst store = createStore(\n  pReducer,\n  compose(applyMiddleware(thunk), composeEnhancers())\n);\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./state/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}