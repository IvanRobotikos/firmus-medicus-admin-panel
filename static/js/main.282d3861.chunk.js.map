{"version":3,"sources":["state/actionTypes/tables.js","firebase.js","common/CellFunctions.js","state/actionTypes/cellsRows.js","state/actions/cellsRows.js","state/actionTypes/popups.js","state/actions/popups.js","components/tables_list/TablesListItem.js","state/actions/tables.js","components/tables_list/TablesList.js","components/table/cells/EmptyCell.js","components/table/cells/Cell.js","components/table/CellsRow.js","state/actionTypes/cell.js","state/actions/cell.js","components/table/utils/SelectedCellsInfo.js","components/table/utils/BigImage.js","components/table/utils/RemoveBigImage.js","components/table/utils/SelectedCellsFormat.js","components/table/Table.js","components/popup/TableInfoPopup.js","components/popup/ActionCellPopup.js","components/popup/NoTypeCellPopup.js","state/actionTypes/snackbar.js","state/actions/snackbar.js","components/popup/InfoCellPopup.js","components/popup/EmptyCellPopup.js","components/popup/ImageCellPopup.js","components/popup/FormatCellsPopup.js","components/home/Home.js","components/popup/AppSnackbar.js","state/actionTypes/user.js","components/sign-in/SignIn.js","state/actions/user.js","App.js","serviceWorker.js","state/reducers/snackbar.js","state/reducers/tables.js","state/reducers/popups.js","state/reducers/cellsRows.js","state/reducers/user.js","state/reducers/index.js","state/store.js","index.js"],"names":["GET_TABLES","GET_TABLES_SUCCESS","GET_TABLES_FAILED","ADD_TABLE","DELETE_TABLE","DELETE_TABLE_SUCCESS","DELETE_TABLE_FAILED","SET_SELECTED_TABLE","SET_BIG_IMAGE","SET_TABLE_JUST_CREATED_FALSE","REMOVE_BIG_IMAGE","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","auth","getEmptyTableCells","tableId","data","push","rowIndex","cells","getNoTypeCell","getEmptyCell","getFirstEmptyRow","i","getEmptyRow","columnIndex","type","color","topBorder","leftBorder","rightBorder","bottomBorder","GET_CELLS_ROWS","GET_CELLS_ROWS_SUCCESS","GET_CELLS_ROWS_FAILED","CLEAR_CELLS_ROWS","ADD_SELECTING_CELL","BEGIN_FORMAT_SELECTING","STOP_FORMAT_SELECTING","UPDATE_CELLS_ROWS","getCellsRows","dispatch","a","collection","doc","get","then","snapshot","forEach","cellsRow","id","e","error","boxUpdate","cellInfo","cellsRows","sort","b","smallestRow","bigestRow","length","smallestColumn","bigestColumn","rowsToUpdate","cellsToUpdate","rowsForRequest","cell","newCell","width","index","getFormattedRow","includes","row","sendUpdateRowRequest","simpleUpdate","bottom","top","left","right","update","mirrorCell","cellIndex","indexOf","cancelIsSelecting","SHOW_ACTION_POPUP","CLOSE_POPUP","SHOW_INFO_POPUP","SHOW_NO_TYPE_POPUP","SHOW_IMAGE_CELL_POPUP","SHOW_EMPTY_CELL_POPUP","SUBMIT_NO_TYPE_POPUP","BEGIN_CUSTOM_SELECT","CELL_TO_UPDATE_CUSTOM_CELL_SELECTED","CUSTOM_CELLS_SUBMITED","CANCEL_CUSTOM_CELLS","SHOW_FORMAT_CELLS_POPUP","cancelCustomCells","showImagePopup","closePopup","useStyles","makeStyles","buttonNormal","fontSize","textTransform","borderRadius","borderColor","borderWidth","margin","whiteSpace","borderStyle","padding","background","buttonSelected","cursos","TablesListItem","item","selectedTable","useSelector","store","tables","useState","isSelected","setIsSelected","classes","useDispatch","useEffect","Button","onClick","table","className","name","card","display","flexDirection","minHeight","maxWidth","flex","iconmenubutton","height","text","textAlign","TablesList","showTableNamePopup","ref","Card","map","verticalAlign","EmptyCell","undefined","bigImagePath","getDownloadURL","image","catch","console","log","setBigImage","showEmptyCellPopup","props","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","borderTopColor","isCustomCell","borderRightColor","borderLeftColor","borderBottomColor","borderLeftStyle","borderRightStyle","borderTopStyle","borderBottomStyle","alignContent","justifyContent","lineHeight","fontWeight","Cell","cellToUpdate","popups","isSelecting","addSelectingCell","cellToUpdateCustomCellSelected","showNoTypePopup","showInfoPopup","showActionPopup","sumAll","style","marginLeft","marginRight","src","alt","split","ix","CellsRow","cellToUpdateCustomCells","selectedCells","cellsRowLetsUpdate","letsUpdate","UPDATE_CELL","UPDATE_CELL_SUCCESS","UPDATE_CELL_FAILED","GET_CELL_FILE_SUCCESS","GET_CELL_NAME_FILE_SUCCESS","GET_CELL_IMAGE_FILE_SUCCESS","updateCell","cellsRowId","newRow","element","container","marginBottom","marginTop","cont","border","submitButton","cancelButton","SelectedCellsInfo","customCells","convertCustomCells","join","BigImage","bigImage","bigImageCell","position","parseInt","bigImageTopMargin","bigImageHeight","bigImageLeftMargin","bigImageWidth","RemoveBigImage","description","cellContainer","deleteButton","formatButton","SelectedCellsFormat","Table","loading","setLoading","tableJustCreated","timeoutFinished","useCallback","setTimeout","size","CircularProgress","delete","deleteTable","popupbox","box","maxHeight","overflow","closeicon","content","cursor","button","TableInfoPopup","React","setName","setDescription","handleClose","TextField","required","fullWidth","label","variant","placeholder","value","onChange","event","target","multiline","rows","rowsMax","add","cellsRowValue","newCells","addTable","formControl","minWidth","header","noTypeButton","ActionCellPopup","setSumAll","setColor","setRows","actionType","setActionType","typeActionType","setTypeActionType","typeActionTypeName","setTypeActionTypeName","isBold","setIsBold","isItalic","setIsItalic","setFontSize","actionTypes","typeActionTypes","actionTypesNames","typeActionTypesNames","FormControlLabel","control","Checkbox","checked","labelPlacement","FormControl","InputLabel","Select","MenuItem","beginCustomSelect","makeEmptyButton","NoTypeCellPopup","isAction","setIsAction","submitNoTypePopup","SHOW_SNACKBAR","CLOSE_SNACKBAR","showSnackbar","message","quillContainer","editor","fileNameContainer","removeFileButton","borderInputcontainer","borderText","InfoCellPopup","typeForAction","setTypeForAction","file","setFile","nameFile","setNameFile","setTop","setBottom","setLeft","setRight","baseTen","setBaseTen","baseThree","setBaseThree","baseHundred","setBaseHundred","baseFour","setBaseFour","databaseID","setDatabaseID","cellFile","cellNameFile","filePath","nameFilePath","getMetadata","showError","msg","extensions","loadedFile","onError","theme","bluetoothContent","put","updateInfoCell","notypeButton","EmptyCellPopup","fileButton","ImageCellPopup","setWidth","setHeight","leftMargin","setLeftMargin","topMargin","setTopMargin","cellImageFile","updateImageCell","FormatCellsPopup","isBoxBorder","setIsBoxBorder","submitSelectingCells","Home","isNamePopupOpen","setIsNamePopupOpen","isActionCellPopupOpen","actionPopupOpen","isEmptyCellPopupOpen","emptyCellPopupOpen","isInfoCellPopupOpen","infoPopupOpen","noTypeCellPopupOpen","noTypePopupOpen","imageCellPopupOpen","imagePopupOpen","formatCellsPopupOpen","user","history","useHistory","window","scrollTo","disableBodyScroll","document","enableBodyScroll","role","toggleNamePopup","Container","close","spacing","AppSnackbar","open","snackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","SIGN_IN","SIGN_IN_SUCCESS","SIGN_IN_FAILED","title","alignItems","SignIn","email","setEmail","password","setPassword","Typography","signInWithEmailAndPassword","uid","dbUser","signIn","App","CssBaseline","exact","path","component","Boolean","location","hostname","match","initialState","combineReducers","state","newTables","remove","splice","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","whitelist","pReducer","persistReducer","reducers","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.282d3861.chunk.js","sourcesContent":["export const GET_TABLES = \"tables/GET_TABLES\";\nexport const GET_TABLES_SUCCESS = \"tables/GET_TABLES_SUCCESS\";\nexport const GET_TABLES_FAILED = \"tables/GET_TABLES_FAILED\";\nexport const ADD_TABLE = \"tables/ADD_TABLE\";\nexport const DELETE_TABLE = \"tables/DELETE_TABLE\";\nexport const DELETE_TABLE_SUCCESS = \"tables/DELETE_TABLE_SUCCESS\";\nexport const DELETE_TABLE_FAILED = \"tables/DELETE_TABLE_FAILED\";\nexport const SET_SELECTED_TABLE = \"tables/SET_SELECTED_TABLE\";\nexport const SET_BIG_IMAGE = \"tables/SET_BIG_IMAGE\";\nexport const SET_TABLE_JUST_CREATED_FALSE =\n  \"tables/SET_TABLE_JUST_CREATED_FALSE\";\nexport const REMOVE_BIG_IMAGE = \"tables/REMOVE_BIG_IMAGE\";\n","import firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBN83KPofzkMJ8I61kt8Fn8our5BSWfNjw\",\n  authDomain: \"firmus-medicus-a254b.firebaseapp.com\",\n  projectId: \"firmus-medicus-a254b\",\n  storageBucket: \"firmus-medicus-a254b.appspot.com\",\n  messagingSenderId: \"906887380621\",\n  appId: \"1:906887380621:web:d9ab0a949265376084ecc4\",\n  measurementId: \"G-506ZEGQVF1\",\n};\nfirebase.initializeApp(config);\n\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const auth = firebase.auth();\n","export function getEmptyTableCells(tableId) {\n  const data = [];\n  data.push(getFirstEmptyRow(tableId));\n  for (let i = 1; i < 28; i++) {\n    data.push(getEmptyRow(i, tableId));\n  }\n  return data;\n}\nfunction getFirstEmptyRow(tableId) {\n  return {\n    tableId,\n    rowIndex: 0,\n    cells: [\n      getNoTypeCell(0, 0),\n      getNoTypeCell(0, 1),\n      getNoTypeCell(0, 2),\n      getNoTypeCell(0, 3),\n      getEmptyCell(4),\n      getEmptyCell(5),\n      getEmptyCell(6),\n      getNoTypeCell(0, 7),\n      getNoTypeCell(0, 8),\n      getNoTypeCell(0, 9),\n      getNoTypeCell(0, 10),\n    ],\n  };\n}\nfunction getEmptyRow(rowIndex, tableId) {\n  return {\n    tableId,\n    rowIndex,\n    cells: [\n      getNoTypeCell(rowIndex, 0),\n      getNoTypeCell(rowIndex, 1),\n      getNoTypeCell(rowIndex, 2),\n      getNoTypeCell(rowIndex, 3),\n      getNoTypeCell(rowIndex, 4),\n      getNoTypeCell(rowIndex, 5),\n      getNoTypeCell(rowIndex, 6),\n      getNoTypeCell(rowIndex, 7),\n      getNoTypeCell(rowIndex, 8),\n      getNoTypeCell(rowIndex, 9),\n      getNoTypeCell(rowIndex, 10),\n    ],\n  };\n}\nfunction getNoTypeCell(rowIndex, columnIndex) {\n  return {\n    type: \"notype\",\n    rowIndex,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"1\",\n    leftBorder: \"1\",\n    rightBorder: \"1\",\n    bottomBorder: \"1\",\n  };\n}\nfunction getEmptyCell(columnIndex) {\n  return {\n    type: \"empty\",\n    rowIndex: 0,\n    columnIndex,\n    color: \"white\",\n    topBorder: \"1\",\n    leftBorder: \"1\",\n    rightBorder: \"1\",\n    bottomBorder: \"1\",\n  };\n}\n","export const GET_CELLS_ROWS = \"cellsRows/GET_CELLS_ROWS\";\nexport const GET_CELLS_ROWS_SUCCESS = \"cellsRows/GET_CELLS_ROWS_SUCCESS\";\nexport const GET_CELLS_ROWS_FAILED = \"cellsRows/GET_CELLS_ROWS_FAILED\";\nexport const CLEAR_CELLS_ROWS = \"cellsRows/CLEAR_CELLS_ROWS\";\nexport const ADD_SELECTING_CELL = \"cellsRows/ADD_SELECTING_CELL\";\nexport const BEGIN_FORMAT_SELECTING = \"cellsRows/BEGIN_FORMAT_SELECTING\";\nexport const STOP_FORMAT_SELECTING = \"cellsRows/STOP_FORMAT_SELECTING\";\nexport const SUBMIT_FORMAT_SELECTING = \"cellsRows/SUBMIT_FORMAT_SELECTING\";\nexport const UPDATE_CELLS_ROWS = \"cellsRows/UPDATE_CELLS_ROWS\";\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n} from \"../actionTypes/cellsRows\";\nimport { db } from \"../../firebase\";\n\nexport function getCellsRows(tableId) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELLS_ROWS });\n\n    try {\n      const ref = db.collection(\"tables\").doc(tableId).collection(\"cellsRows\");\n      ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((cellsRow) => {\n          data.push({ ...cellsRow.data(), id: cellsRow.id });\n        });\n        dispatch({ type: GET_CELLS_ROWS_SUCCESS, data: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELLS_ROWS_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function submitSelectingCells(cellInfo, cells, cellsRows) {\n  return async (dispatch) => {\n    if (cellInfo.isBoxBorder) {\n      boxUpdate(dispatch, cellInfo, cells, cellsRows);\n    } else {\n      simpleUpdate(dispatch, cellInfo, cells, cellsRows);\n    }\n  };\n}\n\nconst boxUpdate = (dispatch, cellInfo, cells, cellsRows) => {\n  cells.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n  const smallestRow = cells[0].rowIndex;\n  const bigestRow =\n    cells.length > 1 ? cells[cells.length - 1].rowIndex : smallestRow;\n  cells.sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1));\n  const smallestColumn = cells[0].columnIndex;\n  const bigestColumn =\n    cells.length > 1 ? cells[cells.length - 1].columnIndex : smallestColumn;\n\n  const rowsToUpdate = [...cellsRows];\n  const cellsToUpdate = [];\n  const rowsForRequest = [];\n  cells.forEach((cell) => {\n    const newCell = {\n      ...cell,\n      color: cellInfo.color !== \"\" ? cellInfo.color : cell.color,\n      bottomBorder:\n        cell.rowIndex === bigestRow ? cellInfo.width : cell.bottomBorder,\n      topBorder:\n        (cell.rowIndex === smallestRow) !== \"\"\n          ? cellInfo.width\n          : cell.topBorder,\n      leftBorder:\n        cell.columnIndex === smallestColumn ? cellInfo.width : cell.leftBorder,\n      rightBorder:\n        cell.columnIndex === bigestColumn ? cellInfo.width : cell.rightBorder,\n    };\n    cellsToUpdate.push(newCell);\n  });\n  cellsToUpdate.forEach((cell, index) => {\n    rowsToUpdate[cell.rowIndex] = getFormattedRow(\n      cell,\n      cells[index],\n      rowsToUpdate[cell.rowIndex]\n    );\n    if (!rowsForRequest.includes(cell.rowIndex)) {\n      rowsForRequest.push(cell.rowIndex);\n    }\n  });\n  rowsToUpdate.forEach((row) => {\n    if (rowsForRequest.includes(row.rowIndex)) {\n      sendUpdateRowRequest(row);\n    }\n  });\n  dispatch({ type: UPDATE_CELLS_ROWS, cellsRows: rowsToUpdate });\n};\n\nconst simpleUpdate = (dispatch, cellInfo, cells, cellsRows) => {\n  const rowsToUpdate = [...cellsRows];\n  const cellsToUpdate = [];\n  const rowsForRequest = [];\n  cells.forEach((cell) => {\n    const newCell = {\n      ...cell,\n      color: cellInfo.color !== \"\" ? cellInfo.color : cell.color,\n      bottomBorder:\n        cellInfo.bottom !== \"\" ? cellInfo.bottom : cell.bottomBorder,\n      topBorder: cellInfo.top !== \"\" ? cellInfo.top : cell.topBorder,\n      leftBorder: cellInfo.left !== \"\" ? cellInfo.left : cell.leftBorder,\n      rightBorder: cellInfo.right !== \"\" ? cellInfo.right : cell.rightBorder,\n    };\n    cellsToUpdate.push(newCell);\n  });\n  cellsToUpdate.forEach((cell, index) => {\n    rowsToUpdate[cell.rowIndex] = getFormattedRow(\n      cell,\n      cells[index],\n      rowsToUpdate[cell.rowIndex]\n    );\n    if (!rowsForRequest.includes(cell.rowIndex)) {\n      rowsForRequest.push(cell.rowIndex);\n    }\n  });\n  rowsToUpdate.forEach((row) => {\n    if (rowsForRequest.includes(row.rowIndex)) {\n      sendUpdateRowRequest(row);\n    }\n  });\n  dispatch({ type: UPDATE_CELLS_ROWS, cellsRows: rowsToUpdate });\n};\n\nconst sendUpdateRowRequest = (row) => {\n  db.collection(\"tables\")\n    .doc(row.tableId)\n    .collection(\"cellsRows\")\n    .doc(row.id)\n    .update({ cells: row.cells });\n};\n\nconst getFormattedRow = (cell, mirrorCell, row) => {\n  const cellIndex = row.cells.indexOf(mirrorCell);\n  row.cells[cellIndex] = cell;\n  return row;\n};\n\nexport function addSelectingCell(cell) {\n  return async (dispatch) => {\n    dispatch({ type: ADD_SELECTING_CELL, cell });\n  };\n}\n\nexport function setIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_FORMAT_SELECTING });\n  };\n}\n\nexport function cancelIsSelecting() {\n  return async (dispatch) => {\n    dispatch({ type: STOP_FORMAT_SELECTING });\n  };\n}\n","export const SHOW_ACTION_POPUP = \"popups/SHOW_ACTION_POPUP\";\nexport const CLOSE_POPUP = \"popups/CLOSE_ACTION_POPUP\";\nexport const SHOW_INFO_POPUP = \"popups/SHOW_INFO_POPUP\";\nexport const SHOW_NO_TYPE_POPUP = \"popups/SHOW_NO_TYPE_POPUP\";\nexport const SHOW_IMAGE_CELL_POPUP = \"popups/SHOW_IMAGE_CELL_POPUP\";\nexport const SHOW_EMPTY_CELL_POPUP = \"popups/SHOW_EMPTY_CELL_POPUP\";\nexport const SUBMIT_NO_TYPE_POPUP = \"popups/SUBMIT_NO_TYPE_POPUP\";\nexport const BEGIN_CUSTOM_SELECT = \"popups/BEGIN_CUSTOM_SELECT\";\nexport const CELL_TO_UPDATE_CUSTOM_CELL_SELECTED =\n  \"popups/CELL_TO_UPDATE_CUSTOM_CELL_SELECTED\";\nexport const CUSTOM_CELLS_SUBMITED = \"popups/CUSTOM_CELLS_SUBMITED\";\nexport const CANCEL_CUSTOM_CELLS = \"popups/CANCEL_CUSTOM_CELLS\";\nexport const SHOW_FORMAT_CELLS_POPUP = \"popups/SHOW_FORMAT_CELLS_POPUP\";\n","import {\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SUBMIT_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n} from \"../actionTypes/popups\";\n\nexport function beginCustomSelect(cell) {\n  return async (dispatch) => {\n    dispatch({ type: BEGIN_CUSTOM_SELECT, cell });\n  };\n}\n\nexport function cancelCustomCells() {\n  return async (dispatch) => {\n    dispatch({ type: CANCEL_CUSTOM_CELLS });\n  };\n}\n\nexport function cellToUpdateCustomCellSelected(cell) {\n  return async (dispatch) => {\n    dispatch({ type: CELL_TO_UPDATE_CUSTOM_CELL_SELECTED, cell });\n  };\n}\n\nexport function showFormatCellsPopup() {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_FORMAT_CELLS_POPUP });\n  };\n}\n\nexport function showImagePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_IMAGE_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showActionPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_ACTION_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showEmptyCellPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_EMPTY_CELL_POPUP, cell, cellsRow });\n  };\n}\n\nexport function submitNoTypePopup(isAction) {\n  return async (dispatch) => {\n    dispatch({ type: SUBMIT_NO_TYPE_POPUP, isAction });\n  };\n}\n\nexport function showNoTypePopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_NO_TYPE_POPUP, cell, cellsRow });\n  };\n}\n\nexport function showInfoPopup(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_INFO_POPUP, cell, cellsRow });\n  };\n}\n\nexport function closePopup() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { setSelectedTable } from \"../../state/actions/tables\";\nimport { cancelIsSelecting } from \"../../state/actions/cellsRows\";\nimport { cancelCustomCells } from \"../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  buttonNormal: {\n    color: \"black\",\n    fontSize: \"1em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    whiteSpace: \"wrap\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  buttonSelected: {\n    color: \"white\",\n    background: \"black\",\n    fontSize: \"1em\",\n    whiteSpace: \"wrap\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"black\",\n    borderWidth: \"1px\",\n    margin: \"10px 10px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n      cursos: \"auto\",\n    },\n  },\n});\n\nconst TablesListItem = ({ item }) => {\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const [isSelected, setIsSelected] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsSelected(selectedTable && selectedTable.id === item.id);\n  }, [setIsSelected, selectedTable, item]);\n\n  const selectTable = () => {\n    dispatch(setSelectedTable(item));\n    dispatch(cancelIsSelecting());\n    dispatch(cancelCustomCells());\n  };\n\n  return (\n    <Button\n      onClick={isSelected ? null : selectTable}\n      className={isSelected ? classes.buttonSelected : classes.buttonNormal}\n    >\n      {item.name}\n    </Button>\n  );\n};\nTablesListItem.propTypes = {\n  item: PropTypes.object,\n};\nexport default TablesListItem;\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\nimport { db, storage } from \"../../firebase\";\nimport { getEmptyTableCells } from \"../../common/CellFunctions\";\n\nexport function removeBigImage() {\n  return async (dispatch) => {\n    dispatch({ type: REMOVE_BIG_IMAGE });\n  };\n}\n\nexport function getTables() {\n  return async (dispatch) => {\n    dispatch({ type: GET_TABLES });\n\n    try {\n      const ref = db.collection(\"tables\");\n      await ref.get().then((snapshot) => {\n        const data = [];\n        snapshot.forEach((table) => {\n          data.push({ ...table.data(), id: table.id });\n        });\n        dispatch({ type: GET_TABLES_SUCCESS, tables: data });\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_TABLES_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setTableJustCreatedFalse() {\n  return async (dispatch) => {\n    dispatch({\n      type: SET_TABLE_JUST_CREATED_FALSE,\n    });\n  };\n}\n\nexport function addTable(name, description) {\n  return async (dispatch) => {\n    const ref = db.collection(\"tables\");\n    await ref.add({ name, description }).then((table) => {\n      const cellsRows = getEmptyTableCells(table.id);\n      cellsRows.forEach((cellsRow) => {\n        ref\n          .doc(table.id)\n          .collection(\"cellsRows\")\n          .add({\n            tableId: cellsRow.tableId,\n            rowIndex: cellsRow.rowIndex,\n          })\n          .then((cellsRowValue) => {\n            const newCells = [];\n            cellsRow.cells.forEach((cell) =>\n              newCells.push({\n                ...cell,\n                tableId: table.id,\n                cellsRowId: cellsRowValue.id,\n              })\n            );\n            ref\n              .doc(table.id)\n              .collection(\"cellsRows\")\n              .doc(cellsRowValue.id)\n              .update({ cells: newCells });\n          });\n      });\n\n      dispatch({\n        type: ADD_TABLE,\n        table: { id: table.id, name, description },\n      });\n    });\n  };\n}\n\nexport function deleteTable(tableId, cellsRows) {\n  return async (dispatch) => {\n    dispatch({ type: DELETE_TABLE });\n    try {\n      var ref = db.collection(\"tables\").doc(tableId);\n      cellsRows.forEach((row) => {\n        ref.collection(\"cellsRows\").doc(row.id).delete();\n      });\n      ref.delete();\n      dispatch({ type: DELETE_TABLE_SUCCESS, tableId });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: DELETE_TABLE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function setBigImage(cell) {\n  return async (dispatch) => {\n    storage\n      .ref(cell.bigImagePath)\n      .getDownloadURL()\n      .then((image) => {\n        dispatch({ type: SET_BIG_IMAGE, image, cell });\n      })\n      .catch(() => {\n        console.log(\"error\");\n      });\n  };\n}\n\nexport function setSelectedTable(table) {\n  return async (dispatch) => {\n    dispatch({ type: SET_SELECTED_TABLE, table });\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { Card, Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport TablesListItem from \"./TablesListItem\";\nimport { useEffect } from \"react\";\nimport { getTables } from \"../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"inline-flex\",\n    flexDirection: \"column\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    maxWidth: \"150px\",\n    flex: 1,\n  },\n  iconmenubutton: {\n    height: \"35px\",\n    color: \"black\",\n    fontSize: \"2em\",\n    textTransform: \"none\",\n    borderRadius: \"5px\",\n    borderColor: \"#FFFFFF\",\n    borderWidth: \"1px\",\n    margin: \"0px auto 5px auto\",\n    borderStyle: \"solid\",\n    \"&:hover\": {\n      color: \"white\",\n      background: \"black\",\n    },\n  },\n  text: {\n    textAlign: \"center\",\n    margin: \"5px\",\n  },\n});\n\nconst TablesList = ({ showTableNamePopup }) => {\n  const classes = useStyles();\n  const tables = useSelector((store) => store.tables.tables);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTables());\n  }, [dispatch]);\n\n  return (\n    <Card className={classes.card}>\n      <h3 className={classes.text}>Tables</h3>\n      <Button className={classes.iconmenubutton} onClick={showTableNamePopup}>\n        <AddIcon />\n      </Button>\n      {tables.map((item) => (\n        <TablesListItem item={item} key={tables.indexOf(item)} />\n      ))}\n    </Card>\n  );\n};\nTablesList.propTypes = {\n  showTableNamePopup: PropTypes.func,\n};\nexport default TablesList;\n","import { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {\n  showEmptyCellPopup,\n  showImagePopup,\n} from \"../../../state/actions/popups\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { setBigImage } from \"../../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  cell: {\n    height: \"50px\",\n    width: \"100px\",\n    display: \"table-cell\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n  },\n});\n\nconst EmptyCell = ({ cell, cellsRow }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell && cell.bigImagePath !== undefined) {\n      dispatch(setBigImage(cell));\n    }\n  }, [cell, dispatch]);\n\n  const action = () => {\n    if (cell.type === \"empty\") {\n      dispatch(showEmptyCellPopup(cell, cellsRow));\n    } else {\n      dispatch(showImagePopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.type === \"empty\" ? \"\" : \"image\"}\n    </div>\n  );\n};\nEmptyCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n};\nexport default EmptyCell;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  showActionPopup,\n  showInfoPopup,\n  showNoTypePopup,\n  cellToUpdateCustomCellSelected,\n} from \"../../../state/actions/popups\";\nimport { addSelectingCell } from \"../../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  cell: {\n    background: (props) => props.color,\n    borderLeftWidth: (props) => props.left + \"px\",\n    borderRightWidth: (props) => props.right + \"px\",\n    borderTopWidth: (props) => props.top + \"px\",\n    borderBottomWidth: (props) => props.bottom + \"px\",\n    borderTopColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderRightColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderLeftColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    borderBottomColor: (props) => (props.isCustomCell ? \"#2BFF00\" : \"black\"),\n    height: \"50px\",\n    width: \"100px\",\n    borderLeftStyle: \"solid\",\n    borderRightStyle: \"solid\",\n    borderTopStyle: \"solid\",\n    borderBottomStyle: \"solid\",\n    alignContent: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    display: \"table-cell\",\n    verticalAlign: \"middle\",\n  },\n  text: {\n    fontSize: \"10px\",\n    margin: \"0px\",\n    lineHeight: \"1.1\",\n    fontWeight: \"bold\",\n  },\n});\n\nconst Cell = ({ cell, cellsRow, isCustomCell }) => {\n  const classes = useStyles({\n    left: cell.leftBorder,\n    right: cell.rightBorder,\n    top: cell.topBorder,\n    bottom: cell.bottomBorder,\n    color: cell.color,\n    isCustomCell,\n  });\n  const cellToUpdate = useSelector((store) => store.popups.cellToUpdate);\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const action = () => {\n    if (isSelecting) {\n      dispatch(addSelectingCell(cell));\n    } else if (cellToUpdate !== undefined) {\n      if (\n        !(\n          cellToUpdate.cell.columnIndex === cell.columnIndex &&\n          cellToUpdate.cell.rowIndex === cell.rowIndex\n        ) &&\n        cell.type === \"info\"\n      ) {\n        dispatch(cellToUpdateCustomCellSelected(cell));\n      }\n    } else if (cell.type === \"notype\") {\n      dispatch(showNoTypePopup(cell, cellsRow));\n    } else if (cell.type === \"info\") {\n      dispatch(showInfoPopup(cell, cellsRow));\n    } else if (cell.type === \"action\") {\n      dispatch(showActionPopup(cell, cellsRow));\n    }\n  };\n\n  return (\n    <div className={classes.cell} onClick={action}>\n      {cell.sumAll && (\n        <img\n          style={{\n            width: \"25px\",\n            height: \"25px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n          src={\"/dao.png\"}\n          alt=\"all\"\n        />\n      )}\n      {cell.name &&\n        !cell.sumAll &&\n        cell.name.split(\"<br />\").map((text, ix) => (\n          <p className={classes.text} key={ix}>\n            {text}\n          </p>\n        ))}\n    </div>\n  );\n};\nCell.propTypes = {\n  cell: PropTypes.object,\n  cellsRow: PropTypes.object,\n  isCustomCell: PropTypes.bool,\n};\nexport default Cell;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nimport EmptyCell from \"./cells/EmptyCell\";\nimport Cell from \"./cells/Cell\";\n\nconst useStyles = makeStyles({\n  row: {\n    display: \"table-row\",\n  },\n});\n\nconst CellsRow = ({ cellsRow }) => {\n  const classes = useStyles();\n  const cellToUpdateCustomCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRowLetsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  return (\n    <div className={classes.row}>\n      {letsUpdate && cellsRowLetsUpdate && <div></div>}\n      {cellsRow &&\n        cellsRow.cells &&\n        cellsRow.cells\n          .sort((a, b) => (a.columnIndex > b.columnIndex ? 1 : -1))\n          .map((cell) =>\n            cell.type === \"empty\" || cell.type === \"image\" ? (\n              <EmptyCell\n                cell={cell}\n                cellsRow={cellsRow}\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            ) : (\n              <Cell\n                cell={cell}\n                cellsRow={cellsRow}\n                isCustomCell={\n                  (cellToUpdateCustomCells &&\n                    cellToUpdateCustomCells.includes(cell)) ||\n                  (selectedCells && selectedCells.includes(cell))\n                }\n                key={`${cellsRow.rowIndex}` + cell.columnIndex}\n              />\n            )\n          )}\n    </div>\n  );\n};\nCellsRow.propTypes = {\n  cellsRow: PropTypes.object,\n};\nexport default CellsRow;\n","export const UPDATE_CELL = \"cell/UPDATE_CELL\";\nexport const UPDATE_CELL_SUCCESS = \"cell/UPDATE_CELL_SUCCESS\";\nexport const UPDATE_CELL_FAILED = \"cell/UPDATE_CELL_FAILED\";\nexport const GET_CELL_FILE = \"cell/GET_CELL_FILE\";\nexport const GET_CELL_FILE_SUCCESS = \"cell/GET_CELL_FILE_SUCCESS\";\nexport const GET_CELL_FILE_FAILED = \"cell/GET_CELL_FILE_FAILED\";\nexport const GET_CELL_NAME_FILE = \"cell/GET_CELL_NAME_FILE\";\nexport const GET_CELL_NAME_FILE_SUCCESS = \"cell/GET_CELL_NAME_FILE_SUCCESS\";\nexport const GET_CELL_NAME_FILE_FAILED = \"cell/GET_CELL_NAME_FILE_FAILED\";\nexport const GET_CELL_IMAGE_FILE = \"cell/GET_CELL_IMAGE_FILE\";\nexport const GET_CELL_IMAGE_FILE_SUCCESS = \"cell/GET_CELL_IMAGE_FILE_SUCCESS\";\nexport const GET_CELL_IMAGE_FILE_FAILED = \"cell/GET_CELL_IMAGE_FILE_FAILED\";","import { db, storage } from \"../../firebase\";\nimport {\n  UPDATE_CELL,\n  UPDATE_CELL_SUCCESS,\n  UPDATE_CELL_FAILED,\n  GET_CELL_FILE,\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_FILE_FAILED,\n  GET_CELL_NAME_FILE,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_FAILED,\n  GET_CELL_IMAGE_FILE,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_FAILED,\n} from \"../actionTypes/cell\";\nimport { CLOSE_POPUP, CUSTOM_CELLS_SUBMITED } from \"../actionTypes/popups\";\n\nexport function updateCell(cell, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== cell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(cell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell,\n      });\n      dispatch({ type: CUSTOM_CELLS_SUBMITED });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function updateImageCell(cell, file, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let bigImagePath =\n        \"/\" +\n        cell.tableId +\n        \"/\" +\n        cell.cellsRowId +\n        \"/\" +\n        cell.columnIndex +\n        \"/\" +\n        file.name;\n      await storage.ref(bigImagePath).put(file);\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, bigImagePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        e,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n\nexport function getCellImageFile(bigImagePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_IMAGE_FILE });\n    try {\n      storage\n        .ref(bigImagePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_IMAGE_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_IMAGE_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellNameFile(nameFilePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_NAME_FILE });\n    try {\n      storage\n        .ref(nameFilePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_NAME_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_NAME_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function getCellFile(filePath) {\n  return async (dispatch) => {\n    dispatch({ type: GET_CELL_FILE });\n    try {\n      storage\n        .ref(filePath)\n        .getMetadata()\n        .then((file) => {\n          dispatch({ type: GET_CELL_FILE_SUCCESS, file });\n        });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: GET_CELL_FILE_FAILED,\n        error,\n      });\n    }\n  };\n}\n\nexport function updateInfoCell(cell, file, nameFile, cellsRow) {\n  return async (dispatch) => {\n    dispatch({ type: UPDATE_CELL });\n    try {\n      let filePath = \"\";\n      let nameFilePath = \"\";\n      if (file !== undefined) {\n        filePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          file.name;\n        await storage.ref(filePath).put(file);\n      } else if (cell.filePath && cell.filePath !== \"\") {\n        filePath = cell.filePath;\n      }\n      if (nameFile !== undefined) {\n        nameFilePath =\n          \"/\" +\n          cell.tableId +\n          \"/\" +\n          cell.cellsRowId +\n          \"/\" +\n          cell.columnIndex +\n          \"/\" +\n          nameFile.name;\n        await storage.ref(nameFilePath).put(nameFile);\n      } else if (cell.nameFilePath && cell.nameFilePath !== \"\") {\n        nameFilePath = cell.nameFilePath;\n      }\n      const ref = db\n        .collection(\"tables\")\n        .doc(cell.tableId)\n        .collection(\"cellsRows\")\n        .doc(cell.cellsRowId);\n      const newCell = { ...cell, filePath, nameFilePath };\n      const newRow = [];\n      cellsRow.cells.forEach((element) => {\n        if (element.columnIndex !== newCell.columnIndex) {\n          newRow.push(element);\n        }\n      });\n      newRow.push(newCell);\n      ref.update({\n        cells: newRow,\n      });\n      dispatch({\n        type: UPDATE_CELL_SUCCESS,\n        cell: newCell,\n      });\n    } catch (e) {\n      const error = e && e.error ? e.error : \"System error\";\n      dispatch({\n        type: UPDATE_CELL_FAILED,\n        error,\n      });\n    }\n    dispatch({ type: CLOSE_POPUP });\n  };\n}\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cancelCustomCells } from \"../../../state/actions/popups\";\nimport { updateCell } from \"../../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  container: {\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    background: \"white\",\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsInfo = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const customCells = useSelector(\n    (store) => store.popups.cellToUpdateCustomCells\n  );\n  const cell = useSelector((store) => store.popups.cellToUpdate);\n  const letsUpdate = useSelector((store) => store.popups.letsUpdate);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const submitCustomCellsF = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell.cell,\n          customCells: convertCustomCells(customCells),\n        },\n        cellsRow\n      )\n    );\n  };\n\n  const convertCustomCells = (cells) => {\n    const data = [];\n    cells.forEach((element) => {\n      data.push({\n        columnIndex: element.columnIndex,\n        rowIndex: element.rowIndex,\n      });\n    });\n    return data;\n  };\n\n  const cancelCustomCellsF = () => {\n    dispatch(cancelCustomCells());\n  };\n\n  const convertCustomCellsName = (text) => {\n    return text.split(\"<br />\").join(\" \");\n  };\n\n  return customCells !== undefined ? (\n    <div className={classes.container}>\n      {letsUpdate && <div></div>}\n      <h2>Select cells</h2>\n      <div className={classes.cont}>\n        {customCells.map((cell, ix) => (\n          <p key={ix} className={classes.text}>\n            {cell.name === null ? \"\" : convertCustomCellsName(cell.name)}\n          </p>\n        ))}\n        {customCells.length === 0 ? (\n          <p className={classes.text}>No cells are selected</p>\n        ) : (\n          <p />\n        )}\n      </div>\n      <Button className={classes.cancelButton} onClick={cancelCustomCellsF}>\n        Cancel\n      </Button>\n      <Button className={classes.submitButton} onClick={submitCustomCellsF}>\n        Submit custom cells\n      </Button>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\nexport default SelectedCellsInfo;\n","import { useSelector } from \"react-redux\";\n\nconst BigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const cell = useSelector((store) => store.tables.bigImageCell);\n\n  return image !== undefined ? (\n    <img\n      style={{\n        position: \"absolute\",\n        top: `${\n          cell.rowIndex * 50 +\n          140 +\n          64 +\n          56 +\n          parseInt(cell.bigImageTopMargin) +\n          25 -\n          cell.bigImageHeight / 2\n        }px`,\n        left: `${\n          cell.columnIndex * 100 +\n          180 +\n          parseInt(cell.bigImageLeftMargin) +\n          50 -\n          cell.bigImageWidth / 2\n        }px`,\n      }}\n      src={image}\n      height={cell.bigImageHeight}\n      width={cell.bigImageWidth}\n      alt=\"big\"\n    />\n  ) : (\n    <div></div>\n  );\n};\nexport default BigImage;\n","import { Button } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeBigImage } from \"../../../state/actions/tables\";\n\nconst RemoveBigImage = () => {\n  const image = useSelector((store) => store.tables.bigImage);\n  const dispatch = useDispatch();\n\n  const removeBigImageFromTable = () => {\n    dispatch(removeBigImage());\n  };\n\n  return image !== undefined ? (\n    <Button\n      style={{\n        color: \"white\",\n        background: \"red\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\",\n      }}\n      onClick={removeBigImageFromTable}\n    >\n      TEMPORARILY REMOVE BIG IMAGE ( UNTIL REFRESH )\n    </Button>\n  ) : (\n    <div></div>\n  );\n};\nexport default RemoveBigImage;\n","import { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cancelIsSelecting } from \"../../../state/actions/cellsRows\";\nimport { showFormatCellsPopup } from \"../../../state/actions/popups\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  text: {\n    padding: \"5px\",\n    borderRadius: \"5px\",\n    border: \"1px solid black\",\n    marginRight: \"10px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"20px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  cancelButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SelectedCellsFormat = () => {\n  const classes = useStyles();\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const letsUpdate = useSelector((store) => store.cellsRows.letsUpdate);\n  const dispatch = useDispatch();\n\n  const convertCellsName = (text) => {\n    return text ? text.split(\"<br />\").join(\" \") : \"\";\n  };\n\n  const handleFormat = () => {\n    dispatch(showFormatCellsPopup());\n  };\n\n  const handleCancel = () => {\n    dispatch(cancelIsSelecting());\n  };\n\n  return (\n    <div>\n      <Button className={classes.formatButton} onClick={handleFormat}>\n        Format Cells\n      </Button>\n      <Button className={classes.cancelButton} onClick={handleCancel}>\n        CANCEL\n      </Button>\n      <h2>Select cells</h2>\n      {letsUpdate && <div></div>}\n      <div className={classes.cont}>\n        {selectedCells &&\n          selectedCells.map((cell, ix) => (\n            <p key={ix} className={classes.text}>\n              {cell.name === null ? \"\" : convertCellsName(cell.name)}\n            </p>\n          ))}\n      </div>\n      {!selectedCells || selectedCells.length === 0 ? (\n        <p>No cells are selected</p>\n      ) : (\n        <span />\n      )}\n    </div>\n  );\n};\nexport default SelectedCellsFormat;\n","import { Button, Card, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getCellsRows, setIsSelecting } from \"../../state/actions/cellsRows\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport CellsRow from \"./CellsRow\";\nimport {\n  deleteTable,\n  setTableJustCreatedFalse,\n} from \"../../state/actions/tables\";\nimport SelectedCellsInfo from \"./utils/SelectedCellsInfo\";\nimport BigImage from \"./utils/BigImage\";\nimport RemoveBigImage from \"./utils/RemoveBigImage\";\nimport SelectedCellsFormat from \"./utils/SelectedCellsFormat\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: \"10px\",\n    background: \"white\",\n    borderRadius: \"10px\",\n    minHeight: \"150px\",\n    flex: 1,\n    padding: \"20px\",\n  },\n  name: {\n    margin: \"0px\",\n    flex: 1,\n  },\n  description: {\n    height: \"20px\",\n    margin: \"0px\",\n    flex: 1,\n  },\n  cellContainer: {\n    display: \"table\",\n  },\n  deleteButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formatButton: {\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"blue\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst Table = ({ table }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n  const tableJustCreated = useSelector(\n    (store) => store.tables.tableJustCreated\n  );\n  const isSelecting = useSelector((store) => store.cellsRows.isSelecting);\n\n  const dispatch = useDispatch();\n\n  const timeoutFinished = useCallback(() => {\n    dispatch(getCellsRows(table.id));\n    dispatch(setTableJustCreatedFalse());\n  }, [dispatch, table]);\n\n  useEffect(() => {\n    if (!tableJustCreated) {\n      if (!loading) {\n        dispatch(getCellsRows(table.id));\n      }\n      setLoading(false);\n    } else {\n      setLoading(true);\n      setTimeout(timeoutFinished, 3000);\n    }\n  }, [dispatch, table, tableJustCreated, loading, timeoutFinished]);\n\n  const handleDelete = () => {\n    dispatch(deleteTable(table.id, cellsRows));\n  };\n\n  const handleSelect = () => {\n    dispatch(setIsSelecting());\n  };\n\n  const getElement = (size) => {\n    return (\n      <p className={classes.description} style={{ height: `${20 * size}px` }} />\n    );\n  };\n\n  return (\n    <Card className={classes.card}>\n      <h2 className={classes.name}>{table.name}</h2>\n      {table.description.split(\"<br />\").map((text, ix) => (\n        <p className={classes.description} key={ix}>\n          {text}\n        </p>\n      ))}\n      {table.description.split(\"<br />\").length < 4\n        ? getElement(4 - table.description.split(\"<br />\").length)\n        : \"\"}\n      <RemoveBigImage />\n      <SelectedCellsInfo />\n      {loading && <CircularProgress />}\n      {!loading && (\n        <div>\n          {!isSelecting && (\n            <Button className={classes.formatButton} onClick={handleSelect}>\n              Select Cells\n            </Button>\n          )}\n          {isSelecting && <SelectedCellsFormat />}\n          <div className={classes.cellContainer}>\n            <BigImage />\n            {cellsRows.map((cellsRow) => (\n              <CellsRow cellsRow={cellsRow} key={cellsRows.indexOf(cellsRow)} />\n            ))}\n          </div>\n          <div>\n            <Button className={classes.deleteButton} onClick={handleDelete}>\n              Delete\n            </Button>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\nTable.propTypes = {\n  table: PropTypes.object,\n};\nexport default Table;\n","import React from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\n\nimport { addTable } from \"../../state/actions/tables\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst TableInfoPopup = (props) => {\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(addTable(name, description.split(\"\\n\").join(\"<br />\")));\n    props.handleClose();\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={props.handleClose}>\n          x\n        </span>\n        <h2>Create table</h2>\n        <TextField\n          required\n          fullWidth\n          label=\"Name\"\n          name=\"name\"\n          variant=\"outlined\"\n          placeholder=\"Name\"\n          value={name}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleNameChange}\n        />\n        <TextField\n          required\n          fullWidth\n          label=\"Description\"\n          name=\"description\"\n          variant=\"outlined\"\n          multiline={true}\n          rows={4}\n          rowsMax={4}\n          placeholder=\"Description\"\n          value={description}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleDescriptionChange}\n        />\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default TableInfoPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useEffect } from \"react\";\n\nimport { beginCustomSelect, closePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst ActionCellPopup = () => {\n  const [sumAll, setSumAll] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [rows, setRows] = React.useState(\"\");\n  const [actionType, setActionType] = React.useState(\"\");\n  const [typeActionType, setTypeActionType] = React.useState(\"\");\n  const [typeActionTypeName, setTypeActionTypeName] = React.useState(\"\");\n  const [isBold, setIsBold] = React.useState(false);\n  const [isItalic, setIsItalic] = React.useState(false);\n  const [fontSize, setFontSize] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell.sumAll) {\n      setSumAll(cell.sumAll);\n    } else {\n      setName(\n        cell.name === undefined ? \"\" : cell.name.split(\"<br />\").join(\"\\n\")\n      );\n      setFontSize(cell.fontSize);\n      setIsBold(cell.isBold === undefined ? false : cell.isBold);\n      setIsItalic(cell.isItalic === undefined ? false : cell.isItalic);\n      setActionType(cell.actionType);\n      setTypeActionType(cell.typeActionType);\n      setTypeActionTypeName(cell.typeActionTypeName);\n      setColor(cell.color);\n      setRows(cell.rows);\n    }\n  }, [cell]);\n\n  const actionTypes = [\"selectrows\", \"selecttype\", \"custom\"];\n  const typeActionTypes = [\"selecttypeall\", \"selecttyperows\"];\n  const actionTypesNames = [\"Select Rows\", \"Select Type\", \"Custom\"];\n  const typeActionTypesNames = [\"Select All Cells of Type\", \"Select Type Rows\"];\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleTypeNameChange = (event) => {\n    setTypeActionTypeName(event.target.value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (actionType === \"custom\") {\n      dispatch(\n        beginCustomSelect({\n          cell: {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            isBold,\n            isItalic,\n            fontSize: fontSize === undefined ? \"\" : fontSize,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n          },\n        })\n      );\n    } else {\n      dispatch(\n        updateCell(\n          {\n            ...cell,\n            name: name === undefined ? \"\" : name.split(\"\\n\").join(\"<br />\"),\n            color: color === undefined ? \"\" : color,\n            actionType: actionType === undefined ? \"\" : actionType,\n            typeActionType: typeActionType === undefined ? \"\" : typeActionType,\n            typeActionTypeName:\n              typeActionTypeName === undefined ? \"\" : typeActionTypeName,\n            isBold,\n            isItalic,\n            fontSize: fontSize === undefined ? \"\" : fontSize,\n            rows: rows === undefined ? \"\" : rows,\n            sumAll,\n            type: \"action\",\n          },\n          cellsRow\n        )\n      );\n      handleClose();\n    }\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          color: \"white\",\n          actionType: \"\",\n          typeActionType: \"\",\n          typeActionTypeName: \"\",\n          fontSize: \"\",\n          isBold: false,\n          isItalic: false,\n          rows: \"\",\n          sumAll: false,\n          type: \"notype\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleRowsChange = (event) => {\n    setRows(event.target.value);\n  };\n\n  const handleActionTypeChange = (event) => {\n    setActionType(event.target.value);\n  };\n\n  const handleTypeActionTypeChange = (event) => {\n    setTypeActionType(event.target.value);\n  };\n\n  const handleSumAll = () => {\n    setSumAll(!sumAll);\n  };\n\n  const handleIsBold = () => {\n    setIsBold(!isBold);\n  };\n\n  const handleIsItalic = () => {\n    setIsItalic(!isItalic);\n  };\n\n  const handleFontSize = (event) => {\n    setFontSize(event.target.value);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Action</h2>\n        <div>\n          <FormControlLabel\n            value={sumAll}\n            control={<Checkbox color=\"default\" onClick={handleSumAll} />}\n            label=\"Sum all?\"\n            checked={sumAll}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!sumAll && (\n          <div>\n            <TextField\n              fullWidth\n              label=\"Name\"\n              name=\"name\"\n              variant=\"outlined\"\n              placeholder=\"Name\"\n              value={name}\n              multiline={true}\n              rows={3}\n              rowsMax={3}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleNameChange}\n            />\n            <h3>Choose text style</h3>\n            <div>\n              <FormControlLabel\n                value={isBold}\n                control={<Checkbox color=\"default\" onClick={handleIsBold} />}\n                label=\"Is bold?\"\n                checked={isBold}\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                value={isItalic}\n                control={<Checkbox color=\"default\" onClick={handleIsItalic} />}\n                label=\"Is italic?\"\n                checked={isItalic}\n                labelPlacement=\"start\"\n              />\n            </div>\n            <h4>Hint: Standard mobile font is 14</h4>\n            <TextField\n              fullWidth\n              label=\"Font size\"\n              name=\"font_size\"\n              variant=\"outlined\"\n              placeholder=\"Font size\"\n              value={fontSize}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleFontSize}\n            />\n            <h3>Format cell</h3>\n            <TextField\n              fullWidth\n              label=\"Color\"\n              name=\"color\"\n              variant=\"outlined\"\n              placeholder=\"Cell color\"\n              value={color}\n              style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n              onChange={handleColorChange}\n            />\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"label\">Action Type</InputLabel>\n              <Select\n                id=\"select\"\n                value={actionType || \"\"}\n                onChange={handleActionTypeChange}\n              >\n                {actionTypes.map((item, ix) => (\n                  <MenuItem key={item} value={item}>\n                    {actionTypesNames[ix]}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            {actionType === actionTypes[1] && (\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"label\">Action Type</InputLabel>\n                <Select\n                  id=\"select\"\n                  value={typeActionType || \"\"}\n                  onChange={handleTypeActionTypeChange}\n                >\n                  {typeActionTypes.map((item, ix) => (\n                    <MenuItem key={item} value={item}>\n                      {typeActionTypesNames[ix]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n            {actionType === actionTypes[1] && (\n              <TextField\n                fullWidth\n                label=\"Type name\"\n                name=\"Type name\"\n                variant=\"outlined\"\n                placeholder=\"Enter type name\"\n                value={typeActionTypeName || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleTypeNameChange}\n              />\n            )}\n            {(actionType === actionTypes[0] ||\n              (actionType === actionTypes[1] &&\n                typeActionType === typeActionTypes[1])) && (\n              <TextField\n                fullWidth\n                label=\"Rows\"\n                name=\"rows\"\n                variant=\"outlined\"\n                placeholder=\"Enter row indexes separated with Whitespaces ( Begining with 0 )\"\n                value={rows || \"\"}\n                style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n                onChange={handleRowsChange}\n              />\n            )}\n          </div>\n        )}\n        {cell.type !== \"notype\" && (\n          <Button className={classes.noTypeButton} onClick={handleNoTypeSubmit}>\n            MAKE NO TYPE\n          </Button>\n        )}\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Checkbox, FormControlLabel, makeStyles } from \"@material-ui/core\";\n\nimport { closePopup, submitNoTypePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  makeEmptyButton: {\n    border: \"1px solid black\",\n    color: \"white\",\n    background: \"blue\",\n    marginTop: \"10px\",\n    marginRight: \"20px\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n  },\n  formControl: {\n    display: \"flex\",\n    marginBottom: \"10px\",\n    minWidth: 200,\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n});\n\nconst NoTypeCellPopup = () => {\n  const [isAction, setIsAction] = React.useState(false);\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleIsAction = () => {\n    setIsAction(!isAction);\n  };\n\n  const handleSubmit = () => {\n    dispatch(submitNoTypePopup(isAction));\n  };\n\n  const handleMakeEmptySubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"empty\" }, cellsRow));\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Select cell type</h2>\n        <div>\n          <FormControlLabel\n            value={isAction}\n            control={<Checkbox color=\"default\" onClick={handleIsAction} />}\n            label=\"Is it an action cell?\"\n            checked={isAction}\n            labelPlacement=\"start\"\n          />\n        </div>\n        <Button\n          className={classes.makeEmptyButton}\n          onClick={handleMakeEmptySubmit}\n        >\n          Make Empty\n        </Button>\n        <Button className={classes.button} onClick={handleSubmit}>\n          Submit Type Cell\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default NoTypeCellPopup;\n","export const SHOW_SNACKBAR = \"snackbar/SHOW_SNACKBAR\";\nexport const CLOSE_SNACKBAR = \"snackbar/CLOSE_SNACKBAR\";\n","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nexport function showSnackbar(message) {\n  return async (dispatch) => {\n    dispatch({ type: SHOW_SNACKBAR, message });\n  };\n}\n\nexport function closeSnackbar() {\n  return async (dispatch) => {\n    dispatch({ type: CLOSE_SNACKBAR });\n  };\n}\n","import React from \"react\";\nimport {\n  makeStyles,\n  TextField,\n  Button,\n  Checkbox,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport {\n  getCellFile,\n  getCellNameFile,\n  updateInfoCell,\n  updateCell,\n} from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  quillContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"10px\",\n  },\n  editor: {\n    marginLeft: \"10px\",\n    flex: 1,\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  borderInputcontainer: {\n    marginTop: \"50px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  noTypeButton: {\n    marginTop: \"10px\",\n    background: \"red\",\n    marginRight: \"10px\",\n    marginBottom: \"10px\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst InfoCellPopup = () => {\n  const [name, setName] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"\");\n  const [typeForAction, setTypeForAction] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [nameFile, setNameFile] = React.useState(undefined);\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [baseTen, setBaseTen] = React.useState(\"\");\n  const [baseThree, setBaseThree] = React.useState(\"\");\n  const [baseHundred, setBaseHundred] = React.useState(\"\");\n  const [baseFour, setBaseFour] = React.useState(\"\");\n  const [databaseID, setDatabaseID] = React.useState(\"\");\n  const [isBold, setIsBold] = React.useState(false);\n  const [isItalic, setIsItalic] = React.useState(false);\n  const [fontSize, setFontSize] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellFile);\n  const cellNameFile = useSelector((store) => store.popups.cellNameFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setName(\n        cell.name === undefined ? \"\" : cell.name.split(\"<br />\").join(\"\\n\")\n      );\n      setColor(cell.color);\n      setFontSize(cell.fontSize);\n      setIsBold(cell.isBold === undefined ? false : cell.isBold);\n      setIsItalic(cell.isItalic === undefined ? false : cell.isItalic);\n      setDescription(cell.description === undefined ? \"\" : cell.description);\n      setTop(cell.topBorder);\n      setBottom(cell.bottomBorder);\n      setLeft(cell.leftBorder);\n      setRight(cell.rightBorder);\n      setBaseTen(cell.baseTen);\n      setBaseFour(cell.baseFour);\n      setBaseHundred(cell.baseHundred);\n      setBaseThree(cell.baseThree);\n      setDatabaseID(cell.databaseID);\n      if (cell.nameFilePath !== undefined && cell.nameFilePath !== \"\") {\n        dispatch(getCellNameFile(cell.nameFilePath));\n      }\n      if (cell.filePath !== undefined && cell.filePath !== \"\") {\n        dispatch(getCellFile(cell.filePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleSubmit = () => {\n    dispatch(\n      updateInfoCell(\n        {\n          ...cell,\n          name: name.split(\"\\n\").join(\"<br />\"),\n          description,\n          color,\n          isBold,\n          isItalic,\n          fontSize: fontSize === undefined ? \"\" : fontSize,\n          typeForAction,\n          topBorder: top,\n          bottomBorder: bottom,\n          leftBorder: left,\n          rightBorder: right,\n          type: \"info\",\n          baseTen,\n          baseFour,\n          baseHundred,\n          baseThree,\n          databaseID,\n        },\n        file,\n        nameFile,\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleDescriptionChange = (value) => {\n    setDescription(value);\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const nameFileLoaded = (loadedFile) => {\n    setNameFile(loadedFile);\n  };\n\n  const removeNameFile = () => {\n    setNameFile(undefined);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const handleTypeForAction = (event) => {\n    setTypeForAction(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBaseTenChange = (event) => {\n    setBaseTen(event.target.value);\n  };\n\n  const handleBaseFourChange = (event) => {\n    setBaseFour(event.target.value);\n  };\n\n  const handleBaseThreeChange = (event) => {\n    setBaseThree(event.target.value);\n  };\n\n  const handleBaseHundredChange = (event) => {\n    setBaseHundred(event.target.value);\n  };\n\n  const handleDatabaseIDChange = (event) => {\n    setDatabaseID(event.target.value);\n  };\n\n  const handleIsBold = () => {\n    setIsBold(!isBold);\n  };\n\n  const handleIsItalic = () => {\n    setIsItalic(!isItalic);\n  };\n\n  const handleFontSize = (event) => {\n    setFontSize(event.target.value);\n  };\n\n  const handleNoTypeSubmit = () => {\n    dispatch(\n      updateCell(\n        {\n          ...cell,\n          name: \"\",\n          description: \"\",\n          color: \"white\",\n          typeForAction: \"\",\n          topBorder: 1,\n          bottomBorder: 1,\n          leftBorder: 1,\n          rightBorder: 1,\n          type: \"notype\",\n          file: \"\",\n          nameFile: \"\",\n          bluetoothContent: \"\",\n        },\n        cellsRow\n      )\n    );\n    handleClose();\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Update Information</h2>\n        <TextField\n          fullWidth\n          name=\"name\"\n          variant=\"outlined\"\n          label=\"Name\"\n          placeholder=\"Name\"\n          value={name}\n          multiline={true}\n          rows={3}\n          rowsMax={3}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleNameChange}\n        />\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={nameFileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.button}>Click to upload NAME image</Button>\n        </FilePicker>\n        {(nameFile || cellNameFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:\n            <strong>\n              {nameFile === undefined ? cellNameFile.name : nameFile.name}\n            </strong>\n            <button\n              className={classes.removeFileButton}\n              onClick={removeNameFile}\n            >\n              Remove\n            </button>\n          </div>\n        )}\n        <h3>Choose text style</h3>\n        <div>\n          <FormControlLabel\n            value={isBold}\n            control={<Checkbox color=\"default\" onClick={handleIsBold} />}\n            label=\"Is bold?\"\n            checked={isBold}\n            labelPlacement=\"start\"\n          />\n          <FormControlLabel\n            value={isItalic}\n            control={<Checkbox color=\"default\" onClick={handleIsItalic} />}\n            label=\"Is italic?\"\n            checked={isItalic}\n            labelPlacement=\"start\"\n          />\n        </div>\n        <h4>Hint: Standard mobile font is 14</h4>\n        <TextField\n          fullWidth\n          label=\"Font size\"\n          name=\"font_size\"\n          variant=\"outlined\"\n          placeholder=\"Font size\"\n          value={fontSize}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleFontSize}\n        />\n        <h3>Format cell</h3>\n        <TextField\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Type for action\"\n          name=\"type_for_action\"\n          variant=\"outlined\"\n          placeholder=\"Type for action\"\n          value={typeForAction}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleTypeForAction}\n        />\n        <FilePicker\n          extensions={[\"pdf\", \"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.button}>Click to upload file</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded file:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <div className={classes.quillContainer}>\n          <p className={classes.text}>Enter description:</p>\n          <ReactQuill\n            theme=\"snow\"\n            className={classes.editor}\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n        </div>\n        <div className={classes.borderInputcontainer}>\n          <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n          <TextField\n            name=\"top\"\n            variant=\"outlined\"\n            label=\"Top\"\n            placeholder=\"Top\"\n            value={top}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleTopChange}\n          />\n          <TextField\n            label=\"Right\"\n            name=\"right\"\n            variant=\"outlined\"\n            placeholder=\"Right\"\n            value={right}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleRightChange}\n          />\n          <TextField\n            label=\"Bottom\"\n            name=\"bottom\"\n            variant=\"outlined\"\n            placeholder=\"Bottom\"\n            value={bottom}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleBottomChange}\n          />\n          <TextField\n            label=\"Left\"\n            name=\"left\"\n            variant=\"outlined\"\n            placeholder=\"Left\"\n            value={left}\n            style={{\n              margin: \"10px\",\n              maxWidth: \"90px\",\n            }}\n            onChange={handleLeftChange}\n          />\n        </div>\n        <h2>Bluetooth</h2>\n        <TextField\n          fullWidth\n          label=\"Base 10\"\n          name=\"base10\"\n          variant=\"outlined\"\n          placeholder=\"Base 10\"\n          value={baseTen}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseTenChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 44\"\n          name=\"base44\"\n          variant=\"outlined\"\n          placeholder=\"Base 44\"\n          value={baseFour}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseFourChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 100\"\n          name=\"base100\"\n          variant=\"outlined\"\n          placeholder=\"Base 100\"\n          value={baseHundred}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseHundredChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Base 336\"\n          name=\"base336\"\n          variant=\"outlined\"\n          placeholder=\"Base 336\"\n          value={baseThree}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleBaseThreeChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Database ID\"\n          name=\"databaseID\"\n          variant=\"outlined\"\n          placeholder=\"Database ID\"\n          value={databaseID}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleDatabaseIDChange}\n        />\n        <div>\n          {cell.type !== \"notype\" && (\n            <Button\n              className={classes.noTypeButton}\n              onClick={handleNoTypeSubmit}\n            >\n              MAKE NO TYPE\n            </Button>\n          )}\n          <Button className={classes.submitButton} onClick={handleSubmit}>\n            Submit\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default InfoCellPopup;\n","import { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { closePopup, showImagePopup } from \"../../state/actions/popups\";\nimport { updateCell } from \"../../state/actions/cell\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n  notypeButton: {\n    border: \"1px solid black\",\n    background: \"blue\",\n    marginRight: \"20px\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst EmptyCellPopup = () => {\n  const cell = useSelector((store) => store.popups.cell);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(updateCell({ ...cell, type: \"notype\" }, cellsRow));\n  };\n\n  const handleImageSubmit = () => {\n    dispatch(showImagePopup());\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <Button className={classes.notypeButton} onClick={handleSubmit}>\n          MAKE CELL NOTYPE\n        </Button>\n        <Button className={classes.button} onClick={handleImageSubmit}>\n          ADD IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default EmptyCellPopup;\n","import { makeStyles, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilePicker } from \"react-file-picker\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { updateImageCell, getCellImageFile } from \"../../state/actions/cell\";\nimport { showSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"70vh\",\n    marginTop: \"calc(15vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(15vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  fileNameContainer: {\n    marginTop: \"10px\",\n    marginBottom: \"20px\",\n  },\n  removeFileButton: {\n    marginLeft: \"30px\",\n  },\n  fileButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"1px solid black\",\n  },\n  button: {\n    border: \"1px solid black\",\n    background: \"green\",\n    color: \"white\",\n    marginTop: \"10px\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst ImageCellPopup = () => {\n  const [width, setWidth] = React.useState(\"\");\n  const [height, setHeight] = React.useState(\"\");\n  const [file, setFile] = React.useState(undefined);\n  const [leftMargin, setLeftMargin] = React.useState(\"\");\n  const [topMargin, setTopMargin] = React.useState(\"\");\n\n  const cell = useSelector((store) => store.popups.cell);\n  const cellFile = useSelector((store) => store.popups.cellImageFile);\n  const cellsRow = useSelector((store) => store.popups.cellsRow);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cell) {\n      setHeight(cell.bigImageHeight === undefined ? \"\" : cell.bigImageHeight);\n      setWidth(cell.bigImageWidth === undefined ? \"\" : cell.bigImageWidth);\n      setLeftMargin(\n        cell.bigImageLeftMargin === undefined ? \"\" : cell.bigImageLeftMargin\n      );\n      setTopMargin(\n        cell.bigImageTopMargin === undefined ? \"\" : cell.bigImageTopMargin\n      );\n      if (cell && cell.bigImagePath !== undefined && cell.bigImagePath !== \"\") {\n        dispatch(getCellImageFile(cell.bigImagePath));\n      }\n    }\n  }, [cell, dispatch]);\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleHeightChange = (event) => {\n    setHeight(event.target.value);\n  };\n\n  const handleTopMarginChange = (event) => {\n    setTopMargin(event.target.value);\n  };\n\n  const handleLeftMarginChange = (event) => {\n    setLeftMargin(event.target.value);\n  };\n\n  const fileLoaded = (loadedFile) => {\n    setFile(loadedFile);\n  };\n\n  const removeFile = () => {\n    setFile(undefined);\n  };\n\n  const handleSubmit = () => {\n    dispatch(\n      updateImageCell(\n        {\n          ...cell,\n          type: \"image\",\n          bigImageWidth: width,\n          bigImageHeight: height,\n          bigImageTopMargin: topMargin === \"\" ? 0 : topMargin,\n          bigImageLeftMargin: leftMargin === \"\" ? 0 : leftMargin,\n        },\n        file,\n        cellsRow\n      )\n    );\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const showError = (msg) => {\n    dispatch(showSnackbar(msg));\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <FilePicker\n          extensions={[\"png\", \"jpg\", \"jpeg\"]}\n          onChange={fileLoaded}\n          onError={showError}\n        >\n          <Button className={classes.fileButton}>Click to upload image</Button>\n        </FilePicker>\n        {(file || cellFile) && (\n          <div className={classes.fileNameContainer}>\n            Uploaded image:{\" \"}\n            <strong>{file === undefined ? cellFile.name : file.name}</strong>\n            <button className={classes.removeFileButton} onClick={removeFile}>\n              Remove\n            </button>\n          </div>\n        )}\n        <h3>Single cell width = 100 and height = 50</h3>\n        <TextField\n          fullWidth\n          label=\"Width\"\n          name=\"width\"\n          variant=\"outlined\"\n          placeholder=\"Enter width\"\n          value={width}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleWidthChange}\n        />\n        <TextField\n          fullWidth\n          label=\"Height\"\n          name=\"height\"\n          variant=\"outlined\"\n          placeholder=\"Enter height\"\n          value={height}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleHeightChange}\n        />\n        <div style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>\n          <TextField\n            label=\"Top margin\"\n            name=\"topMargin\"\n            variant=\"outlined\"\n            placeholder=\"Top margin\"\n            value={topMargin}\n            style={{\n              marginRight: \"10px\",\n              maxWidth: \"140px\",\n            }}\n            onChange={handleTopMarginChange}\n          />\n          <TextField\n            label=\"Left margin\"\n            name=\"leftMargin\"\n            variant=\"outlined\"\n            placeholder=\"Left margin\"\n            value={leftMargin}\n            style={{\n              maxWidth: \"140px\",\n            }}\n            onChange={handleLeftMarginChange}\n          />\n        </div>\n        <Button className={classes.button} onClick={handleSubmit}>\n          SUBMIT\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default ImageCellPopup;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { closePopup } from \"../../state/actions/popups\";\nimport { submitSelectingCells } from \"../../state/actions/cellsRows\";\n\nconst useStyles = makeStyles({\n  popupbox: {\n    position: \"absolute\",\n    background: \"#00000050\",\n    width: \"100%\",\n    height: \"100vh\",\n    top: 0,\n    left: 0,\n  },\n  box: {\n    position: \"relative\",\n    width: \"70%\",\n    margin: \"0 auto\",\n    height: \"auto\",\n    maxHeight: \"95vh\",\n    marginTop: \"calc(5vh - 20px)\",\n    background: \"white\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    border: \"1px solid black\",\n    overflow: \"auto\",\n  },\n  header: {\n    margin: \"10px 0px\",\n  },\n  closeicon: {\n    content: \"x\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    right: \"calc(15% - 12.5px)\",\n    top: \"calc(5vh - 32.5px)\",\n    background: \"white\",\n    width: \"25px\",\n    height: \"25px\",\n    borderRadius: \"50%\",\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n  },\n  borderInputcontainer: {\n    marginTop: \"10px\",\n  },\n  borderText: {\n    marginBottom: \"5px\",\n  },\n  submitButton: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    background: \"green\",\n    color: \"white\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst FormatCellsPopup = () => {\n  const [color, setColor] = React.useState(\"\");\n  const [width, setWidth] = React.useState(\"\");\n  const [top, setTop] = React.useState(\"\");\n  const [bottom, setBottom] = React.useState(\"\");\n  const [left, setLeft] = React.useState(\"\");\n  const [right, setRight] = React.useState(\"\");\n  const [isBoxBorder, setIsBoxBorder] = React.useState(false);\n  const selectedCells = useSelector((store) => store.cellsRows.selectedCells);\n  const cellsRows = useSelector((store) => store.cellsRows.cellsRows);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    dispatch(\n      submitSelectingCells(\n        { color, top, bottom, left, right, isBoxBorder, width },\n        selectedCells,\n        cellsRows\n      )\n    );\n    handleClose();\n  };\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleColorChange = (event) => {\n    setColor(event.target.value);\n  };\n\n  const handleWidthChange = (event) => {\n    setWidth(event.target.value);\n  };\n\n  const handleTopChange = (event) => {\n    setTop(event.target.value);\n  };\n\n  const handleBottomChange = (event) => {\n    setBottom(event.target.value);\n  };\n\n  const handleLeftChange = (event) => {\n    setLeft(event.target.value);\n  };\n\n  const handleRightChange = (event) => {\n    setRight(event.target.value);\n  };\n\n  const handleBoxBorder = () => {\n    setIsBoxBorder(!isBoxBorder);\n  };\n\n  return (\n    <div className={classes.popupbox}>\n      <div className={classes.box}>\n        <span className={classes.closeicon} onClick={handleClose}>\n          x\n        </span>\n        <h2 className={classes.header}>Format Cells</h2>\n        <TextField\n          fullWidth\n          label=\"Color\"\n          name=\"color\"\n          variant=\"outlined\"\n          placeholder=\"Cell color\"\n          value={color}\n          style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n          onChange={handleColorChange}\n        />\n        <div>\n          <FormControlLabel\n            value={isBoxBorder}\n            control={<Checkbox color=\"default\" onClick={handleBoxBorder} />}\n            label=\"Is box border?\"\n            checked={isBoxBorder}\n            labelPlacement=\"start\"\n          />\n        </div>\n        {!isBoxBorder && (\n          <div className={classes.borderInputcontainer}>\n            <p className={classes.borderText}>Enter Borders Width In Numbers</p>\n            <TextField\n              name=\"top\"\n              variant=\"outlined\"\n              label=\"Top\"\n              placeholder=\"Top\"\n              value={top}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleTopChange}\n            />\n            <TextField\n              label=\"Right\"\n              name=\"right\"\n              variant=\"outlined\"\n              placeholder=\"Right\"\n              value={right}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleRightChange}\n            />\n            <TextField\n              label=\"Bottom\"\n              name=\"bottom\"\n              variant=\"outlined\"\n              placeholder=\"Bottom\"\n              value={bottom}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleBottomChange}\n            />\n            <TextField\n              label=\"Left\"\n              name=\"left\"\n              variant=\"outlined\"\n              placeholder=\"Left\"\n              value={left}\n              style={{\n                margin: \"10px\",\n                maxWidth: \"90px\",\n              }}\n              onChange={handleLeftChange}\n            />\n          </div>\n        )}\n        {isBoxBorder && (\n          <div>\n            <TextField\n              label=\"Border width\"\n              name=\"width\"\n              variant=\"outlined\"\n              placeholder=\"Border width\"\n              value={width}\n              style={{\n                margin: \"10px\",\n              }}\n              onChange={handleWidthChange}\n            />\n          </div>\n        )}\n        <Button className={classes.submitButton} onClick={handleSubmit}>\n          Submit\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default FormatCellsPopup;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Container } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TablesList from \"../tables_list/TablesList\";\nimport Table from \"../table/Table\";\nimport TableInfoPopup from \"../popup/TableInfoPopup\";\nimport ActionCellPopup from \"../popup/ActionCellPopup\";\nimport NoTypeCellPopup from \"../popup/NoTypeCellPopup\";\nimport InfoCellPopup from \"../popup/InfoCellPopup\";\nimport EmptyCellPopup from \"../popup/EmptyCellPopup\";\nimport ImageCellPopup from \"../popup/ImageCellPopup\";\nimport FormatCellsPopup from \"../popup/FormatCellsPopup\";\n\nconst Home = () => {\n  const [isNamePopupOpen, setIsNamePopupOpen] = useState(false);\n  const selectedTable = useSelector((store) => store.tables.selectedTable);\n  const isActionCellPopupOpen = useSelector(\n    (store) => store.popups.actionPopupOpen\n  );\n  const isEmptyCellPopupOpen = useSelector(\n    (store) => store.popups.emptyCellPopupOpen\n  );\n  const isInfoCellPopupOpen = useSelector(\n    (store) => store.popups.infoPopupOpen\n  );\n  const noTypeCellPopupOpen = useSelector(\n    (store) => store.popups.noTypePopupOpen\n  );\n  const imageCellPopupOpen = useSelector(\n    (store) => store.popups.imagePopupOpen\n  );\n  const formatCellsPopupOpen = useSelector(\n    (store) => store.popups.formatCellsPopupOpen\n  );\n\n  const user = useSelector((store) => store.user.user);\n\n  const history = useHistory();\n\n  const popupOpened = () => {\n    window.scrollTo(0, 0);\n    disableBodyScroll(document);\n  };\n\n  isNamePopupOpen ||\n  isActionCellPopupOpen ||\n  isInfoCellPopupOpen ||\n  imageCellPopupOpen ||\n  isEmptyCellPopupOpen ||\n  noTypeCellPopupOpen ||\n  formatCellsPopupOpen\n    ? popupOpened()\n    : enableBodyScroll(document);\n\n  useEffect(() => {\n    if (user === undefined || user.role !== \"admin\") {\n      history.push(\"/\");\n    }\n    window.scrollTo(0, 0);\n  }, [user, history]);\n\n  const toggleNamePopup = () => {\n    setIsNamePopupOpen(!isNamePopupOpen);\n  };\n\n  return (\n    <Container\n      style={{\n        padding: \"10px\",\n        width: \"100%\",\n        display: \"inline-flex\",\n        flexDirection: \"row\",\n      }}\n    >\n      <TablesList showTableNamePopup={toggleNamePopup} />\n      {selectedTable === undefined ? (\n        <h2 style={{ flex: 1, textAlign: \"center\" }}>Please select a table</h2>\n      ) : (\n        <Table table={selectedTable} />\n      )}\n      {isNamePopupOpen && <TableInfoPopup handleClose={toggleNamePopup} />}\n      {isEmptyCellPopupOpen && <EmptyCellPopup />}\n      {isActionCellPopupOpen && <ActionCellPopup />}\n      {isInfoCellPopupOpen && <InfoCellPopup />}\n      {noTypeCellPopupOpen && <NoTypeCellPopup />}\n      {imageCellPopupOpen && <ImageCellPopup />}\n      {formatCellsPopupOpen && <FormatCellsPopup />}\n    </Container>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { closeSnackbar } from \"../../state/actions/snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nconst AppSnackbar = () => {\n  const classes = useStyles();\n  const open = useSelector((store) => store.snackbar.open);\n  const message = useSelector((store) => store.snackbar.message);\n  const dispatch = useDispatch();\n\n  if (!open) {\n    return null;\n  }\n\n  const close = () => {\n    dispatch(closeSnackbar());\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      open={open}\n      autoHideDuration={5000}\n      onClose={close}\n      message={<span>{message}</span>}\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={close}\n        >\n          <CloseIcon />\n        </IconButton>,\n      ]}\n    />\n  );\n};\n\nexport default AppSnackbar;\n","export const SIGN_IN = \"user/SIGN_IN\";\nexport const SIGN_IN_SUCCESS = \"user/SIGN_IN_SUCCESS\";\nexport const SIGN_IN_FAILED = \"user/SIGN_IN_FAILED\";\n","import { makeStyles } from \"@material-ui/core\";\nimport { Button, Card, TextField, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signIn } from \"../../state/actions/user\";\n\nconst useStyles = makeStyles({\n  title: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: \"bold\",\n  },\n  container: {\n    background: \"white\",\n    borderRadius: \"10px\",\n    maxWidth: \"500px\",\n    alignContent: \"center\",\n    padding: \"10px\",\n    display: \"flex\",\n    marginTop: \"30px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    margin: \"10px\",\n    minWidth: \"200px\",\n    background: \"green\",\n    fontWeight: \"bold\",\n    color: \"white\",\n    \"&:hover\": {\n      background: \"black\",\n    },\n  },\n});\n\nconst SignIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const user = useSelector((store) => store.user.user);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user !== undefined) {\n      history.push(\"/home\");\n    }\n  }, [user, history]);\n\n  const handleSubmit = () => {\n    dispatch(signIn({ email, password }));\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <Card className={classes.container}>\n      <Typography className={classes.title}>Sign In</Typography>\n      <TextField\n        required\n        fullWidth\n        name=\"email\"\n        variant=\"outlined\"\n        placeholder=\"Email\"\n        value={email}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handleEmailChange}\n      />\n      <TextField\n        required\n        fullWidth\n        name=\"password\"\n        variant=\"outlined\"\n        placeholder=\"Password\"\n        value={password}\n        type={\"password\"}\n        rows={1}\n        style={{ marginBottom: \"10px\", marginTop: \"10px\" }}\n        onChange={handlePasswordChange}\n      />\n      <Button className={classes.button} onClick={handleSubmit}>\n        Submit\n      </Button>\n    </Card>\n  );\n};\nexport default SignIn;\n","import { SIGN_IN, SIGN_IN_SUCCESS, SIGN_IN_FAILED } from \"../actionTypes/user\";\nimport { auth, db } from \"../../firebase\";\n\nexport function signIn(user) {\n  return async (dispatch) => {\n    dispatch({ type: SIGN_IN });\n    try {\n      auth\n        .signInWithEmailAndPassword(user.email, user.password)\n        .then((value) => {\n          db.collection(\"users\")\n            .doc(value.user.uid)\n            .get()\n            .then((snapshot) => {\n              const dbUser = snapshot.data();\n              if (dbUser.role === \"admin\") {\n                dispatch({ type: SIGN_IN_SUCCESS, user: dbUser });\n              } else {\n                dispatch({ type: SIGN_IN_FAILED });\n              }\n            });\n        });\n    } catch (e) {\n      dispatch({ type: SIGN_IN_FAILED });\n    }\n  };\n}\n","import \"./App.css\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Home from \"./components/home/Home\";\nimport AppSnackbar from \"./components/popup/AppSnackbar\";\nimport SignIn from \"./components/sign-in/SignIn\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <CssBaseline />\n      <div\n        style={{\n          minHeight: \"100vh\",\n          width: \"100%\",\n          margin: \"0px\",\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/home\" component={Home} />\n          <Route path=\"/\" component={SignIn} />\n        </Switch>\n      </div>\n      <AppSnackbar />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import { SHOW_SNACKBAR, CLOSE_SNACKBAR } from \"../actionTypes/snackbar\";\n\nconst initialState = {\n  open: false,\n  message: \"\",\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SHOW_SNACKBAR: {\n      return { ...state, open: true, message: action.message };\n    }\n    case CLOSE_SNACKBAR: {\n      return { ...state, open: false, message: \"\" };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_TABLES,\n  GET_TABLES_SUCCESS,\n  GET_TABLES_FAILED,\n  ADD_TABLE,\n  SET_SELECTED_TABLE,\n  DELETE_TABLE,\n  DELETE_TABLE_SUCCESS,\n  DELETE_TABLE_FAILED,\n  SET_BIG_IMAGE,\n  SET_TABLE_JUST_CREATED_FALSE,\n  REMOVE_BIG_IMAGE,\n} from \"../actionTypes/tables\";\n\nconst initialState = {\n  tables: [],\n  selectedTable: undefined,\n  tableJustCreated: false,\n  bigImage: undefined,\n  bigImageCell: undefined,\n  error: undefined,\n};\n\nexport default function tablesReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case GET_TABLES: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case REMOVE_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: undefined,\n        bigImageCell: undefined,\n        error: undefined,\n      };\n    }\n    case SET_TABLE_JUST_CREATED_FALSE: {\n      return {\n        ...state,\n        tableJustCreated: false,\n      };\n    }\n    case GET_TABLES_SUCCESS: {\n      return { ...state, tables: action.tables };\n    }\n    case GET_TABLES_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case ADD_TABLE: {\n      const newTables = state.tables;\n      newTables.push(action.table);\n      return {\n        ...state,\n        tableJustCreated: true,\n        selectedTable: action.table,\n        tables: newTables,\n      };\n    }\n    case SET_BIG_IMAGE: {\n      return {\n        ...state,\n        bigImage: action.image,\n        bigImageCell: action.cell,\n      };\n    }\n    case SET_SELECTED_TABLE: {\n      return {\n        ...state,\n        selectedTable: action.table,\n        bigImage: undefined,\n        bigImageCell: undefined,\n      };\n    }\n    case DELETE_TABLE: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case DELETE_TABLE_SUCCESS: {\n      const newTables = state.tables;\n      state.tables.forEach((table) => {\n        if (table.id === action.id) {\n          newTables.remove(table);\n        }\n      });\n      return {\n        ...state,\n        selectedTable: undefined,\n        tables: newTables,\n      };\n    }\n    case DELETE_TABLE_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELL_FILE_SUCCESS,\n  GET_CELL_NAME_FILE_SUCCESS,\n  GET_CELL_IMAGE_FILE_SUCCESS,\n} from \"../actionTypes/cell\";\nimport {\n  SHOW_ACTION_POPUP,\n  CLOSE_POPUP,\n  SHOW_INFO_POPUP,\n  SHOW_NO_TYPE_POPUP,\n  BEGIN_CUSTOM_SELECT,\n  SUBMIT_NO_TYPE_POPUP,\n  CELL_TO_UPDATE_CUSTOM_CELL_SELECTED,\n  CUSTOM_CELLS_SUBMITED,\n  CANCEL_CUSTOM_CELLS,\n  SHOW_EMPTY_CELL_POPUP,\n  SHOW_IMAGE_CELL_POPUP,\n  SHOW_FORMAT_CELLS_POPUP,\n} from \"../actionTypes/popups\";\n\nconst initialState = {\n  actionPopupOpen: false,\n  infoPopupOpen: false,\n  noTypePopupOpen: false,\n  emptyCellPopupOpen: false,\n  imagePopupOpen: false,\n  formatCellsPopupOpen: false,\n  cell: undefined,\n  cellsRow: undefined,\n  cellFile: undefined,\n  cellNameFile: undefined,\n  cellImageFile: undefined,\n  cellToUpdate: undefined,\n  cellToUpdateCustomCells: undefined,\n  letsUpdate: false,\n};\n\nexport default function snackbarReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case CANCEL_CUSTOM_CELLS: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case CUSTOM_CELLS_SUBMITED: {\n      return {\n        ...state,\n        cellToUpdate: undefined,\n        cellToUpdateCustomCells: undefined,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SHOW_ACTION_POPUP: {\n      return {\n        ...state,\n        actionPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case BEGIN_CUSTOM_SELECT: {\n      return {\n        ...state,\n        actionPopupOpen: false,\n        cellToUpdate: action.cell,\n        cellToUpdateCustomCells: [],\n      };\n    }\n    case CELL_TO_UPDATE_CUSTOM_CELL_SELECTED: {\n      const cells = state.cellToUpdateCustomCells;\n      if (cells.includes(action.cell)) {\n        const index = cells.indexOf(action.cell);\n        cells.splice(index, 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        cellToUpdateCustomCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case SUBMIT_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: false,\n        actionPopupOpen: action.isAction,\n        infoPopupOpen: !action.isAction,\n      };\n    }\n    case SHOW_NO_TYPE_POPUP: {\n      return {\n        ...state,\n        noTypePopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_EMPTY_CELL_POPUP: {\n      return {\n        ...state,\n        emptyCellPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_IMAGE_CELL_POPUP: {\n      if (action.cell !== undefined) {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n          cell: action.cell,\n          cellsRow: action.cellsRow,\n        };\n      } else {\n        return {\n          ...state,\n          imagePopupOpen: true,\n          emptyCellPopupOpen: false,\n        };\n      }\n    }\n    case SHOW_INFO_POPUP: {\n      return {\n        ...state,\n        infoPopupOpen: true,\n        cell: action.cell,\n        cellsRow: action.cellsRow,\n      };\n    }\n    case SHOW_FORMAT_CELLS_POPUP: {\n      return {\n        ...state,\n        formatCellsPopupOpen: true,\n      };\n    }\n    case CLOSE_POPUP: {\n      return {\n        ...state,\n        infoPopupOpen: false,\n        actionPopupOpen: false,\n        noTypePopupOpen: false,\n        emptyCellPopupOpen: false,\n        imagePopupOpen: false,\n        formatCellsPopupOpen: false,\n        cell: undefined,\n        cellsRow: undefined,\n        cellFile: undefined,\n        cellNameFile: undefined,\n        cellImageFile: undefined,\n      };\n    }\n    case GET_CELL_NAME_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellNameFile: action.file,\n      };\n    }\n    case GET_CELL_IMAGE_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellImageFile: action.file,\n      };\n    }\n    case GET_CELL_FILE_SUCCESS: {\n      return {\n        ...state,\n        cellFile: action.file,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {\n  GET_CELLS_ROWS,\n  GET_CELLS_ROWS_SUCCESS,\n  GET_CELLS_ROWS_FAILED,\n  CLEAR_CELLS_ROWS,\n  ADD_SELECTING_CELL,\n  BEGIN_FORMAT_SELECTING,\n  STOP_FORMAT_SELECTING,\n  UPDATE_CELLS_ROWS,\n} from \"../actionTypes/cellsRows\";\nimport { UPDATE_CELL_SUCCESS } from \"../actionTypes/cell\";\nconst initialState = {\n  cellsRows: [],\n  selectedCells: undefined,\n  error: undefined,\n  letsUpdate: false,\n  isSelecting: false,\n};\n\nexport default function cellsRowsReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case UPDATE_CELL_SUCCESS: {\n      let rowIndex;\n      let cellIndex;\n      state.cellsRows.forEach((cellsRow) => {\n        cellsRow.cells.forEach((cell) => {\n          if (\n            cell.columnIndex === action.cell.columnIndex &&\n            cell.rowIndex === action.cell.rowIndex\n          ) {\n            rowIndex = state.cellsRows.indexOf(cellsRow);\n            cellIndex = cellsRow.cells.indexOf(cell);\n          }\n        });\n      });\n      state.cellsRows[rowIndex].cells[cellIndex] = action.cell;\n      return { ...state, error: undefined };\n    }\n    case BEGIN_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: true,\n        selectedCells: [],\n      };\n    }\n    case STOP_FORMAT_SELECTING: {\n      return {\n        ...state,\n        isSelecting: false,\n        selectedCells: undefined,\n      };\n    }\n    case ADD_SELECTING_CELL: {\n      var cells = state.selectedCells;\n      if (cells.includes(action.cell)) {\n        cells.splice(cells.indexOf(action.cell), 1);\n      } else {\n        cells.push(action.cell);\n      }\n      return {\n        ...state,\n        selectedCells: cells,\n        letsUpdate: !state.letsUpdate,\n      };\n    }\n    case GET_CELLS_ROWS: {\n      return {\n        ...state,\n        error: undefined,\n      };\n    }\n    case GET_CELLS_ROWS_SUCCESS: {\n      action.data.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return { ...state, cellsRows: action.data };\n    }\n    case UPDATE_CELLS_ROWS: {\n      action.cellsRows.sort((a, b) => (a.rowIndex > b.rowIndex ? 1 : -1));\n      return {\n        ...state,\n        cellsRows: action.cellsRows,\n        selectedCells: undefined,\n        isSelecting: false,\n      };\n    }\n    case GET_CELLS_ROWS_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    case CLEAR_CELLS_ROWS: {\n      return {\n        ...state,\n        cellsRows: [],\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { SIGN_IN, SIGN_IN_SUCCESS, SIGN_IN_FAILED } from \"../actionTypes/user\";\n\nconst initialState = {\n  user: undefined,\n  error: false,\n};\n\nexport default function userReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case SIGN_IN: {\n      return { ...state, error: false };\n    }\n    case SIGN_IN_SUCCESS: {\n      return { ...state, user: action.user };\n    }\n    case SIGN_IN_FAILED: {\n      return {\n        ...state,\n        error: true,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport snackbar from \"./snackbar\";\nimport tables from \"./tables\";\nimport popups from \"./popups\";\nimport cellsRows from \"./cellsRows\";\nimport user from \"./user\";\n\nexport default combineReducers({\n  snackbar,\n  tables,\n  popups,\n  cellsRows,\n  user,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport reducers from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/* eslint-enable */\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\"],\n};\nconst pReducer = persistReducer(persistConfig, reducers);\n\nconst store = createStore(\n  pReducer,\n  compose(applyMiddleware(thunk), composeEnhancers())\n);\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./state/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}